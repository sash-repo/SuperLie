(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    370492,      12093]
NotebookOptionsPosition[    228098,       8473]
NotebookOutlinePosition[    341122,      11209]
CellTagsIndexPosition[    336958,      11050]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["SuperLie:  Reference Manual", "Title",
 Evaluatable->False,
 PageBreakAbove->True,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"Reference Manual", "c:1"}],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellTags->"c:2"],

Cell[TextData[{
 "The ",
 StyleBox["SuperLie",
  FontWeight->"Bold"],
 " Package is a tool for calculation of various data for Lie algebras and \
superalgebras. Using ",
 StyleBox["SuperLie",
  FontWeight->"Bold"],
 " Package you can build vector (super)spaces, algebras and modules over \
algebras; make the numeric and symbolic calculations with vectors (e.g., find \
homology and cohomology, relations between generators in an algebra, vacuum \
vectors, and so on); convert the results to ",
 StyleBox["TeX",
  FontFamily->"Courier"],
 " format."
}], "Text",
 TextAlignment->Left,
 TextJustification->1],

Cell[CellGroupData[{

Cell["Packages used by SuperLie", "Subsection",
 CellTags->{"c:3", "b:1.0.0"}],

Cell[TextData[{
 "This package uses two other packages that are designed as part of ",
 StyleBox["SuperLie",
  FontWeight->"Bold"],
 " project, but can be used separately. These packages are: ",
 StyleBox["Domain.m",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " introducing the object-oriented style in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", ",
 StyleBox["Enum.m",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " defining the generalized ",
 StyleBox["For",
  FontFamily->"Courier"],
 " loop.\nEach of these packages is described in a separate document."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->"b:1.0.0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vectors and scalars. Domains.", "Subsection",
 CellTags->{"c:4", "b:1.0.1"}],

Cell[CellGroupData[{

Cell[TextData[{
 "Vectors in ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "and in mathematics"
}], "Subsubsection",
 CellTags->{"c:5", "b:1.0.1"}],

Cell[TextData[{
 "In ",
 StyleBox["Mathematica,",
  FontSlant->"Italic"],
 " a ",
 StyleBox["vector",
  FontSlant->"Italic"],
 " is a list of coordinates ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "1"], ",", " ", 
     SubscriptBox["x", "2"], ",", " ", "...", " ", ",", " ", 
     SubscriptBox["x", "n"]}], "}"}], TraditionalForm]]],
 ". This represents an element of the standard vector space ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "n"], TraditionalForm]]],
 " with a ",
 StyleBox["fixed",
  FontSlant->"Italic"],
 " numeric ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 ". The vector space as a whole is ",
 StyleBox["never",
  FontSlant->"Italic"],
 " used and it has no name.\nIn mathematics, the vectors are elements of ",
 StyleBox["any",
  FontSlant->"Italic"],
 " vector space, not only ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "n"], TraditionalForm]]],
 ". There are also the spaces of polynomials, spaces of vector fields, spaces \
of differential operators and many other spaces. Every space is used with \
some personal name, e.g., ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicA]", "=", 
    RowBox[{
     SuperscriptBox["\[CapitalOmega]", "\[FilledSmallCircle]"], "(", 
     SuperscriptBox["\[DoubleStruckCapitalR]", "n"], ")"}]}], 
   TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GothicG]", "=", 
    RowBox[{"\[GothicG]\[GothicL]", "(", "n", ")"}]}], TraditionalForm]]],
 ". The vectors are denoted so that it is possible to determine the space \
containing each vector: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["v", "1"], "+", 
     RowBox[{"2", 
      SubscriptBox["v", "2"]}]}], "\[Element]", "V"}], TraditionalForm]]],
 ",  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["g", "i", "j"], "\[Element]", 
    RowBox[{"\[GothicG]\[GothicL]", "(", "n", ")"}]}], TraditionalForm]]],
 ",  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], 
     RowBox[{
      SubscriptBox[
       StyleBox["dx",
        FontSlant->"Italic"], "1"], "\[Wedge]", 
      SubscriptBox[
       StyleBox["dx",
        FontSlant->"Italic"], "2"]}]}], "\[Element]", 
    RowBox[{
     SuperscriptBox["\[CapitalOmega]", "\[FilledSmallCircle]"], "(", 
     SuperscriptBox["\[DoubleStruckCapitalR]", "n"], ")"}]}], 
   TraditionalForm]]],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->"b:1.0.1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vectors in SuperLie", "Subsubsection",
 CellTags->{"c:6", "b:1.0.1"}],

Cell[TextData[{
 "The vectors in ",
 StyleBox["SuperLie",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "  are represented in a symbolic form using the basis of the space. All \
vectors are represented as linear combinations of the elements of the basis \
with scalar coefficients. Each element of the basis of the vector space has a \
symbolic name. These names can be symbols (",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   StyleBox["dt",
    FontSlant->"Italic"], TraditionalForm]]],
 "), indexed symbols (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["g", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]]],
 "), expressions involving vector operations (",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "[", 
    SubscriptBox["x", "2"], "]"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["p", "2"], "*", 
    SuperscriptBox["q", "2"]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["dx",
      FontSlant->"Italic"], "1"], "\[Wedge]", 
    SubscriptBox[
     StyleBox["dx",
      FontSlant->"Italic"], "2"]}], TraditionalForm]]],
 ") or more sophisticated expressions. The only requirement is that the \
vectors must be declared as vectors and there must exist a unique \"normal\" \
form of such expressions (two expressions represent the same vector if and \
only if the operation of \"normalization\" transforms them to the identical \
expressions)."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->"b:1.0.1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vectors and Scalars", "Subsubsection",
 CellTags->{"c:7", "b:1.0.1"}],

Cell[TextData[{
 "All symbols representing vectors must be declared as members of ",
 StyleBox["Vector", "Program"],
 " domain. All symbols representing scalar coefficients and indices must be \
declared as members of ",
 StyleBox["Scalar", "Program"],
 " domain. All undeclared symbols are members of ",
 StyleBox["Common", "Program"],
 " domain.\nThe declaration of domain of the symbol is not necessary if a \
value was assigned to the symbol, e.g., if  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"c", "*", 
     SubscriptBox["v", "1"]}]}], TraditionalForm]]],
 ", the symbol ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 " must be ",
 StyleBox["Vector", "Program"],
 ", ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]]],
 " must be ",
 StyleBox["Scalar", "Program"],
 " and ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " can be undeclared."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->"b:1.0.1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vectors and polynomials. The multiplication", "Subsubsection",
 CellTags->{"c:8", "b:1.0.1"}],

Cell[TextData[{
 "The vectors in ",
 StyleBox["SuperLie",
  FontWeight->"Bold"],
 " look like the polynomials in ",
 StyleBox["Mathematica.",
  FontSlant->"Italic"],
 " There is only a difference in the meaning of the multiplication. For \
vectors, ",
 StyleBox["multiplication",
  FontSlant->"Italic"],
 " is a generic name for several different associative operations: the tensor \
product, the [anti]symmetric product, the multiplication in the enveloping \
algebra, the composition of the differential operators. Most of the \
multiplications have the same traditional notation as ordinary multiplication \
(except for the tensor and antisymmetric product). The multiplication of \
vectors is, in general, ",
 StyleBox["noncommutative",
  FontSlant->"Italic"],
 ". "
}], "Text",
 CellChangeTimes->{{3.4213253927811966`*^9, 3.4213254153436403`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->"b:1.0.1"],

Cell[TextData[{
 StyleBox["SuperLie",
  FontWeight->"Bold"],
 " allows one to use the traditional multiplication in the front end input. \
In the internal format it uses three different operations: ",
 StyleBox["Times",
  FontFamily->"Courier"],
 " for multiplications of scalars, ",
 StyleBox["VTimes",
  FontFamily->"Courier"],
 " for vectors and ",
 StyleBox["SVTimes",
  FontFamily->"Courier"],
 " to multiply vectors by scalars."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->"b:1.0.1"],

Cell[TextData[{
 "The operation ",
 StyleBox["VTimes",
  FontFamily->"Courier"],
 " is not commutative. This means that the factors are not ordered \
automatically. Instead, special operations are provided to order the factors, \
for each type of multiplication."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->"b:1.0.1"],

Cell[TextData[{
 "The tensor product is denoted by ",
 Cell[BoxData[
  FormBox["**", TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox["\[CircleTimes]", TraditionalForm]]],
 " (CircleTimes). The antisymmetric product is denoted by ",
 Cell[BoxData[
  FormBox["\[Wedge]", TraditionalForm]]],
 " (Wedge). "
}], "Text",
 CellChangeTimes->{{3.4213254361135054`*^9, 3.421325437054859*^9}},
 CellTags->"b:1.0.1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vector operations.", "Subsection",
 CellTags->{"c:9", "b:1.0.2"}],

Cell[TextData[{
 "The arithmetic operations ",
 Cell[BoxData[
  FormBox["+", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["-", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["*", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["/", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["^", TraditionalForm]]],
 " can be used with vectors as well as with scalars. The multiplication ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", "*", "v", "*"}], "..."}], TraditionalForm]]],
 " and power ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["v", "n"], TraditionalForm]]],
 " of vectors are usually interpreted as an associative product and power, \
respectively. There are also defined operations of tensor multiplication ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", "\[CircleTimes]", "v", "\[CircleTimes]"}], "..."}], 
   TraditionalForm]]],
 " , exterior multiplication ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", "\[Wedge]", "v", "\[Wedge]"}], "..."}], TraditionalForm]]],
 " and the tensor power  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["v", 
    RowBox[{"\[CircleTimes]", "n"}]], TraditionalForm]]],
 ".\nThe term \"operation\" in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " means the same as \"function\". We will use the term \"operation\" for a \
certain function if\n(a) the commonly used format of the function is \
symbolic, as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "+", "b", "+", "c"}], TraditionalForm]]],
 " instead of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Plus", "Program"], "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}], TraditionalForm]]],
 ". \n(b) when one cannot calculate the result of the function, the \
unevaluated expression is treated as the result. The expression can be \
simplified or modified according to the rules prescribed for this operation.\n\
Every operation in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has a full name, as ",
 StyleBox["Plus", "Program"],
 ", and (optionally) a symbolic name, as ",
 Cell[BoxData[
  FormBox["+", TraditionalForm]]],
 "."
}], "Text",
 CellMargins->{{12, Inherited}, {Inherited, Inherited}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->"b:1.0.2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linearity and other properties.", "Subsection",
 CellTags->{"c:10", "b:1.0.3"}],

Cell[TextData[{
 "The linear functions and operators must first be defined on a basis and \
then expanded via linearity. This expansion will be made automatically if you \
declare that the function is linear. In the same way some other properties \
can be declared, e.g., homogeneity, additivity, (super)symmetry, Leibniz \
rule. You can declare and cancel the properties of functions as you need.\n\n\
Properties are defined using ",
 StyleBox["Domain",
  FontWeight->"Bold"],
 " package (see the corresponding document)."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->"b:1.0.3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Space constructors", "Subsection",
 CellTags->{"c:11", "b:1.0.4"}],

Cell["\<\
Space constructors are commands to build (or declare) vector spaces, algebras \
and modules. There are constructors of vector and tensor spaces; algebra \
constructors (of matrices, polynomials, vector fields; free algebras; \
algebras with Cartan matrix; subalgebras); module constructors (tensor \
modules, free modules, submodules, comodules, and so on). More constructors \
can be added.\
\>", "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->"b:1.0.4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tools", "Subsection",
 CellTags->{"c:12", "b:1.0.5"}],

Cell[TextData[{
 StyleBox["SuperLie",
  FontWeight->"Bold"],
 " package provides a number of tools for manipulation with vector \
expressions, such as computing \"normal\" form of expressions, solving vector \
equations, etc."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->"b:1.0.5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vectors and scalars", "Section",
 CellTags->"c:13"],

Cell[CellGroupData[{

Cell["Vector, Scalar and Common domains.", "Subsection",
 CellTags->{"sli_domain", "c:14", "b:1.1.0"}],

Cell[TextData[{
 "Symbolic names can represent the vectors in two ways: either the symbol ",
 StyleBox["stands for",
  FontVariations->{"Underline"->True}],
 " a value or it is the value ",
 StyleBox["itself",
  FontVariations->{"Underline"->True}],
 ". For example, if we assign   ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", " ", "=", 
    RowBox[{"c", "*", 
     SubscriptBox["v", "1"]}]}], TraditionalForm]]],
 ",  the symbol ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 "  stands for the value ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "*", 
    SubscriptBox["v", "1"]}], TraditionalForm]]],
 ", while ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "1"], TraditionalForm]]],
 " does not stand for any value, it is a value itself.\nAll symbols \
representing vector values must be declared as members of ",
 StyleBox["Vector", "Program"],
 " domain. All symbols representing scalar values (coefficients and indices) \
must be declared as members of ",
 StyleBox["Scalar", "Program"],
 " domain. All numbers and constants are scalars by definition. All \
undeclared symbols are members of ",
 StyleBox["Common", "Program"],
 " domain.\nThe declaration of domain is not necessary (and useless) for the \
symbols standing for any value (as ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 "  in the example above)."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.0"}],

Cell[TextData[{
 "If a symbol ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 " is defined to be a vector or scalar, any expression ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "[", "...", "]"}], TraditionalForm]]],
 " with header ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 " and  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "..."], TraditionalForm]]],
 " with any indices will also be a vector (resp. scalar)."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.0"}],

Cell[CellGroupData[{

Cell["Vector, UnVector, VectorQ", "Subsubsection",
 CellTags->{"sli_domain", "c:15", "b:1.1.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Vector", "Program"], "[", 
    RowBox[{
     StyleBox["obj",
      FontSlant->"Italic"], ",", " ", "..."}], "]"}], TraditionalForm]]],
 " defines objects (they must be symbols) as vectors. Another way to define a \
vector (together with other properties of the objects) is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Define", "Program"], "[", 
    RowBox[{
     StyleBox["obj",
      FontSlant->"Italic"], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["Vector", "Program"], ",", " ", 
       RowBox[{
        StyleBox["property",
         FontSlant->"Italic"], "..."}]}], "}"}]}], "]"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["SetProperties", "Program"], "[", 
    RowBox[{
     StyleBox["obj",
      FontSlant->"Italic"], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["Vector", "Program"], ",", " ", 
       RowBox[{
        StyleBox["property",
         FontSlant->"Italic"], "..."}]}], "}"}]}], "]"}], TraditionalForm]]],
 ", see ",
 StyleBox["Domain",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " Package.\nVector-valued operations must also be declared as Vectors, e.g., \
",
 StyleBox["Vector[Times]", "Program"],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["SetProperties", "Program"], "[", 
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], ",", " ", 
     RowBox[{
      StyleBox["Vector", "Program"], "\[Rule]", "i"}]}], "]"}], 
   TraditionalForm]]],
 " tells that the ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 "-th argument of the operation ",
 StyleBox["op",
  FontSlant->"Italic"],
 " must be a vector. Here ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " can be an integer, ",
 StyleBox["First", "Program"],
 ", ",
 StyleBox["Last", "Program"],
 " or ",
 StyleBox["All", "Program"],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["UnVector", "Program"], "[", 
    RowBox[{
     StyleBox["obj",
      FontSlant->"Italic"], ",", " ", "..."}], "]"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["ClearProperties", "Program"], "[", 
    RowBox[{
     StyleBox["obj",
      FontSlant->"Italic"], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["Vector", "Program"], ",", " ", "..."}], "}"}]}], "]"}], 
   TraditionalForm]]],
 " clear the vector definition."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VectorQ", "Program"], "[", "x", "]"}], TraditionalForm]]],
 " returns ",
 StyleBox["True", "Program"],
 " if ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " is a vector (an object of ",
 StyleBox["Vector", "Program"],
 " domain) and ",
 StyleBox["False", "Program"],
 " otherwise. This definition shadows the system function with the same name, \
",
 StyleBox["VectorQ", "Program"],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.0"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scalar, UnScalar, ScalarQ", "Subsubsection",
 CellTags->{"sli_domain", "c:16", "b:1.1.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Scalar", "Program"], "[", 
    RowBox[{
     StyleBox["obj",
      FontSlant->"Italic"], ",", " ", "..."}], "]"}], TraditionalForm]]],
 " defines objects (they must be symbols) as scalars. Another way to define a \
scalar (together with other properties of an object) is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Define", "Program"], "[", 
    RowBox[{
     StyleBox["obj",
      FontSlant->"Italic"], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["Scalar", "Program"], ",", " ", 
       RowBox[{
        StyleBox["property",
         FontSlant->"Italic"], " ", "..."}]}], "}"}]}], "]"}], 
   TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["SetProperties", "Program"], "[", 
    RowBox[{
     StyleBox["obj",
      FontSlant->"Italic"], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["Scalar", "Program"], ",", " ", 
       RowBox[{
        StyleBox["property",
         FontSlant->"Italic"], " ", "..."}]}], "}"}]}], "]"}], 
   TraditionalForm]]],
 ", see ",
 StyleBox["Domain",
  FontFamily->"Courier"],
 " Package.\nScalar-valued operations must also be declared as Scalars, e.g., \
",
 StyleBox["Scalar[Times]", "Program"],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["SetProperties", "Program"], "[", 
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], ",", " ", 
     RowBox[{
      StyleBox["Scalar", "Program"], "\[Rule]", "i"}]}], "]"}], 
   TraditionalForm]]],
 " tells that the ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 "-th argument of the operation ",
 StyleBox["op",
  FontSlant->"Italic"],
 " must be a scalar. Here ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " can be an integer, ",
 StyleBox["First", "Program"],
 ", ",
 StyleBox["Last", "Program"],
 " or ",
 StyleBox["All", "Program"],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["UnScalar", "Program"], "[", 
    RowBox[{
     StyleBox["obj",
      FontSlant->"Italic"], ",", " ", "..."}], "]"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["ClearProperties", "Program"], "[", 
    RowBox[{
     StyleBox["obj",
      FontSlant->"Italic"], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["Scalar", "Program"], ",", " ", "..."}], "}"}]}], "]"}], 
   TraditionalForm]]],
 " clear the scalar definition. "
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["ScalarQ", "Program"], "[", "x", "]"}], TraditionalForm]]],
 " returns ",
 StyleBox["True", "Program"],
 " if ",
 StyleBox["x",
  FontSlant->"Italic"],
 " is a scalar (an object of ",
 StyleBox["Scalar", "Program"],
 " domain) and ",
 StyleBox["False", "Program"],
 " otherwise."
}], "Text",
 CellTags->{"sli_domain", "b:1.1.0"}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generic and specific operations", "Subsection",
 CellTags->{"sli_domain", "c:17", "b:1.1.1"}],

Cell[TextData[{
 "The front end preprocessor examines every input line obtained from the \
front end or terminal and replaces the operations ",
 Cell[BoxData[
  FormBox["+", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["-", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["*", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["/", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["^", TraditionalForm]]],
 " in this line by the \"generic\" operations ",
 StyleBox["GPlus", "Program"],
 ", ",
 StyleBox["GTimes", "Program"],
 " and ",
 StyleBox["GPower", "Program"],
 ". Further on, these operations will be replaced with the operations in \
specific domains, ",
 StyleBox["Vector", "Program"],
 " and ",
 StyleBox["Scalar", "Program"],
 ". The operations in ",
 StyleBox["Scalar", "Program"],
 " domain are built-in ",
 StyleBox["Plus", "Program"],
 ", ",
 StyleBox["Times", "Program"],
 " and ",
 StyleBox["Power,", "Program"],
 " the operations in ",
 StyleBox["Vector", "Program"],
 " domain are named ",
 StyleBox["VPlus", "Program"],
 ", ",
 StyleBox["VTimes", "Program"],
 " and ",
 StyleBox["VPower", "Program"],
 ", the product  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "*", "v"}], TraditionalForm]]],
 "  of a scalar ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]]],
 " by a vector ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 " is named ",
 StyleBox["SVTimes", "Program"],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.1"}],

Cell[TextData[{
 "The generic operation will not be replaced by the specific operation, if\n",
 StyleBox["-",
  FontFamily->"Courier"],
 " the domains of the operands are not defined; \n",
 StyleBox["-",
  FontFamily->"Courier"],
 " the expression containing the operation is not evaluated (due to the ",
 StyleBox["Hold", "Program"],
 " attribute)."
}], "Text",
 CellTags->{"sli_domain", "b:1.1.1"}],

Cell["\<\
The following functions are used internally by the Super Lie package (they \
can be used to define new domains).\
\>", "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.1"}],

Cell[CellGroupData[{

Cell["STimesOp", "Subsubsection",
 CellTags->{"sli_domain", "c:18", "b:1.1.1"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["STimesOp", "Program"], "[", 
    StyleBox["domain",
     FontSlant->"Italic"], "]"}], TraditionalForm]]],
 " gives the name of multiplication operation in the expression \"scalar ",
 StyleBox["*", "Program"],
 " (an element of the domain)\". "
}], "Text",
 CellTags->{"sli_domain", "b:1.1.1"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["PlusOp", "Subsubsection",
 CellTags->{"sli_domain", "c:19", "b:1.1.1"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PlusOp", "Program"], "[", 
    StyleBox["domain",
     FontSlant->"Italic"], "]"}], TraditionalForm]]],
 " gives the name of Plus operation (",
 StyleBox["+", "Program"],
 ") in the domain."
}], "Text",
 CellTags->{"sli_domain", "b:1.1.1"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["PowerOp", "Subsubsection",
 CellTags->{"sli_domain", "c:20", "b:1.1.1"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PowerOp", "Program"], "[", 
    StyleBox["op",
     FontSlant->"Italic"], "]"}], TraditionalForm]]],
 " gives the name of \"power\" operation associated with the \"times\" \
operation ",
 StyleBox["op",
  FontSlant->"Italic"],
 " or ",
 StyleBox["None", "Program"],
 " if the \"power\" operation is not defined.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PowerOp", "Program"], "[", 
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "\[Rule]", 
     StyleBox["name",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 " defines this operation."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.1"}],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["pw",
     FontSlant->"Italic"], "=", 
    RowBox[{
     StyleBox["PowerOp", "Program"], "[", 
     StyleBox["op",
      FontSlant->"Italic"], "]"}]}], TraditionalForm]]],
 " operation is defined with the properties similar to the properties of the \
scalar ",
 StyleBox["Power", "Program"],
 ":\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["pw",
      FontSlant->"Italic"], "[", 
     RowBox[{"x", ",", "0"}], "]"}], "=", 
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "[", "]"}]}], TraditionalForm]]],
 ",\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["pw",
      FontSlant->"Italic"], "[", 
     RowBox[{"x", ",", "1"}], "]"}], "=", "x"}], TraditionalForm]]],
 ",\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["pw",
      FontSlant->"Italic"], "[", 
     RowBox[{
      RowBox[{
       StyleBox["pw",
        FontSlant->"Italic"], "[", 
       RowBox[{"x", ",", "p"}], "]"}], ",", "q"}], "]"}], ":=", 
    RowBox[{
     StyleBox["pw",
      FontSlant->"Italic"], "[", 
     RowBox[{"x", ",", 
      RowBox[{"p", "*", "q"}]}], "]"}]}], TraditionalForm]]],
 ",\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "[", "...", 
     RowBox[{",", " ", 
      RowBox[{
       StyleBox["pw",
        FontSlant->"Italic"], "[", 
       RowBox[{"x", ",", "p"}], "]"}], ",", " ", 
      RowBox[{
       StyleBox["pw",
        FontSlant->"Italic"], "[", 
       RowBox[{"x", ",", "q"}], "]"}], ",", " ", "..."}], "]"}], "=", 
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "[", "...", 
     RowBox[{",", " ", 
      RowBox[{
       StyleBox["pw",
        FontSlant->"Italic"], "[", 
       RowBox[{"x", ",", " ", 
        RowBox[{"p", "+", "q"}]}], "]"}], ",", " ", "..."}], "]"}]}], 
   TraditionalForm]]],
 ".\nThe last property also embraces the case of the implicit first power:\n\t\
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "[", "...", 
     RowBox[{",", " ", "x", ",", " ", 
      RowBox[{
       StyleBox["pw",
        FontSlant->"Italic"], "[", 
       RowBox[{"x", ",", "q"}], "]"}], ",", " ", "..."}], "]"}], "=", 
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "[", "...", 
     RowBox[{",", " ", 
      RowBox[{
       StyleBox["pw",
        FontSlant->"Italic"], "[", 
       RowBox[{"x", ",", " ", 
        RowBox[{"1", "+", "q"}]}], "]"}], ",", " ", "..."}], "]"}]}], 
   TraditionalForm]]],
 "."
}], "Text",
 CellTags->{"sli_domain", "b:1.1.1"}],

Cell[TextData[{
 "If you want to define the power operation associated with the \
(skew)symmetric operation ",
 Cell[BoxData[
  FormBox[
   StyleBox["op",
    FontSlant->"Italic"], TraditionalForm]]],
 ", you must first cancel the symmetry, then define the power operation and \
restore the symmetry:\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["UnSymmetric", "Program"], "[", 
    StyleBox["op",
     FontSlant->"Italic"], "]"}], TraditionalForm]]],
 ";\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PowerOp", "Program"], "[", 
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "\[Rule]", 
     StyleBox["pr",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 "; \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Symmetric", "Program"], "[", 
    StyleBox["op",
     FontSlant->"Italic"], "]"}], TraditionalForm]]],
 ".\nThe reason is that the definition of the (skew)symmetry is different for \
operations with power and for those without power. The same is valid for \
Jacobi and Leibniz properties."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.1"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["SumOp", "Subsubsection",
 CellTags->{"sli_domain", "c:21", "b:1.1.1"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["SumOp", "Program"], "[", 
    StyleBox["op",
     FontSlant->"Italic"], "]"}], TraditionalForm]]],
 " gives the name of \"Sum\" function associated with the \"plus\" operation ",
 StyleBox["op ",
  FontSlant->"Italic"],
 "or ",
 StyleBox["None", "Program"],
 " if the \"Sum\" operation is not defined.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["SumOp", "Program"], "[", 
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "\[Rule]", 
     StyleBox["name",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 " defines this function."
}], "Text",
 CellTags->{"sli_domain", "b:1.1.1"}],

Cell[TextData[{
 "The sum function in the ",
 StyleBox["Scalar", "Program"],
 " domain is the ",
 StyleBox["Sum", "Program"],
 " function (defined in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "), the ",
 StyleBox["Vector", "Program"],
 " sum function is named ",
 StyleBox["VSum", "Program"],
 ". For both ",
 StyleBox["Sum", "Program"],
 " and ",
 StyleBox["VSum", "Program"],
 " the alternative iterator  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{
      StyleBox["to",
       FontSlant->"Italic"], "\[Rule]", 
      StyleBox["from",
       FontSlant->"Italic"]}]}], "}"}], TraditionalForm]]],
 " is defined. If the difference ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["diff",
     FontSlant->"Italic"], "=", 
    RowBox[{
     StyleBox["from",
      FontSlant->"Italic"], "-", 
     StyleBox["to",
      FontSlant->"Italic"]}]}], TraditionalForm]]],
 " is a number, this iterator is replaced by\n\t(a) ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"i", ",", 
     StyleBox["from",
      FontSlant->"Italic"], ",", 
     RowBox[{
      StyleBox["to",
       FontSlant->"Italic"], "-", "1"}]}], "}"}], TraditionalForm]]],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["diff",
     FontSlant->"Italic"], ">", "0"}], TraditionalForm]]],
 ";\n\t(b) ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"i", ",", 
     StyleBox["to",
      FontSlant->"Italic"], ",", 
     RowBox[{
      StyleBox["from",
       FontSlant->"Italic"], "-", "1"}]}], "}"}], TraditionalForm]]],
 " and the whole sum is multiplied by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "1"}], TraditionalForm]]],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["diff",
     FontSlant->"Italic"], "<", "0"}], TraditionalForm]]],
 ".\n\t(c) the whole sum is replaced by ",
 Cell[BoxData[
  FormBox["0", TraditionalForm]]],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["diff",
     FontSlant->"Italic"], "=", "0"}], TraditionalForm]]],
 ";"
}], "Text",
 CellChangeTimes->{{3.421325474548773*^9, 3.421325482019515*^9}, {
  3.4213255495065565`*^9, 3.4213255666411953`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.1"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["CondOp", "Subsubsection",
 CellTags->{"sli_domain", "c:22", "b:1.1.1"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["CondOp", "Program"], "[", 
    StyleBox["domain",
     FontSlant->"Italic"], "]"}], TraditionalForm]]],
 " gives the name of \"If\" operation with values in the ",
 Cell[BoxData[
  FormBox[
   StyleBox["domain",
    FontSlant->"Italic"], TraditionalForm]]],
 " or ",
 StyleBox["None", "Program"],
 " if the \"If\" operation is not defined.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["CondOp", "Program"], "[", 
    RowBox[{
     StyleBox["domain",
      FontSlant->"Italic"], "\[Rule]", 
     StyleBox["name",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 " defines this operation."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.1"}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vector operations", "Subsection",
 CellTags->{"sli_domain", "c:23", "b:1.1.2"}],

Cell[TextData[{
 "The following vector operation are formally defined for any vector \
arguments, regardless of the mathematical meaning. For example, we can write ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "+", "v"}], TraditionalForm]]],
 " even if ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 " are elements of different vector spaces. The meaning of the vector \
expressions in the user's problem, not programer's.\nThe result of applying \
of vector operation to non-vector operands in unpredictable."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.2"}],

Cell[CellGroupData[{

Cell["VPlus, VTimes, VPower", "Subsubsection",
 CellTags->{"sli_domain", "c:24", "b:1.1.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VPlus", "Program"], "[", 
    StyleBox["u",
     FontSlant->"Italic"], ",", 
    StyleBox["v",
     FontSlant->"Italic"], ",", "...", "]"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", "+", "v", "+"}], "..."}], TraditionalForm]]],
 " is the sum of vectors. ",
 StyleBox["VPlus", "Program"],
 " replaces the generic \"",
 StyleBox["+", "Program"],
 "\" if the operands are vectors. The operation is associative, i.e., the \
nested ",
 StyleBox["VPlus", "Program"],
 " will be flattened. Other rules for ",
 StyleBox["VPlus", "Program"],
 " are: operands equal to zero are replaced; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["VPlus", "Program"], "[", "x", "]"}], " ", "=", " ", "x"}], 
   TraditionalForm]]],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["VPlus", "Program"], "[", "]"}], " ", "=", " ", "0"}], 
   TraditionalForm]]],
 ". For the efficiency reasons, the sorting and collection of similar terms \
are not made automatically; use ",
 StyleBox["VNormal", "Program"],
 " or ",
 StyleBox["VCollect", "Program"],
 " to this purpose."
}], "Text",
 CellChangeTimes->{3.4213256093325825`*^9},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VTimes", "Program"], "[", 
    RowBox[{"u", ",", " ", "v", ",", " ", "..."}], "]"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", "*", "v", "*"}], "..."}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", " ", "v"}], " ", "..."}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", "\[Times]", "v", "\[Times]"}], "..."}], TraditionalForm]]],
 " is the multiplication of vectors. ",
 StyleBox["VTimes", "Program"],
 " replaces the generic \"",
 StyleBox["*", "Program"],
 "\" if the operands are vectors. The operation is associative, but not \
commutative. The corresponding \"power\" operation is named ",
 StyleBox["VPower", "Program"],
 ". Other rules are defined as properties (and therefore can be cancelled): ",
 StyleBox["ZeroArg", "Program"],
 ", ",
 StyleBox["IdArg", "Program"],
 ", ",
 StyleBox["Homogen", "Program"],
 ".\nThe operation ",
 StyleBox["VTimes", "Program"],
 " may be used for  multiplication in the associative algebras in the three \
cases: in the (super)commutative case, in the enveloping algebra, in the \
algebra of differential operators. (Though so far we never used this option, ",
 StyleBox["VTimes", "Program"],
 " can also be used for multiplication in the free tensor algebra.) The \
difference only manifests itself when we have to sort the factors; this \
sorting is performed by different functions ",
 StyleBox["SymmetricNormal", "Program"],
 " in the (super)commutative case, ",
 StyleBox["EnvNormal", "Program"],
 " in the enveloping algebra, and ",
 StyleBox["dNormal", "Program"],
 " in the algebra of differential operators."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VPower", "Program"], "[", 
    RowBox[{"v", ",", " ", "n"}], "]"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", " ", "^", "n"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["v", "n"], TraditionalForm]]],
 "  is the (super)symmetric power of a vector. ",
 StyleBox["VPower", "Program"],
 " replaces the generic \"",
 StyleBox["^", "Program"],
 "\" if the first operand is a vector."
}], "Text",
 CellTags->{"sli_domain", "b:1.1.2"}],

Cell[TextData[{
 "Operations ",
 StyleBox["-", "Program"],
 " and ",
 StyleBox["/ ", "Program"],
 "are also available for vectors. The expression ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "-", "v"}], TraditionalForm]]],
 " is equivalent to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VPlus", "Program"], "[", 
    RowBox[{
     FormBox["u",
      TraditionalForm], ",", 
     RowBox[{
      StyleBox["SVTimes", "Program"], "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       FormBox["v",
        TraditionalForm]}], "]"}]}], "]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "/", "v"}], TraditionalForm]]],
 " is equivalent to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VTimes", "Program"], "[", 
    RowBox[{
     FormBox["u",
      TraditionalForm], ",", 
     RowBox[{
      StyleBox["VPower", "Program"], "[", 
      RowBox[{
       FormBox["v",
        TraditionalForm], ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "]"}], TraditionalForm]]],
 ".\nThe operation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "/", "v"}], TraditionalForm]]],
 " is always defined, though does not always have a mathematical sense."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.2"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["SVTimes", "Subsubsection",
 CellTags->{"sli_domain", "c:25", "b:1.1.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["SVTimes", "Program"], "[", 
    RowBox[{"s", ",", " ", "v"}], "]"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "*", "v"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", " ", "v"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "\[Times]", "v"}], TraditionalForm]]],
 " is the product of a scalar ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]]],
 " by a vector ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 ". ",
 StyleBox["SVTimes", "Program"],
 " replaces the generic \"",
 StyleBox["*", "Program"],
 "\" if the first operand is a scalar and the second one is a vector. In case \
of several operands, the expression ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["GTimes", "Program"], "[", 
    RowBox[{
     SubscriptBox["s", "1"], ",", "...", ",", 
     SubscriptBox["v", "1"], ",", "..."}], "]"}], TraditionalForm]]],
 " is replaced by  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["SVTimes", "Program"], "[", 
    RowBox[{
     RowBox[{
      StyleBox["Times", "Program"], "[", 
      RowBox[{
       SubscriptBox["s", "1"], ",", "..."}], "]"}], ",", 
     RowBox[{
      StyleBox["VTimes", "Program"], "[", 
      RowBox[{
       SubscriptBox["v", "1"], ",", "..."}], "]"}]}], "]"}], 
   TraditionalForm]]],
 ". The rules for evaluation of ",
 StyleBox["SVTimes", "Program"],
 " are: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "*", "v"}], "=", "v"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"0", "*", "v"}], "=", "0"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"c", "*", "0"}], "=", "0"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "*", 
     RowBox[{"(", 
      RowBox[{"b", "*", "v"}], ")"}]}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", " ", "b"}], ")"}], "*", "v"}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.4213256296618147`*^9, 3.421325634148266*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.2"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["CircleTimes (tp), tPower", "Subsubsection",
 CellTags->{"sli_domain", "c:26", "b:1.1.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["CircleTimes", "Program"], "[", 
    RowBox[{"u", ",", " ", "v", ",", " ", "..."}], "]"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["tp", "Program"], "[", 
    RowBox[{"u", ",", " ", "v", ",", " ", "..."}], "]"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", " ", "\[CircleTimes]", " ", "v", " ", "\[CircleTimes]"}], 
    " ", "..."}], TraditionalForm]]],
 "  is the tensor multiplication (the operation in the tensor algebra). The \
operation is associative. The corresponding \"power\" operation is named ",
 StyleBox["tPower", "Program"],
 ". The evaluation rules of ",
 StyleBox["CircleTimes", "Program"],
 " are ",
 StyleBox["Linear", "Program"],
 " and ",
 StyleBox["IdArg", "Program"],
 ". "
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["tPower", "Program"], "[", 
    RowBox[{"v", ",", " ", "n"}], "]"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", " ", "^", 
    RowBox[{"\[CircleTimes]", " ", "n"}]}], TraditionalForm]]],
 " of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["v", 
    RowBox[{"\[CircleTimes]", "n"}]], TraditionalForm]]],
 "  is the ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 "-th tensor power of the vector ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.2"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wedge, wedge, wPower", "Subsubsection",
 CellChangeTimes->{{3.421325873682699*^9, 3.421325880182045*^9}},
 CellTags->{"sli_domain", "c:27", "b:1.1.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Wedge", "Null",
     FontFamily->"Courier New"], "[", 
    RowBox[{"u", ",", " ", "v", ",", " ", "..."}], "]"}], TraditionalForm]]],
 " or  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", "\[Wedge]", "v", "\[Wedge]"}], " ", "..."}], 
   TraditionalForm]]],
 "  is the exterior multiplication (the operation in the exterior algebra). \
The operation is associative. The evaluation rules of ",
 StyleBox["Wedge", "Program"],
 " are ",
 StyleBox["Linear", "Program"],
 ", ",
 StyleBox["Symmetric", "Program"],
 " and ",
 StyleBox["IdArg", "Program"],
 ". After sorting the operands, ",
 StyleBox["Wedge",
  FontFamily->"Courier New"],
 " is replaced by ",
 StyleBox["wedge",
  FontFamily->"Courier New"],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["wedge", "Program"], "[", 
    RowBox[{
     SubscriptBox["e", "1"], ",", "...", ",", 
     SubscriptBox["e", "n"]}], "]"}], TraditionalForm]]],
 " is the internal representation of the basis of exterior algebras. The \
external representation is also ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["e", "1"], "\[Wedge]"}], "..."}], "\[Wedge]", 
    SubscriptBox["e", "n"]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{
  3.421325904747368*^9, {3.421326088511608*^9, 3.4213260887819967`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["wPower", "Program"], "[", 
    RowBox[{"v", ",", " ", "n"}], "]"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", " ", "^", 
    RowBox[{"\[Wedge]", " ", "n"}]}], TraditionalForm]]],
 " of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["v", 
    RowBox[{"\[Wedge]", "n"}]], TraditionalForm]]],
 "  is the ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 "-th exterior power of the vector ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{
  3.4213259145514655`*^9, {3.4213259696206512`*^9, 3.4213259861544256`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.2"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["NonCommutativeMultiply (Tp)", "Subsubsection",
 CellTags->{"sli_domain", "c:28", "b:1.1.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["NonCommutativeMultiply", "Program"], "[", 
    RowBox[{"u", ",", " ", "v", ",", " ", "..."}], "]"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Tp", "Program"], "[", 
    RowBox[{"u", ",", " ", "v", ",", " ", "..."}], "]"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", "**", "v", "**"}], "..."}], TraditionalForm]]],
 "  denote the tensor product not regarded as multiplication in the tensor \
algebra, e.g., the vector-valued differential form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "**", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"d", "[", "x", "]"}], "\[Wedge]", 
      RowBox[{"d", "[", "y", "]"}]}], ")"}]}], TraditionalForm]]],
 " is such a product. The single evaluation rule of ",
 StyleBox["NonCommutativeMultiply", "Program"],
 " is ",
 StyleBox["ZeroArg", "Program"],
 ". We have not declared the automatic linear expansion (property ",
 StyleBox["Linear", "Program"],
 ") because we prefer to see as an answer to a problem something like ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", "x"}], "+", "y"}], ")"}], "**", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"d", "[", "x", "]"}], "\[Wedge]", 
      RowBox[{"d", "[", "y", "]"}]}], ")"}]}], TraditionalForm]]],
 " rather than the expanded formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"4", 
     RowBox[{"x", "**", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"d", "[", "x", "]"}], "\[Wedge]", 
        RowBox[{"d", "[", "y", "]"}]}], ")"}]}]}], " ", "+", " ", 
    RowBox[{"y", "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"d", "[", "x", "]"}], "\[Wedge]", 
       RowBox[{"d", "[", "y", "]"}]}], ")"}]}]}], TraditionalForm]]],
 ". You can declare the property Linear (or Linear\[Rule]First, \
Linear\[Rule]Last) if your task requires it."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_domain", "b:1.1.2"}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Active and passive forms of operators", "Subsection",
 CellTags->{"c:29", "b:1.1.3"}],

Cell[TextData[{
 "Some operators used in SuperLie have two names: the active one and the \
passive one.\nThe active name is used when the operator should be evaluated. \
The passive name is used to write expression without evaluating.\nFor \
example, Der[\[Omega]] evaluates and returns the exterior derivative of \
\[Omega], while the passive form der[\[Omega]] only denotes the derivative \
without evaluating.\nThough the passive forms of operators are not evaluated, \
some reduction is still made. For example, the expression ",
 Cell[BoxData[
  FormBox[
   RowBox[{"der", "[", 
    RowBox[{
     RowBox[{"2", 
      SubscriptBox["\[Omega]", "1"]}], "-", 
     SubscriptBox["\[Omega]", "2"]}], "]"}], TraditionalForm]]],
 " is usually expanded via linearity to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     RowBox[{"der", "[", 
      SubscriptBox["\[Omega]", "1"], "]"}]}], "-", 
    RowBox[{"der", "[", 
     SubscriptBox["\[Omega]", "2"], "]"}]}], TraditionalForm]]],
 ". The reduction rules are defined as operator ",
 StyleBox["properties",
  FontSlant->"Italic"],
 " and may be changed by the user."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->"b:1.1.3"],

Cell[CellGroupData[{

Cell["OpSymbol", "Subsubsection",
 CellTags->{"c:30", "b:1.1.3"}],

Cell[TextData[{
 "If ",
 StyleBox["s",
  FontSlant->"Italic"],
 " denotes the active form of some operator, OpSymbol[",
 StyleBox["s",
  FontSlant->"Italic"],
 "] returns the name of the passive form of the same operator."
}], "Text",
 CellTags->"b:1.1.3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Operator", "Subsubsection",
 CellTags->{"c:31", "b:1.1.3"}],

Cell[TextData[{
 "If ",
 StyleBox["s",
  FontSlant->"Italic"],
 " denotes the passive form of some operator, Operator[",
 StyleBox["s",
  FontSlant->"Italic"],
 "] returns the name of the active form of the same operator."
}], "Text",
 CellTags->"b:1.1.3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Properties of vector functions", "Subsection",
 CellTags->{"sli_op_prop", "c:32", "b:1.1.4"}],

Cell[TextData[{
 "In this section we describe the properties that any vector object or any \
function of the vector arguments can possess. All these properties are \
defined using the ",
 StyleBox["Domain",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " package. Every property ",
 Cell[BoxData[
  FormBox[
   StyleBox["prop",
    FontSlant->"Italic"], TraditionalForm]]],
 " can manifest itself as\n(a)  ",
 StyleBox["Value", "Program"],
 ": The function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["prop",
     FontSlant->"Italic"], "[", 
    StyleBox["obj",
     FontSlant->"Italic"], "]"}], TraditionalForm]]],
 " gives the value of the property on the object;\n(b)  transformation ",
 StyleBox["Rule", "Program"],
 ": To be applied to the expressions containing the object whenever possible;\
\n(c)  an output ",
 StyleBox["Format", "Program"],
 ": The property controls the appearance of the object in the text and TeX \
output;\n(d)  ",
 StyleBox["Domain", "Program"],
 ": ",
 StyleBox["Vector", "Program"],
 " and ",
 StyleBox["Scalar", "Program"],
 " are such properties;\n(e)  ",
 StyleBox["Flag", "Program"],
 ": The function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["prop",
       FontSlant->"Italic"], 
      StyleBox["Q",
       FontSlant->"Plain"]}]], "[", 
    StyleBox["obj",
     FontSlant->"Italic"], "]"}], TraditionalForm]]],
 " gives ",
 StyleBox["True", "Program"],
 " if the object possesses the property and ",
 StyleBox["False",
  FontFamily->"Courier"],
 " otherwise."
}], "Text",
 CellChangeTimes->{{3.421327015995264*^9, 3.4213270352128973`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}],

Cell[TextData[{
 "The same property can manifest itself in several ways, but actually we have \
only properties of either of some of the types (a) ",
 StyleBox["-", "Program"],
 " (e), or ",
 StyleBox["Flag", "Program"],
 " + one of (a) ",
 StyleBox["-",
  FontFamily->"Courier"],
 " (d). "
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}],

Cell[TextData[{
 "Certain properties can be parametrized to more precisely describe the \
action of the property. For example, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Leibniz", "Program"], "[", 
    RowBox[{"f", "\[Rule]", 
     StyleBox["op",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 " tells us that the function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " acts via Leibniz rule on the expression ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["op",
     FontSlant->"Italic"], "[", 
    RowBox[{"x", ",", "..."}], "]"}], TraditionalForm]]],
 ". Here ",
 Cell[BoxData[
  FormBox[
   StyleBox["op",
    FontSlant->"Italic"], TraditionalForm]]],
 " is a parameter of the property.\nA ",
 StyleBox["Rule", "Program"],
 " property can occur in several copies for the same object (with different \
parameters). For example, the same function ",
 StyleBox["f",
  FontSlant->"Italic"],
 " may possess Leibniz property with respect to several operation: ",
 StyleBox["VTimes", "Program"],
 ", ",
 StyleBox["Tp", "Program"],
 ", ",
 StyleBox["tp", "Program"],
 ", ",
 StyleBox["wedge", "Program"],
 "."
}], "Text",
 CellChangeTimes->{{3.421327053529235*^9, 3.4213270543604307`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}],

Cell[TextData[{
 "With every property ",
 Cell[BoxData[
  FormBox[
   StyleBox["prop",
    FontSlant->"Italic"], TraditionalForm]]],
 " several functions are associated:"
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["prop",
     FontSlant->"Italic"], "[", 
    RowBox[{
     StyleBox["obj",
      FontSlant->"Italic"], ",", "..."}], "]"}], TraditionalForm]]],
 "\nIf ",
 Cell[BoxData[
  FormBox[
   StyleBox["prop",
    FontSlant->"Italic"], TraditionalForm]]],
 " is a ",
 StyleBox["Value", "Program"],
 " type property, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["prop",
     FontSlant->"Italic"], "[", 
    StyleBox["obj",
     FontSlant->"Italic"], "]"}], TraditionalForm]]],
 " gives the value of the property. Otherwise ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["prop",
     FontSlant->"Italic"], "[", 
    RowBox[{
     StyleBox["obj",
      FontSlant->"Italic"], ",", "..."}], "]"}], TraditionalForm]]],
 "  declares the property of one or more objects."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}],

Cell[TextData[{
 "  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["prop",
     FontSlant->"Italic"], "[", 
    RowBox[{
     RowBox[{
      StyleBox["obj",
       FontSlant->"Italic"], "\[Rule]", 
      StyleBox["parm",
       FontSlant->"Italic"]}], ",", "..."}], "]"}], TraditionalForm]]],
 "\n\tdeclares the property of the objects  (for properties depending on a \
parameter);"
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}],

Cell[TextData[{
 "  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["Un", "Program"], 
      StyleBox["prop",
       FontSlant->"Italic"]}]], "[", 
    RowBox[{
     StyleBox["obj",
      FontSlant->"Italic"], ",", "..."}], "]"}], TraditionalForm]]],
 "\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["Un", "Program"], 
      StyleBox["prop",
       FontSlant->"Italic"]}]], "[", 
    RowBox[{
     RowBox[{
      StyleBox["obj",
       FontSlant->"Italic"], "\[Rule]", 
      StyleBox["parm",
       FontSlant->"Italic"]}], ",", "..."}], "]"}], TraditionalForm]]],
 "\n\tclears the property of one or more objects. The ",
 StyleBox["Rule", "Program"],
 " type properties must be cleared exactly with the same parameter as they \
were declared. For other types of properties, the parameter can be omitted;"
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}],

Cell[TextData[{
 "  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["prop",
       FontSlant->"Italic"], 
      StyleBox["Q", "Program",
       FontSlant->"Plain"]}]], "[", 
    RowBox[{
     StyleBox["obj",
      FontSlant->"Italic"], ",", "..."}], "]"}], TraditionalForm]]],
 "\n\tfor properties of type ",
 StyleBox["Flag,", "Program"],
 " it returns ",
 StyleBox["True", "Program"],
 " (or the value of parameter) when the object possesses the property;"
}], "Text",
 CellChangeTimes->{3.4232281299151363`*^9},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}],

Cell[TextData[{
 "  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["prop",
       FontSlant->"Italic"], 
      StyleBox["Rule", "Program"]}]], "[", 
    StyleBox["obj",
     FontSlant->"Italic"], "]"}], TraditionalForm]]],
 " \n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["prop",
       FontSlant->"Italic"], 
      StyleBox["Rule", "Program"]}]], "[", 
    RowBox[{
     StyleBox["obj",
      FontSlant->"Italic"], ",", 
     StyleBox["parm",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 "\n\tgives the replacement rule, equivalent to the ",
 StyleBox["Rule", "Program"],
 " type property. The rule can be used with the object which does not have \
this property. For example, the result of the transformation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{
      StyleBox["arg",
       FontSlant->"Italic"], ",", "..."}], "]"}], "/.", 
    RowBox[{
     StyleBox["ZeroArgRule", "Program"], "[", "f", "]"}]}], TraditionalForm]]],
 " is ",
 StyleBox["0", "Program"],
 " if one of the arguments of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " is equal to ",
 StyleBox["0", "Program"],
 ". If ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " possesses the property  ",
 StyleBox["ZeroArg", "Program"],
 ", this rule is useless, because ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "[", 
    RowBox[{"arg", ",", " ", "..."}], "]"}], TraditionalForm]]],
 " is already equal to ",
 StyleBox["0", "Program"],
 ". To save time of computation, such useless rules are suppressed."
}], "Text",
 CellChangeTimes->{{3.421327147654581*^9, 3.4213271657606163`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}],

Cell["\<\
In the following list, only the name, type and meaning of the properties are \
indicated; the associated functions are omitted.\
\>", "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}],

Cell[CellGroupData[{

Cell[TextData[{
 "ZeroArg ",
 StyleBox["(Rule)",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellTags->{"sli_op_prop", "c:33", "b:1.1.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["ZeroArg", "Program"], "[", "f", "]"}], TraditionalForm]]],
 " defines that  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "[", " ", "...", "]"}], "=", "0"}], TraditionalForm]]],
 " if the argument (or one of arguments) of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " is equal to 0."
}], "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "IdArg ",
 StyleBox["(Rule)",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellTags->{"sli_op_prop", "c:34", "b:1.1.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["IdArg", "Program"], "[", "f", "]"}], TraditionalForm]]],
 " tells that if an expression like ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "[", "...", "]"}], TraditionalForm]]],
 " have arguments equal to ",
 StyleBox["VTimes[]", "Program"],
 " (the vector unit), they must be removed: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"...", ",", " ", "x", ",", " ", 
      StyleBox[
       RowBox[{"VTimes", "[", "]"}], "Program"], ",", " ", "y", ",", " ", 
      "..."}], "]"}], " ", "=", " ", 
    RowBox[{"f", "[", 
     RowBox[{"...", ",", " ", "x", ",", " ", "y", ",", " ", "..."}], "]"}]}], 
   TraditionalForm]]],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Homogen",
 StyleBox[" (Rule)",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellTags->{"sli_op_prop", "c:35", "b:1.1.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Homogen", "Program"], "[", 
    RowBox[{"f", "\[Rule]", 
     StyleBox["deg",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 " tells us that the scalar coefficients must be extracted from the arguments \
of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 ": ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"c", "*", "v"}], "]"}], "\[Rule]", 
    RowBox[{
     SuperscriptBox["c", 
      StyleBox["deg",
       FontSlant->"Italic"]], "*", 
     RowBox[{"f", "[", "v", "]"}]}]}], TraditionalForm]]],
 ". \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Homogen", "Program"], "[", "f", "]"}], TraditionalForm]]],
 " is equivalent to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Homogen", "Program"], "[", 
    RowBox[{"f", "\[Rule]", "1"}], "]"}], TraditionalForm]]],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Homogen", "Program"], "[", 
    RowBox[{"f", "\[Rule]", 
     StyleBox["First", "Program"]}], "]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Homogen", "Program"], "[", 
    RowBox[{"f", "\[Rule]", 
     StyleBox["Last", "Program"]}], "]"}], TraditionalForm]]],
 " sets that the function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " is only homogeneous in the first (last) argument (with degree 1).\nThe \
function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " must be declared as vector- or scalar-valued and having ",
 StyleBox["All", "Program"],
 " (resp. ",
 StyleBox["First", "Program"],
 ", ",
 StyleBox["Last", "Program"],
 ") vector arguments."
}], "Text",
 CellChangeTimes->{{3.421327191717941*^9, 3.4213271923889055`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Symmetric, SkewSymmetric, AntiSymmetric, AntiSkewSymmetric",
 StyleBox[" (Rule and Flag)",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellTags->{"sli_op_prop", "c:36", "b:1.1.4"}],

Cell["\<\
The (skew) symmetry implies two rules of evaluations. The first rule tells \
that the arguments of (skew)symmetric functions of vector arguments must be \
sorted in the standard order:\
\>", "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Symmetric", "Program"], "[", 
    StyleBox["op",
     FontSlant->"Italic"], "]"}], TraditionalForm]]],
 ": ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "[", 
     RowBox[{"...", ",", "x", ",", "y", ",", " ", "..."}], "]"}], "=", 
    RowBox[{
     FormBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{
        RowBox[{
         StyleBox["P", "Program",
          FontSlant->"Plain"], "[", "x", "]"}], 
        RowBox[{
         StyleBox["P", "Program",
          FontSlant->"Plain"], "[", "y", "]"}]}]],
      TraditionalForm], " ", 
     RowBox[{
      StyleBox["op",
       FontSlant->"Italic"], "[", 
      RowBox[{"...", ",", "y", ",", "x", ",", " ", "..."}], "]"}]}]}], 
   TraditionalForm]]],
 "\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["AntiSymmetric", "Program"], "[", 
    StyleBox["op",
     FontSlant->"Italic"], "]"}], TraditionalForm]]],
 ": ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "[", 
     RowBox[{"...", ",", "x", ",", "y", ",", " ", "..."}], "]"}], "=", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{
        RowBox[{
         StyleBox["P", "Program",
          FontSlant->"Plain"], "[", "x", "]"}], 
        RowBox[{
         StyleBox["P", "Program",
          FontSlant->"Plain"], "[", "y", "]"}]}]]}], " ", 
     RowBox[{
      StyleBox["op",
       FontSlant->"Italic"], "[", "...", 
      RowBox[{",", "y", ",", "x", ",", " ", "..."}], "]"}]}]}], 
   TraditionalForm]]],
 "\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["SkewSymmetric", "Program"], "[", 
    StyleBox["op",
     FontSlant->"Italic"], "]"}], TraditionalForm]]],
 ": ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "[", 
     RowBox[{"...", ",", "x", ",", "y", ",", " ", "..."}], "]"}], "=", 
    RowBox[{
     FormBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           StyleBox["P", "Program",
            FontSlant->"Plain"], "[", "x", "]"}], "+", "1"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           StyleBox["P", "Program",
            FontSlant->"Plain"], "[", "y", "]"}], "+", "1"}], ")"}]}]],
      TraditionalForm], " ", 
     RowBox[{
      StyleBox["op",
       FontSlant->"Italic"], "[", 
      RowBox[{"...", ",", "y", ",", "x", ",", " ", "..."}], "]"}]}]}], 
   TraditionalForm]]],
 "\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["AntiSkewSymmetric", "Program"], "[", 
    StyleBox["op",
     FontSlant->"Italic"], "]"}], TraditionalForm]]],
 ": ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "[", "...", 
     RowBox[{",", "x", ",", "y", ",", "..."}], "]"}], "=", 
    RowBox[{
     RowBox[{"-", 
      FormBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            StyleBox["P", "Program",
             FontSlant->"Plain"], "[", "x", "]"}], "+", "1"}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            StyleBox["P", "Program",
             FontSlant->"Plain"], "[", "y", "]"}], "+", "1"}], ")"}]}]],
       TraditionalForm]}], " ", 
     RowBox[{
      StyleBox["op",
       FontSlant->"Italic"], "[", "...", 
      RowBox[{",", "y", ",", "x", ",", " ", "..."}], "]"}]}]}], 
   TraditionalForm]]]
}], "Text",
 CellMargins->{{54, Inherited}, {Inherited, Inherited}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}],

Cell[TextData[{
 "The second rule tells that the value of a (skew)symmetric function is equal \
to 0 if it contains two neighboring odd (even, in case of a skew-symmetric \
function) equal arguments.\nIf the \"power\" operation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["pw",
     FontSlant->"Italic"], " ", "=", " ", 
    RowBox[{
     StyleBox["PowerOp", "Program"], "[", 
     StyleBox["op",
      FontSlant->"Italic"], "]"}]}], TraditionalForm]]],
 " is defined, both rules are modified. In the first rule the arguments are \
sorted in the same order as the bases of ",
 Cell[BoxData[
  FormBox[
   StyleBox["pw",
    FontSlant->"Italic"], TraditionalForm]]],
 ". The second rule tells that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["pw",
      FontSlant->"Italic"], "[", 
     RowBox[{"x", ",", "n"}], "]"}], "=", "0"}], TraditionalForm]]],
 "  if ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " is odd (even, in case of a skew-symmetric function) and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", "n", "|", 
    RowBox[{">", "1"}]}], TraditionalForm]]],
 ".\nThe function ",
 Cell[BoxData[
  FormBox[
   StyleBox["op",
    FontSlant->"Italic"], TraditionalForm]]],
 " must be declared as vector- or scalar-valued.\nThese rules may be used \
only when all operands are homogeneous with respect to the parity.\nThe four \
symmetry properties are alternative: defining one of them automatically \
cancels the other ones (if they was defined for same symbol)."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Leibniz, Jacobi ",
 StyleBox["(Rule)",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellTags->{"sli_op_prop", "c:37", "b:1.1.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Leibniz", "Program"], "[", 
    RowBox[{"f", "\[Rule]", "g"}], "]"}], TraditionalForm]]],
 " tells that the function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " acts on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "[", "...", "]"}], TraditionalForm]]],
 " as a derivation with parity ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["P", "Program",
     FontSlant->"Plain"], "[", "f", "]"}], TraditionalForm]]],
 ":\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"g", "[", 
      RowBox[{
       SubscriptBox["x", "1"], ",", 
       SubscriptBox["x", "2"], ",", "..."}], "]"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          SubscriptBox["x", "1"], "]"}], ",", 
         SubscriptBox["x", "2"], ",", "..."}], "]"}], "\[PlusMinus]", 
       RowBox[{"g", "[", 
        RowBox[{
         SubscriptBox["x", "1"], ",", 
         RowBox[{"f", "[", 
          SubscriptBox["x", "2"], "]"}], ",", "..."}], "]"}]}], 
      "\[PlusMinus]"}], "..."}]}], TraditionalForm]]],
 " \n\t\t\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Leibniz", "Program"], "[", 
    RowBox[{"f", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["g", "1"], ",", "..."}], "}"}]}], "]"}], 
   TraditionalForm]]],
 " tells that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " acts on all ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["g", "1"], TraditionalForm]]],
 ", ... ."
}], "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Jacobi", "Program"], "[", 
    RowBox[{"f", "\[Rule]", "g"}], "]"}], TraditionalForm]]],
 " tells that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{"g", "[", " ", "...", "]"}]}], "]"}], TraditionalForm]]],
 " acts as the bracket in the Lie superalgebra ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 ":\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", 
      RowBox[{"g", "[", 
       RowBox[{
        SubscriptBox["y", "1"], ",", 
        SubscriptBox["y", "2"], ",", "..."}], "]"}]}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", 
           SubscriptBox["y", "1"]}], "]"}], ",", 
         SubscriptBox["y", "2"], ",", "..."}], "]"}], "\[PlusMinus]", 
       RowBox[{"g", "[", 
        RowBox[{
         SubscriptBox["y", "1"], ",", 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", 
           SubscriptBox["y", "2"]}], "]"}], ",", "..."}], "]"}]}], 
      "\[PlusMinus]"}], "..."}]}], TraditionalForm]]],
 " \n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Jacobi", "Program"], "[", 
    RowBox[{"f", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["g", "1"], ",", "..."}], "}"}]}], "]"}], 
   TraditionalForm]]],
 " tells that ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " acts on all ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["g", "1"], TraditionalForm]]],
 ", ... ."
}], "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],

Cell[TextData[{
 "The functions ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 "  and ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " must be vector-valued functions of vector  arguments. All arguments must \
be homogeneous with respect to the parity."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Graded",
 StyleBox[" (Flag)",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellTags->{"sli_op_prop", "c:38", "b:1.1.4"}],

Cell[TextData[{
 "If the vector operation ",
 Cell[BoxData[
  FormBox[
   StyleBox["op",
    FontSlant->"Italic"], TraditionalForm]]],
 " is graded, then  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["Grade", "Program"], "[", 
     RowBox[{"a", "~", 
      StyleBox["op",
       FontSlant->"Italic"], "~", "b"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      StyleBox["Grade", "Program"], "[", "a", "]"}], "+", 
     RowBox[{
      StyleBox["Grade", "Program"], "[", "b", "]"}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.4213272137896786`*^9, 3.4213272154019966`*^9}},
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "ThreadGraded ",
 StyleBox["(Rule)",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellTags->{"sli_op_prop", "c:39", "b:1.1.4"}],

Cell[TextData[{
 "The function with property ",
 StyleBox["ThreadGraded", "Program"],
 " acts as ",
 StyleBox["Grade", "Program"],
 " on the graded operation:"
}], "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["ThreadGraded", "Program"], "[", "f", "]"}], TraditionalForm]]],
 ": ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"a", "~", 
      StyleBox["op",
       FontSlant->"Italic"], "~", "b"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"f", "[", "a", "]"}], "+", 
     RowBox[{"f", "[", "b", "]"}]}]}], TraditionalForm]]],
 " for any graded operation ",
 StyleBox["op",
  FontSlant->"Italic"],
 ";",
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["ThreadGraded", "Program"], "[", 
    RowBox[{"f", "\[Rule]", 
     StyleBox["sm",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 ": ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"a", "~", 
      StyleBox["op",
       FontSlant->"Italic"], "~", "b"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"f", "[", "a", "]"}], "~", 
     StyleBox["sm",
      FontSlant->"Italic"], "~", 
     RowBox[{"f", "[", "b", "]"}]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellMargins->{{54, Inherited}, {Inherited, Inherited}},
 CellChangeTimes->{{3.421327234329213*^9, 3.4213272456554995`*^9}},
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "TestFirst ",
 StyleBox["(Rule)",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellTags->{"sli_op_prop", "c:40", "b:1.1.4"}],

Cell[TextData[{
 "The property ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["TestFirst", "Program"], "[", "f", "]"}], TraditionalForm]]],
 " tells that the value of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], " ", "+"}], " ", "..."}], "]"}], 
   TraditionalForm]]],
 " is equal to the value of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "[", 
    SubscriptBox["x", "1"], "]"}], TraditionalForm]]],
 " (here \"",
 StyleBox["+", "Program"],
 "\" is a vector operation ",
 StyleBox["VPlus", "Program"],
 ")."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "LogPower ",
 StyleBox["(Rule)",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellTags->{"sli_op_prop", "c:41", "b:1.1.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["LogPower", "Program"], "[", "f", "]"}], TraditionalForm]]],
 " tells that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "[", 
     SuperscriptBox["x", "p"], "]"}], " ", "=", " ", 
    RowBox[{"p", "*", 
     RowBox[{"f", "[", "x", "]"}]}]}], TraditionalForm]]],
 " (here \"",
 StyleBox["*", "Program"],
 "\" denotes ",
 StyleBox["SVTimes", "Program"],
 ") \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["LogPower", "Program"], "[", 
    RowBox[{"f", "\[Rule]", 
     StyleBox["op",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 " tells that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "[", 
     SuperscriptBox["x", "p"], "]"}], " ", "=", " ", 
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "[", 
     RowBox[{"p", ",", " ", 
      RowBox[{"f", "[", "x", "]"}]}], "]"}]}], TraditionalForm]]],
 "."
}], "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Additive ",
 StyleBox["(Rule)",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellTags->{"sli_op_prop", "c:42", "b:1.1.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Additive", "Program"], "[", "f", "]"}], TraditionalForm]]],
 ": ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"...", ",", 
      RowBox[{"x", "+", "y"}], ",", "..."}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"...", ",", "x"}], ",", "..."}], "]"}], "+", 
     RowBox[{"f", "[", 
      RowBox[{"...", ",", "y", ",", "..."}], "]"}]}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Additive", "Program"], "[", 
    RowBox[{"f", "\[Rule]", 
     StyleBox["First", "Program"]}], "]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Additive", "Program"], "[", 
    RowBox[{"f", "\[Rule]", 
     StyleBox["Last", "Program"]}], "]"}], TraditionalForm]]],
 " sets that the function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " is only additive in the first (last) argument.\nThis property can be \
assigned to functions that are declared having ",
 StyleBox["All", "Program"],
 " (resp. ",
 StyleBox["First", "Program"],
 ", ",
 StyleBox["Last", "Program"],
 ")  scalar or vector arguments and scalar or vector values."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Linear ",
 StyleBox["(Flag and Rule)",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellTags->{"sli_op_prop", "c:43", "b:1.1.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Linear", "Program"], "[", "f", "]"}], TraditionalForm]]],
 " is the (multi)linearity of ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " . This property is equivalent to the union of  properties ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Additive", "Program"], "[", "f", "]"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["ZeroArg", "Program"], "[", "f", "]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Homogen", "Program"], "[", 
    RowBox[{"f", "\[Rule]", "1"}], "]"}], TraditionalForm]]],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Linear", "Program"], "[", 
    RowBox[{"f", "\[Rule]", 
     StyleBox["First", "Program"]}], "]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Linear", "Program"], "[", 
    RowBox[{"f", "\[Rule]", 
     StyleBox["Last", "Program"]}], "]"}], TraditionalForm]]],
 " sets that the function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " is only linear in the first (last) argument. \nThe function ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " must be declared as vector- or scalar-valued and having ",
 StyleBox["All", "Program"],
 " (resp. ",
 StyleBox["First", "Program"],
 ", ",
 StyleBox["Last", "Program"],
 ") vector arguments."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Output, TeX, Standard, Traditional ",
 StyleBox["(Format)",
  FontWeight->"Plain"]
}], "Subsubsection",
 CellTags->{"sli_op_prop", "c:44", "b:1.1.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Output", "Program"], "[", 
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "\[Rule]", 
     StyleBox["form",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 " defines the output format of the object as\n              ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["Format", "Program"], "[", 
     RowBox[{
      StyleBox["op",
       FontSlant->"Italic"], "[", 
      StyleBox["args",
       FontSlant->"Italic"], "]"}], "]"}], ":=", 
    RowBox[{
     StyleBox["form",
      FontSlant->"Italic"], "[", 
     RowBox[{
      StyleBox["op",
       FontSlant->"Italic"], "[", 
      StyleBox["args",
       FontSlant->"Italic"], "]"}], "]"}]}], TraditionalForm]]],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["TeX", "Program"], "[", 
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "\[Rule]", 
     StyleBox["form",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 " defines the output ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"T", 
    AdjustmentBox["E",
     BoxBaselineShift->0.5,
     BoxMargins->{{-0.075, -0.085}, {0, 0}}], "X"}]]]],
 " format of the objects as\n              ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["Format", "Program"], "[", 
     RowBox[{
      RowBox[{
       StyleBox["op",
        FontSlant->"Italic"], "[", 
       StyleBox["args",
        FontSlant->"Italic"], "]"}], ",", 
      StyleBox["TeX", "Program"]}], "]"}], ":=", 
    RowBox[{
     StyleBox["form",
      FontSlant->"Italic"], "[", 
     RowBox[{
      StyleBox["op",
       FontSlant->"Italic"], "[", 
      StyleBox["args",
       FontSlant->"Italic"], "]"}], "]"}]}], TraditionalForm]]],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Standard", "Program"], "[", 
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "\[Rule]", 
     StyleBox["form",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 " defines the output format of the object in the Standard form as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["Format", "Program"], "[", 
     RowBox[{
      RowBox[{
       StyleBox["op",
        FontSlant->"Italic"], "[", 
       StyleBox["args",
        FontSlant->"Italic"], "]"}], ",", 
      StyleBox["Standard", "Program"]}], "]"}], ":=", 
    RowBox[{
     StyleBox["form",
      FontSlant->"Italic"], "[", 
     RowBox[{
      StyleBox["op",
       FontSlant->"Italic"], "[", 
      StyleBox["args",
       FontSlant->"Italic"], "]"}], "]"}]}], TraditionalForm]]],
 ". If ",
 StyleBox["form",
  FontSlant->"Italic"],
 " is ",
 StyleBox["Subscripted",
  FontFamily->"Courier"],
 ", it defines also the input forrmat.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Traditional", "Program"], "[", 
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "\[Rule]", 
     StyleBox["form",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 " defines the output format of the object in the Traditional form as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["Format", "Program"], "[", 
     RowBox[{
      RowBox[{
       StyleBox["op",
        FontSlant->"Italic"], "[", 
       StyleBox["args",
        FontSlant->"Italic"], "]"}], ",", 
      StyleBox["Traditional", "Program"]}], "]"}], ":=", 
    RowBox[{
     StyleBox["form",
      FontSlant->"Italic"], "[", 
     RowBox[{
      StyleBox["op",
       FontSlant->"Italic"], "[", 
      StyleBox["args",
       FontSlant->"Italic"], "]"}], "]"}]}], TraditionalForm]]],
 ". \nThe value of ",
 StyleBox["form",
  FontSlant->"Italic"],
 " must be a function of one argument. This function is applied to every \
expression with header ",
 StyleBox["op",
  FontSlant->"Italic"],
 " when it is formatted for the output. For example, the function ",
 StyleBox["Subscripted",
  FontFamily->"Courier"],
 " will print the arguments of the expression as subscripts. In ",
 StyleBox["Domain",
  FontWeight->"Bold"],
 " and ",
 StyleBox["SuperLie",
  FontWeight->"Bold"],
 " packages, three formatting functions are defined: ",
 StyleBox["InfixFormat", "Program"],
 ", ",
 StyleBox["ArgForm", "Program"],
 " and ",
 StyleBox["SeqForm", "Program"],
 "."
}], "Text",
 CellMargins->{{28, 10}, {7, 7}},
 CellChangeTimes->{{3.423228228286587*^9, 3.4232282299690065`*^9}, 
   3.423228262175317*^9, {3.4232282981470413`*^9, 3.4232283106850705`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vector spaces, Algebras and Modules", "Section",
 CellTags->"c:45"],

Cell[CellGroupData[{

Cell["Introduction", "Subsection",
 CellTags->{"c:46", "b:1.2.0"}],

Cell[TextData[{
 "To ",
 StyleBox["declare",
  FontSlant->"Italic"],
 " (or define, or build) a vector space, an algebra or a module means to \
declare the ",
 StyleBox["name",
  FontVariations->{"Underline"->True}],
 " of the space, to set the ",
 StyleBox["properties",
  FontVariations->{"Underline"->True}],
 " of the space and to define the ",
 StyleBox["functions",
  FontVariations->{"Underline"->True}],
 " (operators) on the space (or with values in the space).\nThe properties of \
the space are functions whose argument is the name of the space, e.g., ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Dim", "Program"], "[", "v", "]"}], TraditionalForm]]],
 " is the dimension of the space ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["TheAlgebra", "Program"], "[", "m", "]"}], TraditionalForm]]],
 " is the name of the algebra that acts on the module ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 ". Some properties can have the second argument, e.g., ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Dim", "Program"], "[", 
    RowBox[{"g", ",", "n"}], "]"}], TraditionalForm]]],
 " is the dimension of the ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 "-th component of the algebra ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 ".\nThe arguments of the functions defined on the space are vectors ",
 Cell[BoxData[
  FormBox["-", TraditionalForm]]],
 " the elements of the space. The examples of such functions are the parity, \
the grade, the weight, the bracket in an algebra, the action of an algebra on \
a module, the scalar product, the homomorphisms, and so on.\nYou can easily \
build many vector spaces using the commands named ",
 StyleBox["space constructors",
  FontVariations->{"Underline"->True}],
 ". They define the properties of the space and the functions on the space; \
your task is only to choose the name of the space and to specify some \
parameters (e.g., dimension). Notice, however, that  there is no space \
constructor for every kind of space, in some cases you must make all \
definitions manually (or to write a new space constructor)."
}], "Text",
 CellChangeTimes->{3.421327439374053*^9},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->"b:1.2.0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The properties of vector spaces", "Subsection",
 CellTags->{"sli_prop", "c:47", "b:1.2.1"}],

Cell["\<\
The properties of the space are the functions whose argument is the name of \
the space. The complete list of properties of vector spaces defined in the \
package consists of:\
\>", "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_prop", "b:1.2.1"}],

Cell[CellGroupData[{

Cell["Dimension", "Subsubsection",
 CellTags->{"sli_prop", "c:48", "b:1.2.1"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Dim", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " returns the dimension of the space ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 ". \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PDim", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " returns the list containing the dimensions of the even and odd components.\
\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["FDim", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " returns the  (super)dimension of ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 " formatted for output.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Dim", "Program"], "[", 
    RowBox[{"V", ",", "d"}], "]"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PDim", "Program"], "[", 
    RowBox[{"V", ",", "d"}], "]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["FDim", "Program"], "[", 
    RowBox[{"V", ",", "d"}], "]"}], TraditionalForm]]],
 " return the (super)dimension of the component of degree ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]]],
 "."
}], "Text",
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basis", "Subsubsection",
 CellTags->{"sli_prop", "c:49", "b:1.2.1"}],

Cell[TextData[{
 "The description of the basis of the vector space may contain:\n1. An \
algorithm that determines whether any given vector expression represents an \
element of the basis of the space;\n2. A method of enumerating all the \
elements of the basis (or all elements of the given degree);\n3. An explicit \
description of the basis as expressions ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "[", 
    RowBox[{"i", ",", "...", ",", "k"}], "]"}], TraditionalForm]]],
 " with given number and ranges of subscripts;\n4. Reference to one or \
several subspaces, each having the described basis.\nThe following functions \
correspond to the above four methods to describe the basis. The first one is \
mandatory for every vector space. The remaining are optional."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_prop", "b:1.2.1"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["BasisPattern", "Program"], "[", "V", "]"}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "returns the pattern matching all elements of the basis of the space ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 ". This property is used to recognize the basis vectors in the expressions. \
You can read about patterns in the section ",
 ButtonBox["Patterns",
  BaseStyle->"Link",
  ButtonData:>"paclet:tutorial/PatternsOverview"],
 " of the  ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " book."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellChangeTimes->{{3.421327486041157*^9, 3.421327488104123*^9}, {
   3.6233137070710692`*^9, 3.6233137152560863`*^9}, 3.6233138307192955`*^9},
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_prop", "b:1.2.1"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Enum", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " , ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Enum", "Program"], "[", 
    RowBox[{"V", ",", "n"}], "]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["EnumRange", "Program"], "[", 
    RowBox[{"V", ",", "n"}], "]"}], TraditionalForm]]],
 " defines the method of enumerating of the basis of the space ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 " (see the description of the package ",
 StyleBox["Enum",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "). The property Enum is used to obtain the basis of the polynomials on the \
space and of the enveloping algebra."
}], "Text",
 Evaluatable->False,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_prop", "b:1.2.1"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Components", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " gives the list of descriptions of the regular components of the space ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 ". The regular component is a subspace in which all elements of the basis \
have the same format ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", "[", 
    RowBox[{"i", ",", "...", ",", "k"}], "]"}], TraditionalForm]]],
 " with the same header ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]]],
 " and the same number of subscripts. The action of the algebras must be \
defined by a single formula on each pair of regular components (see \
subsection ",
 StyleBox["Action",
  FontWeight->"Bold"],
 " below).\nThe description of each component is a list of 4 entries: \n(1) \
the header ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]]],
 " of the element of the basis; \n(2) the number ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Geneva",
  FontSize->10,
  FontSlant->"Italic"],
 "of subscripts in the elements of the basis; \n(3) the function of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " arguments which being applied to the set of counters ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", ",", "...", ",", "k"}], TraditionalForm]]],
 " returns the list of iterators ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       SubscriptBox["i", "0"], ",", 
       SubscriptBox["i", "1"]}], "}"}], ",", 
     RowBox[{"...", " ", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        SubscriptBox["k", "0"], ",", 
        SubscriptBox["k", "1"]}], "}"}]}]}], "}"}], TraditionalForm]]],
 " for the loop embracing the whole basis of the component, and \n(4) the \
test function of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " arguments that being applied to the set of subscripts ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", ",", "...", ",", "k"}], TraditionalForm]]],
 "  which belong to the above loop, returns ",
 StyleBox["True", "Program"],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "[", 
    RowBox[{"i", ",", "...", ",", "k"}], "]"}], TraditionalForm]]],
 " is an element of the basis of the component, and ",
 StyleBox["False", "Program"],
 " otherwise. For example, the set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "[", 
    RowBox[{"i", ",", "j"}], "]"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "\[LessEqual]", "i", "<", "j", "\[LessEqual]", "n"}], 
   TraditionalForm]]],
 ", is described as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"g", ",", " ", "2", ",", " ", 
     RowBox[{
      StyleBox["Function", "Program"], "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"n", "-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"i", "+", "1"}], ",", "n"}], "}"}]}], "}"}]}], "]"}], ",", 
     " ", 
     RowBox[{
      StyleBox["True", "Program"], "&"}]}], "}"}], TraditionalForm]]],
 ".\nThe function ",
 StyleBox["Components", "Program"],
 " is used in the constructors of spaces-relatives. "
}], "Text",
 CellChangeTimes->{{3.4232283773409166`*^9, 3.4232283823180733`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_prop", "b:1.2.1"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["DecompositionList", "Program"], "[", 
    RowBox[{"g", ",", 
     StyleBox["name",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 " returns the list of subspaces ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["h", "1"], ",", 
     SubscriptBox["h", "2"], ",", "..."}], "}"}], TraditionalForm]]],
 " in the decomposition of ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " in the direct sum ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "=", 
    RowBox[{"\[CirclePlus]", 
     SubscriptBox["h", "i"]}]}], TraditionalForm]]],
 ". The decomposition ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "=", 
    RowBox[{
     SubscriptBox["g", "+"], "\[CirclePlus]", 
     SubscriptBox["g", "0"], "\[CirclePlus]", 
     SubscriptBox["g", "-"]}]}], TraditionalForm]]],
 " (with name ",
 ButtonBox["CartanTriade",
  BaseStyle->"AddOnsLink"],
 ") is defined by the constructor ",
 StyleBox["CartanMatrixAlgebra", "Program"],
 ". This decomposition is used in the constructors of irreducible modules. An \
arbitrary decomposition may be defined using the function-constructor ",
 StyleBox["AlgebraDecomposition", "Program"],
 ". \n",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"v", "/.", 
     RowBox[{
      StyleBox["DecompositionRule", "Program"], "[", "g", "]"}]}]}], 
   TraditionalForm]]],
 " decomposes the vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "\[Element]", "g"}], TraditionalForm]]],
 " in the sum of elements of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["h", "i"], TraditionalForm]]],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parity, grading and weight", "Subsubsection",
 CellTags->{"sli_prop", "c:50", "b:1.2.1"}],

Cell[TextData[{
 "The following properties can be defined only if the basis of the space has \
the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], ",", " ", "...", 
     RowBox[{",", " ", 
      RowBox[{"x", "[", 
       StyleBox["dim",
        FontSlant->"Italic"], "]"}]}]}], "}"}], TraditionalForm]]],
 ". They are used in the definition of the functions ",
 StyleBox["P", "Program"],
 " (parity), ",
 StyleBox["Grade", "Program"],
 " and ",
 StyleBox["Weight", "Program"],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PList", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " returns the list of parities of the elements of the fixed basis.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["GList", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " returns the list of degrees of the elements of the fixed basis.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["WList", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " returns the list of weight of the elements of the fixed basis."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parent relations", "Subsubsection",
 CellTags->{"sli_prop", "c:51", "b:1.2.1"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Image", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " returns the list of the images of the elements of the basis of ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 " when ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 " is a subspace of  any other space.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["InSpace", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " returns the name of the space that hosts the subspace ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["TheAlgebra", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " returns the name of the algebra that acts on the module ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["TheSpace", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " returns the name of the space from which ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 " is derived."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tensor properties", "Subsubsection",
 CellTags->{"sli_prop", "c:52", "b:1.2.1"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Rank", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " returns the tensor rank of ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 ";\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["CompList", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " returns the list of tensor components of ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 "."
}], "Text",
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generators and relations", "Subsubsection",
 CellTags->{"sli_prop", "c:53", "b:1.2.1"}],

Cell["\<\
The following properties can be defined if the algebra or the module is built \
from generators.\
\>", "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_prop", "b:1.2.1"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["GRange", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " returns  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["deg",
     FontSlant->"Italic"], "<", 
    StyleBox["Infinity", "Program"]}], TraditionalForm]]],
 " if the algebra or the module ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 " is evaluated from the generators only up to elements of degree ",
 Cell[BoxData[
  FormBox[
   StyleBox["deg",
    FontSlant->"Italic"], TraditionalForm]]],
 " (the degrees of the generators are given explicitly or by default; if the \
relations are not homogeneous, the algebra or module obtained is, actually, \
filtered rather than graded and ",
 Cell[BoxData[
  FormBox[
   StyleBox["deg",
    FontSlant->"Italic"], TraditionalForm]]],
 " determines the filtration). In this case, the functions ",
 StyleBox["Dim", "Program"],
 ", ",
 StyleBox["PDim", "Program"],
 ", ",
 StyleBox["FDim", "Program"],
 " return the dimension of the evaluated part of the space ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["GenBasis", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " returns the basis of ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 " in terms of generators.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["GenRel", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " returns  the list of relations between the generators.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["NGen", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " returns the number of generators."
}], "Text",
 CellChangeTimes->{
  3.421327546778493*^9, {3.423228471726637*^9, 3.4232284745907555`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Action", "Subsubsection",
 CellTags->{"sli_prop", "c:54", "b:1.2.1"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Bracket", "Program"], "[", "g", "]"}], TraditionalForm]]],
 " returns the name of the bracket operation in the Lie (super)algebra ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " or the action of the algebra on the module ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["bracket", "Program"], "[", "g", "]"}], TraditionalForm]]],
 " returns the name of the unevaluated form of the bracket or the action of \
the algebra on  the module (it is used when no evaluation is required).\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["BracketMode", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " may return ",
 StyleBox["Tabular", "Program"],
 " if the basis of ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 " has the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], ",", " ", "...", 
     RowBox[{",", " ", 
      RowBox[{"x", "[", 
       StyleBox["dim",
        FontSlant->"Italic"], "]"}]}]}], "}"}], TraditionalForm]]],
 " and the bracket is defined using the table of values. It may return ",
 StyleBox["Regular", "Program"],
 " if the regular components are defined on ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 " (and on the algebra acting on ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 ") and the bracket is a regular expression on each pair of regular \
components."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spaces-relatives", "Subsubsection",
 CellTags->{"sli_prop", "c:55", "b:1.2.1"}],

Cell[TextData[{
 "For any (super)space ",
 Cell[BoxData[
  FormBox[
   StyleBox["V",
    FontSlant->"Italic"], TraditionalForm]]],
 ", there are defined 8 spaces, the relatives of ",
 Cell[BoxData[
  FormBox[
   StyleBox["V",
    FontSlant->"Italic"], TraditionalForm]]],
 ". If ",
 Cell[BoxData[
  FormBox[
   StyleBox["V",
    FontSlant->"Italic"], TraditionalForm]]],
 "  is a module over a (super)algebra, then the relatives are also modules. \
The list of relatives is (here \[CapitalPi] is the (0|1)-dimensional space or \
the trivial odd module):"
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellChangeTimes->{{3.4213276007460947`*^9, 3.4213276020179234`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_prop", "b:1.2.1"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["MLeft", "Program"], "[", "V", "]"}], TraditionalForm]]],
 StyleBox[" ", "Program"],
 StyleBox["is t", "Program",
  FontFamily->"Times"],
 "he space ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 " itself \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["CoLeft", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " ",
 StyleBox[" ", "Program"],
 StyleBox["is t", "Program",
  FontFamily->"Times"],
 "he space of left even linear forms on ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["MRight", "Program"], "[", "V", "]"}], TraditionalForm]]],
 StyleBox[" ", "Program"],
 StyleBox["is t", "Program",
  FontFamily->"Times"],
 "he space ",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "\[CapitalPi]", "\[CircleTimes]", "V", "\[CircleTimes]", "\[CapitalPi]"}], 
   TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["CoRight", "Program"], "[", "V", "]"}], TraditionalForm]]],
 StyleBox[" ", "Program"],
 StyleBox["is t", "Program",
  FontFamily->"Times"],
 "he  space of right even linear forms on ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PiRight", "Program"], "[", "V", "]"}], TraditionalForm]]],
 StyleBox[" ", "Program"],
 StyleBox["is t", "Program",
  FontFamily->"Times"],
 "he  space ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "\[CircleTimes]", "\[CapitalPi]"}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["DRight", "Program"], "[", "V", "]"}], TraditionalForm]]],
 StyleBox[" ", "Program"],
 StyleBox["is t", "Program",
  FontFamily->"Times"],
 "he  space of right odd linear forms on ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PiLeft", "Program"], "[", "V", "]"}], TraditionalForm]]],
 StyleBox[" ", "Program"],
 StyleBox["is t", "Program",
  FontFamily->"Times"],
 "he  space ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalPi]", "\[CircleTimes]", "V"}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["DLeft", "Program"], "[", "V", "]"}], TraditionalForm]]],
 StyleBox[" ", "Program"],
 StyleBox["is t", "Program",
  FontFamily->"Times"],
 "he  space of left odd linear forms on ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 " (differential forms on ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 ")."
}], "Text",
 CellTags->{"sli_prop", "b:1.2.1"}],

Cell[TextData[{
 "The order of relatives in the above list is not accidental. The functors of \
relation form a group isomorphic to the group of motion of the square. This \
group is generated by the dualization functor (",
 StyleBox["CoLeft", "Program"],
 ") and that of the right multiplication by \[CapitalPi] (",
 StyleBox["PiRight", "Program"],
 "). The relatives are listed in accordance with our choice of generators. "
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_prop", "b:1.2.1"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Relatives", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " returns the list of the names of 8 spaces (modules) ",
 Cell[BoxData[
  FormBox["-", TraditionalForm]]],
 " the relatives of ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 " (or ",
 StyleBox["None", "Program"],
 " when the relative space in not built).\nSee also constructors PiLeft, \
PiRight, MRight, CoLeft, DLeft in the next section."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Changing properties of vector spaces", "Subsubsection",
 CellTags->{"sli_prop", "c:56", "b:1.2.1"}],

Cell[TextData[{
 "Most properties may be changed directly by assigning new values, e.g., ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["Bracket", "Program"], "[", "\[GothicG]", "]"}], "^=", 
    "MyBracket"}], TraditionalForm]]],
 ". In this way one can construct algebraic structures similar to ones \
defined in ",
 StyleBox["SuperLie",
  FontWeight->"Bold"],
 ". \nNote that any such change may invalidate the vector space (except, \
perhaps, the changes in the output format), so the result should be carefully \
tested."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_prop", "b:1.2.1"}],

Cell["\<\
For some properties, modification are implemented as separate functions.\
\>", "Text",
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Regrading", "Subsubsection",
 CellTags->{"sli_prop", "c:57", "b:1.2.1"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["ReGrade", "Program"], "[", 
    RowBox[{"V", ",", " ", 
     StyleBox["grading",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "changes the grading on the space ",
 StyleBox["V",
  FontSlant->"Italic"],
 " and all declared relatives of ",
 StyleBox["V",
  FontSlant->"Italic"],
 ".",
 StyleBox["\n",
  FontFamily->"Courier"],
 "The parameter ",
 StyleBox["grading",
  FontSlant->"Italic"],
 " may be either a list of new degrees for the elements of the basis (or for \
generators only if an algebra or a module is built using generators), or the \
name (a symbol or a number) of a particular grading predefined by the space \
constructor of ",
 StyleBox["V",
  FontSlant->"Italic"],
 ".  "
}], "Text",
 CellChangeTimes->{{3.423228524792942*^9, 3.423228527066211*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The properties and optional arguments of the space constructors\
\>", "Subsection",
 CellTags->{"sli_opt", "c:58", "b:1.2.2"}],

Cell[TextData[{
 "When a vector space (algebra, module) is defined by the space constructors, \
some of the properties can be modified using optional arguments of a space \
constructor, e.g.,\n\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VectorSpace", "Program"], "[", 
    RowBox[{"x", ",", " ", 
     StyleBox[
      RowBox[{"Dim", "\[Rule]", "10"}], "Program"], ",", 
     StyleBox[
      RowBox[{"Output", "\[Rule]", "Subscripted"}], "Program"]}], "]"}], 
   TraditionalForm]]],
 ".\n\nThe complete list of optional arguments defined in the package \
consists of:"
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_opt", "b:1.2.2"}],

Cell[CellGroupData[{

Cell["Dimension and parity", "Subsubsection",
 CellTags->{"sli_opt", "c:59", "b:1.2.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Dim", "Program"], "\[Rule]", "d"}], TraditionalForm]]],
 "  sets the dimension of the even vector space. In this case ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]]],
 " can be a non-negative integer, ",
 StyleBox["Infinity", "Program"],
 " or a symbolic expression.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Dim", "Program"], "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["d", "0"], "|", 
      SubscriptBox["d", "1"]}], ")"}]}], TraditionalForm]]],
 " sets the dimension of the created superspace. Both ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "0"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "1"], TraditionalForm]]],
 " can be non-negative integers, ",
 StyleBox["Infinity,", "Program"],
 " or symbolic expressions. The parity of the elements of the basis are not \
defined (except for the case where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "0"], "=", "0"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "1"], "=", "0"}], TraditionalForm]]],
 ").\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Dim", "Program"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["d", "0"], ",", 
      SubscriptBox["d", "1"], ",", 
      SubscriptBox["d", "2"], ",", "...", ",", 
      SubscriptBox["d", "m"]}], "}"}]}], TraditionalForm]]],
 " sets that the first ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "0"], TraditionalForm]]],
 " elements of the basis of the created space are  even, the next ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "1"], TraditionalForm]]],
 " elements odd, the further ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "2"], TraditionalForm]]],
 " elements even, etc. All the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "i"], TraditionalForm]]],
 "  must be non-negative integers, except that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "0"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "m"], TraditionalForm]]],
 "  (and also ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "1"], TraditionalForm]]],
 " if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "0"], "=", "0"}], TraditionalForm]]],
 ") can be ",
 StyleBox["Infinity", "Program"],
 ". The last index may be also a symbolic expression.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PList", "Program"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["p", "1"], ",", 
      SubscriptBox["p", "2"], ",", "..."}], "}"}]}], TraditionalForm]]],
 ", where the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "i"], TraditionalForm]]],
 "'s are ",
 StyleBox["0", "Program"],
 " or ",
 StyleBox["1", "Program"],
 ", sets explicitly the parity of all element of the basis (or all \
generators) of the space created.\nIf, for some space V, no dimension is \
specified, the expression ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Dim", "Program"], "[", "V", "]"}], TraditionalForm]]],
 " is used everywhere as the dimension of ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.421327653091363*^9, 3.4213276963135138`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Grading", "Subsubsection",
 CellTags->{"sli_opt", "c:60", "b:1.2.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["GList", "Program"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["g", "1"], ",", 
      SubscriptBox["g", "2"], ",", "..."}], "}"}]}], TraditionalForm]]],
 " sets the values of degree for the elements of the basis (or for generators \
only if the algebra or the module is built using generators). The default \
degree of the generators is 1 for the algebra and 0 for the module."
}], "Text",
 CellChangeTimes->{{3.4213277372223377`*^9, 3.421327766424328*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Weight", "Subsubsection",
 CellTags->{"sli_opt", "c:61", "b:1.2.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["WList", "Program"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["w", "1"], ",", 
      SubscriptBox["w", "2"], ",", "..."}], "}"}]}], TraditionalForm]]],
 " sets the values of weight for the elements of the basis (or for the \
generators only if the algebra or the module is built from generators). The \
default weights are defined in some space constructors."
}], "Text",
 CellChangeTimes->{{3.4213277759179792`*^9, 3.421327780514589*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parent relations", "Subsubsection",
 CellTags->{"sli_opt", "c:62", "b:1.2.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["TheSpace", "Program"], "\[Rule]", "V"}], TraditionalForm]]],
 " declares that the created space (algebra, module) is derived from the \
original space ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 ". Most space constructors assign the default value of this property."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generators", "Subsubsection",
 CellTags->{"sli_opt", "c:63", "b:1.2.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["GRange", "Program"], "\[Rule]", 
    StyleBox["deg",
     FontSlant->"Italic"]}], TraditionalForm]]],
 "  restricts the evaluation to vectors of degree (or filtration) up to  ",
 Cell[BoxData[
  FormBox[
   StyleBox["deg",
    FontSlant->"Italic"], TraditionalForm]]],
 " (see ",
 StyleBox["Generators and relations",
  FontWeight->"Bold"],
 " in the previous section)."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Action", "Subsubsection",
 CellTags->{"sli_opt", "c:64", "b:1.2.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Bracket", "Program"], "\[Rule]", 
    StyleBox["op",
     FontSlant->"Italic"]}], TraditionalForm]]],
 " declares the name of the bracket operation in the Lie (super)algebra ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 "  or the action of the algebra on the module ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 ". The default name of ",
 Cell[BoxData[
  FormBox[
   StyleBox["Bracket", "Program"], TraditionalForm]]],
 " is ",
 StyleBox["Act", "Program"],
 ". Some constructors use other defaults names, such as ",
 StyleBox["Lb", "Program"],
 " for vector fields, ",
 StyleBox["Pb", "Program"],
 " for the Poisson algebra, ",
 StyleBox["Kb", "Program"],
 " for the Contact algebra, ",
 StyleBox["Mb", "Program"],
 " for the superalgebra with the odd contact bracket.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["bracket", "Program"], "\[Rule]", 
    StyleBox["op",
     FontSlant->"Italic"]}], TraditionalForm]]],
 " declares the  name of the unevaluated form of the bracket or the action of \
the algebra on the module (it is used when no evaluation is required). The \
default value is the value of ",
 StyleBox["Bracket", "Program"],
 StyleBox["'s", "Program",
  FontFamily->"Times"],
 "  argument with the lower-case first letter."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Output format", "Subsubsection",
 Evaluatable->False,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_opt", "c:65", "b:1.2.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Output", "Program"], "\[Rule]", "f"}], TraditionalForm]]],
 " assigns the function that must be applied to an element of the basis to \
obtain its output format (or ",
 StyleBox["None", "Program"],
 " if the output format is not defined or is defined separately). The default \
function is ",
 StyleBox["Subscripted", "Program"],
 ". In the constructors of relatives, the default value is ",
 StyleBox["Auto", "Program"],
 ", which means \"the same format as for the original space\".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["TeX", "Program"], "\[Rule]", "f"}], TraditionalForm]]],
 " assigns the function that must be applied to an element of the basis to \
obtain its ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"T", 
    AdjustmentBox["E",
     BoxBaselineShift->0.5,
     BoxMargins->{{-0.075, -0.085}, {0, 0}}], "X"}]]]],
 " format (or ",
 StyleBox["None", "Program"],
 " if ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"T", 
    AdjustmentBox["E",
     BoxBaselineShift->0.5,
     BoxMargins->{{-0.075, -0.085}, {0, 0}}], "X"}]]]],
 " format is not defined or is defined separately). The default value is ",
 StyleBox["None", "Program"],
 ". In the constructors of relatives, the default value is ",
 StyleBox["Auto", "Program"],
 " which means \"the same format as for the original space\".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Standard", "Program"], "\[Rule]", "f"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Traditional", "Program"], 
    StyleBox["\[Rule]", "Program"], "f"}], TraditionalForm]]],
 " define in the same way the standard and the traditional output format."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Relative spaces", "Subsubsection",
 CellTags->{"sli_opt", "c:66", "b:1.2.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["relation",
     FontSlant->"Italic"], "\[Rule]", 
    StyleBox["name",
     FontSlant->"Italic"]}], TraditionalForm]]],
 " where ",
 StyleBox["relation",
  FontSlant->"Italic"],
 " is the name of the relation, see the list in the beginning of the section \
(except ",
 StyleBox["MLeft", "Program"],
 "), tells that the corresponding relative space must be generated and sets \
its name. "
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other options", "Subsubsection",
 CellTags->{"sli_opt", "c:67", "b:1.2.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Enum", "Program"], "\[Rule]", 
    StyleBox["False", "Program"]}], TraditionalForm]]],
 " suppresses the enumeration of the basis."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_opt", "b:1.2.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Clear", "Program"], "\[Rule]", 
    StyleBox["False", "Program"]}], TraditionalForm]]],
 " allows to save the old definitions of the space that is being redefined by \
the constructor.  Only the properties not assigned by the constructor can be \
saved. This option may be used to define the action of several algebras on \
the same module."
}], "Text",
 CellChangeTimes->{{3.4213278335808945`*^9, 3.421327839349189*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_opt", "b:1.2.2"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Algebra", "Program"], "\[Rule]", "g"}], TraditionalForm]]],
 " tells that the submodule or a module-relative of the module ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 " must be defined as modules over the algebra ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " rather than over ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["TheAlgebra", "Program"], "[", "m", "]"}], TraditionalForm]]],
 ". This option is useful when several algebras act on the module ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.4232287198434114`*^9, 3.4232287211252546`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["List of space constructors", "Subsection",
 CellTags->{"sli_constr", "c:68", "b:1.2.3"}],

Cell[TextData[{
 "The space constructors are commands to build (or declare) vector spaces, \
algebras and modules. Every constructor fixes a basis of the space, defines \
the properties of the space and functions on it. The following list embraces \
all constructors defined in the ",
 StyleBox["Super Lie",
  FontWeight->"Bold"],
 " package. More constructors can be added."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}],

Cell[CellGroupData[{

Cell["VectorSpace", "Subsubsection",
 CellTags->{"sli_constr", "c:69", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VectorSpace", "Program"], "[", 
    RowBox[{"V", ",", " ", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], "..."}]}], "]"}], TraditionalForm]]],
 "  defines a new vector space ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 " with the basis ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "[", "i", "]"}], TraditionalForm]]],
 ",  where ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " an integer and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "\[LessEqual]", "i", "\[LessEqual]", 
    RowBox[{
     StyleBox["Dim", "Program"], "[", "V", "]"}]}], TraditionalForm]]],
 ". The exception is the case where the list in the optional argument ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Dim", "Program"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["d", "0"], ",", 
      SubscriptBox["d", "1"], ",", "..."}], "}"}]}], TraditionalForm]]],
 " starts with ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", "\[Infinity]"}], TraditionalForm]]],
 " or with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", ",", "\[Infinity]"}], TraditionalForm]]],
 ". In this case, the lower limit of ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " is  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "\[Infinity]"}], TraditionalForm]]],
 ".\nThe optional arguments are the following ones:\n",
 StyleBox["Dim", "Program"],
 " or ",
 StyleBox["PList", "Program"],
 " specifies the dimension of and the parity function on the space ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 ";\n",
 StyleBox["Output", "Program"],
 ", ",
 StyleBox["TeX", "Program"],
 ", ",
 StyleBox["Standard", "Program"],
 ", ",
 StyleBox["Traditional", "Program"],
 " specifies the output format of the elements of the basis;\n",
 StyleBox["GList", "Program"],
 " sets the degrees of the elements of the basis;\n",
 StyleBox["TheSpace", "Program"],
 " tells that the created space is not the original space and sets the name \
of the original space.\n",
 StyleBox["CoLeft", "Program"],
 ", ..., ",
 StyleBox["DLeft", "Program"],
 " (the relatives) define the names of the spaces-relatives.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Enum", "Program"], "\[Rule]", 
    StyleBox["False", "Program"]}], TraditionalForm]]],
 " suppresses the enumeration of the basis of ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Clear", "Program"], "\[Rule]", 
    StyleBox["False", "Program"]}], TraditionalForm]]],
 " preserves old definitions of ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["SubSpace", "Subsubsection",
 CellTags->{"sli_constr", "c:70", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["SubSpace", "Program"], "[", 
    RowBox[{"U", ",", "V", ",", 
     StyleBox["basis",
      FontSlant->"Italic"], ",", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], "..."}]}], "]"}], TraditionalForm]]],
 " defines a subspace ",
 Cell[BoxData[
  FormBox[
   RowBox[{"U", "\[Subset]", "V"}], TraditionalForm]]],
 " with the given basis. The optional arguments are the same as for ",
 StyleBox["VectorSpace", "Program"],
 ", except that ",
 StyleBox["Dim", "Program"],
 " or ",
 StyleBox["PList", "Program"],
 " are not supported. The basis of the space ",
 Cell[BoxData[
  FormBox["U", TraditionalForm]]],
 " will be named ",
 Cell[BoxData[
  FormBox[
   RowBox[{"U", "[", "i", "]"}], TraditionalForm]]],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["TensorSpace", "Subsubsection",
 CellTags->{"sli_constr", "c:71", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["TensorSpace", "Program"], "[", 
    RowBox[{"T", ",", " ", "V", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["comp",
        FontSlant->"Italic"], ",", " ", "..."}], "}"}], ",", " ", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], "..."}]}], "]"}], TraditionalForm]]],
 " defines the space ",
 StyleBox["T ",
  FontFamily->"Geneva",
  FontSize->10,
  FontSlant->"Italic"],
 " as the tensor product of the components listed. The repeated components \
may be written as ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["comp",
     FontSlant->"Italic"], "n"], TraditionalForm]]],
 ". All components must be relatives of the space ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 ". Only format options are supported. The basis of ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Geneva",
  FontSize->10,
  FontSlant->"Italic"],
 "is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "[", 
    RowBox[{
     SubscriptBox["i", "1"], ",", 
     SubscriptBox["i", "2"], ",", "..."}], "]"}], TraditionalForm]]],
 ".\nExample:\n",
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"VectorSpace", "[", 
     RowBox[{
      StyleBox["V",
       FontSlant->"Plain"], ",", 
      RowBox[{"Dim", "\[Rule]", "5"}], ",", 
      RowBox[{"CoLeft", "\[Rule]", "LV"}], ",", 
      RowBox[{"DRight", "\[Rule]", "DV"}]}], "]"}], ";"}], TraditionalForm]], 
  "Program"], "Program"],
 StyleBox["\n", "Program"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{"TensorSpace", "[", 
    RowBox[{"Tn", ",", 
     StyleBox["V",
      FontSlant->"Plain"], ",", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["V",
        FontSlant->"Plain"], ",", 
       SuperscriptBox["LV", "2"], ",", "DV", ",", 
       StyleBox["V",
        FontSlant->"Plain"]}], "}"}]}], "]"}], TraditionalForm]], "Program"], 
  "Program"]
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["CommutativeLieAlgebra", "Subsubsection",
 CellTags->{"sli_constr", "c:72", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["CommutativeLieAlgebra", "Program"], "[", 
    RowBox[{"V", ",", " ", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], "..."}]}], "]"}], TraditionalForm]]],
 " defines the Lie bracket ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"[", 
     RowBox[{
      RowBox[{"x", "[", "...", "]"}], ",", " ", 
      RowBox[{"x", "[", "...", "]"}]}], "]"}], " ", "=", " ", "0"}], 
   TraditionalForm]]],
 " on ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 ". Options: ",
 StyleBox["Bracket", "Program"],
 " and format options."
}], "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["MatrixLieAlgebra", "Subsubsection",
 CellTags->{"sli_constr", "c:73", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["MatrixLieAlgebra", "Program"], "[", 
    RowBox[{"g", ",", " ", "V", ",", " ", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], "..."}]}], "]"}], TraditionalForm]]],
 " defines ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " as the matrix Lie  (super)algebra on the space ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 " and the action of ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " on the space ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 " and its relatives. Options: ",
 StyleBox["Bracket", "Program"],
 ", ",
 StyleBox["bracket", "Program"],
 " and format options. The basis elements of the matrix Lie (super)algebra \
are ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "[", 
    RowBox[{"i", ",", "j"}], "]"}], TraditionalForm]]],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["MatrixLieAlgebra", "Program"], "[", 
    RowBox[{"g", ",", " ", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], "..."}]}], "]"}], TraditionalForm]]],
 " defines ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " as the Lie (super)algebra of matrices (the dimension is an optional \
argument)."
}], "Text",
 CellChangeTimes->{{3.421327909039398*^9, 3.421327914907837*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["SubAlgebra", "Subsubsection",
 CellTags->{"sli_constr", "c:74", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["SubAlgebra", "Program"], "[", 
    RowBox[{"h", ",", " ", "g", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["gen",
        FontSlant->"Italic"], "..."}], "}"}], ",", " ", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], "..."}]}], "]"}], TraditionalForm]]],
 " defines the subalgebra ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", "\[SubsetEqual]", "g"}], TraditionalForm]]],
 " generated by the elements ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["gen",
     FontSlant->"Italic"], "..."}], TraditionalForm]]],
 " . The basis elements of the subalgebra are denoted ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", "[", "i", "]"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "\[LessEqual]", "i", "\[LessEqual]", 
    RowBox[{
     StyleBox["Dim", "Program"], "[", "h", "]"}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.4213279860100765`*^9, 3.4213280078514833`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["QuotientAlgebra", "Subsubsection",
 CellTags->{"sli_constr", "c:75", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["QuotientAlgebra", "Program"], "[", 
    RowBox[{
     StyleBox["q",
      FontSlant->"Italic"], ",", "g", ",", "h"}], "]"}], TraditionalForm]]],
 " builds the quotient algebra ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "=", " ", 
    RowBox[{"g", "/", "h"}]}], TraditionalForm]]],
 ", where ",
 StyleBox["h",
  FontSlant->"Italic"],
 " is defined as an ideal in ",
 StyleBox["g",
  FontSlant->"Italic"],
 ".  The basis elements of the subalgebra are denoted ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "[", "i", "]"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "\[LessEqual]", "i", "\[LessEqual]", 
    RowBox[{
     StyleBox["Dim", "Program"], "[", "q", "]"}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.421328023223587*^9, 3.4213280353209825`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["AlgebraDecomposition", "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_constr", "c:76", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["AlgebraDecomposition", "Program"], 
    StyleBox["[", "Program"], 
    RowBox[{"D", ",", "g", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["h", "1"], ",", 
       SubscriptBox["h", "2"], ",", "..."}], "}"}], ",", " ", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], "..."}]}], "]"}], TraditionalForm]]],
 " defines a decomposition ",
 Cell[BoxData[
  FormBox["D", TraditionalForm]]],
 " of the algebra ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", " ", "=", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["h", "1"], "\[CirclePlus]", 
      SubscriptBox["h", "2"], "\[CirclePlus]"}], "..."}]}], TraditionalForm]]],
 ". Each component ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["h", "i"], TraditionalForm]]],
 " is either a subalgebra in ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " (defined using ",
 Cell[BoxData[
  FormBox[
   StyleBox["SubAlgebra", "Program"], TraditionalForm]]],
 ") or a list ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox[
      StyleBox["name",
       FontSlant->"Italic"], "i"], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["g", 
        SubscriptBox["i", "1"]], ",", "..."}], "}"}], ",", " ", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], 
      StyleBox[
       RowBox[{
        StyleBox[".",
         FontSlant->"Italic"], ".."}]]}]}], "}"}], TraditionalForm]]],
 " of arguments that generate the subalgebra ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["h", "i"], TraditionalForm]]],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["HWModule", "Subsubsection",
 CellTags->{"sli_constr", "c:77", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["HWModule", "Program"], "[", 
    RowBox[{"m", ",", " ", "g", ",", " ", 
     StyleBox["wt",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 " builds the irreducible module ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 " over the algebra ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " with highest weight ",
 Cell[BoxData[
  FormBox[
   StyleBox["wt",
    FontSlant->"Italic"], TraditionalForm]]],
 ". A decomposition ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "=", 
    RowBox[{
     SubscriptBox["g", "+"], "\[CirclePlus]", 
     SubscriptBox["g", "0"], "\[CirclePlus]", 
     SubscriptBox["g", "-"]}]}], TraditionalForm]]],
 " with name ",
 StyleBox["CartanTriade", "Program"],
 " should be defined on ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 ".\nOptional arguments:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["P", "Program",
     FontSlant->"Plain"], "\[Rule]", "p"}], TraditionalForm]]],
 " is the parity of the highest vector (default is 0)\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Grade", "Program"], "\[Rule]", "r"}], TraditionalForm]]],
 ": all calculations are restricted to the elements of degree ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[GreaterEqual]", "-"}], "|", "r", "|"}], TraditionalForm]]],
 " (the degree of the highest weight vector is 0).\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Order", "Program"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["y", "1"], ",", "...", ",", 
      SubscriptBox["y", "m"]}], "}"}]}], TraditionalForm]]],
 "  is the order in which the elements of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["g", "-"], TraditionalForm]]],
 " should appear in the expressions of the basis of ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 " in terms of generators of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"U", "(", 
    SubscriptBox["g", "-"], ")"}], TraditionalForm]]],
 ". The default order is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Basis", "Program"], "[", 
    SubscriptBox["g", "-"], "]"}], TraditionalForm]]],
 ".\nSee also ",
 StyleBox["VectorSpace", "Program"],
 " for general options."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["SubModule", "Subsubsection",
 CellTags->{"sli_constr", "c:78", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["SubModule", "Null",
     FontFamily->"Courier"], "[", 
    RowBox[{"n", ",", " ", "m", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["gen",
        FontSlant->"Italic"], "..."}], "}"}], ",", " ", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], "..."}]}], "]"}], TraditionalForm]]],
 " defines the ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 "-submodule ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " of the ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 "-module ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 "  generated by the elements ",
 Cell[BoxData[
  FormBox[
   StyleBox["gen",
    FontSlant->"Italic"], TraditionalForm]]],
 "... , where ",
 Cell[BoxData[
  FormBox[
   StyleBox["g",
    FontSlant->"Italic"], TraditionalForm]]],
 " is either the algebra indicated by the optional argument ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Algebra", "Program"], "\[Rule]", "g"}], TraditionalForm]]],
 " or (as default) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["TheAlgebra", "Program"], "[", "m", "]"}], TraditionalForm]]],
 ". For other options, see ",
 StyleBox["SubSpace", "Program"],
 ".\nThe basis elements of the submodule are denoted ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "[", "i", "]"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "\[LessEqual]", "i", "\[LessEqual]", 
    RowBox[{
     StyleBox["Dim", "Program"], "[", "n", "]"}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.4213280644428577`*^9, 3.421328073485861*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["QuotientModule", "Subsubsection",
 CellTags->{"sli_constr", "c:79", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["QuotientModule", "Program"], "[", 
    RowBox[{
     StyleBox["q",
      FontSlant->"Italic"], ",", "m", ",", "n"}], "]"}], TraditionalForm]]],
 " builds the quotient module ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "=", " ", 
    RowBox[{"m", "/", "n"}]}], TraditionalForm]]],
 ", where ",
 StyleBox["n",
  FontSlant->"Italic"],
 " is defined as submodule in ",
 StyleBox["g",
  FontSlant->"Italic"],
 ". \nThe basis elements of the submodule are denoted ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "[", "i", "]"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "\[LessEqual]", "i", "\[LessEqual]", 
    RowBox[{
     StyleBox["Dim", "Program"], "[", "q", "]"}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.4213280881769857`*^9, 3.4213280902499666`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["RestrictModule", "Subsubsection",
 CellTags->{"sli_constr", "c:80", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["RestrictModule", "Program"], "[", 
    RowBox[{"m", ",", "g"}], "]"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 " is a subspace of any ",
 Cell[BoxData[
  FormBox["G", TraditionalForm]]],
 "-module ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " is a Lie sub(super)algebra of ",
 Cell[BoxData[
  FormBox["G", TraditionalForm]]],
 ", tests if the space ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 " is ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 "-invariant and, if it is, defines a ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 "-module structure on ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.421328107825238*^9, 3.421328114414714*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ideal", "Subsubsection",
 CellTags->{"sli_constr", "c:81", "b:1.2.3"}],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Ideal", "Program"], "[", 
    RowBox[{"h", ",", "g", ",", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["gen",
        FontSlant->"Italic"], "..."}], "}"}], ",", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], "..."}]}], "]"}], TraditionalForm]]],
 " defines the ideal ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]]],
 " of the algebra ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 "  generated by the elements ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["gen",
     FontSlant->"Italic"], "..."}], TraditionalForm]]],
 " . For options, see ",
 StyleBox["SubSpace", "Program"],
 ".\nThe basis elements of the ideal are denoted ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", "[", "i", "]"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "\[LessEqual]", "i", "\[LessEqual]", 
    RowBox[{
     StyleBox["Dim", "Program"], "[", "h", "]"}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.421328130127307*^9, 3.421328131979971*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["PiLeft, PiRight, MRight", "Subsubsection",
 CellTags->{"sli_constr", "c:82", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PiLeft", "Program"], "[", 
    RowBox[{
     RowBox[{"m", "\[Rule]", 
      StyleBox["\[Pi]m",
       FontSlant->"Italic"]}], ",", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], "..."}]}], "]"}], TraditionalForm]]],
 " builds the module ",
 Cell[BoxData[
  FormBox[
   StyleBox["\[Pi]m",
    FontSlant->"Italic"], TraditionalForm]]],
 " as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalPi]", "\[CircleTimes]", "m"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox["\[CapitalPi]", TraditionalForm]]],
 " is the (0|1)-dimensional trivial module.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PiRight", "Program"], "[", 
    RowBox[{
     RowBox[{"m", "\[Rule]", 
      StyleBox["m\[Pi]",
       FontSlant->"Italic"]}], ",", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], "..."}]}], "]"}], TraditionalForm]]],
 " builds the module ",
 Cell[BoxData[
  FormBox[
   StyleBox["m\[Pi]",
    FontSlant->"Italic"], TraditionalForm]]],
 " as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "\[CircleTimes]", "\[CapitalPi]"}], TraditionalForm]]],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["MRight", "Program"], "[", 
    RowBox[{
     RowBox[{"m", "\[Rule]", 
      RowBox[{"m", "'"}]}], ",", " ", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], "..."}]}], "]"}], TraditionalForm]]],
 " builds the module ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "'"}], TraditionalForm]]],
 " as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "\[CapitalPi]", "\[CircleTimes]", "m", "\[CircleTimes]", "\[CapitalPi]"}], 
   TraditionalForm]]],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["CoLeft", "Subsubsection",
 CellTags->{"sli_constr", "c:83", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["CoLeft", "Program"], "[", 
    RowBox[{
     RowBox[{"m", "\[Rule]", 
      RowBox[{"m", "'"}]}], ",", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], "..."}]}], "]"}], TraditionalForm]]],
 " builds the module ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "'"}], TraditionalForm]]],
 " on the space of left even linear forms on ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 ". The function is implemented only for finite dimensional modules with \
one-index bases. The option ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Algebra", "Program"], "\[Rule]", "g"}], TraditionalForm]]],
 " tells that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "'"}], TraditionalForm]]],
 " must be defined as a ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 "-module. The option ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Clear", "Program"], "\[Rule]", 
    StyleBox["False", "Program"]}], TraditionalForm]]],
 " allows us to define the action of several algebras on ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "'"}], TraditionalForm]]],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["DLeft", "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_constr", "c:84", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["DLeft", "Program"], "[", 
    RowBox[{
     RowBox[{"m", "\[Rule]", 
      StyleBox["dm",
       FontSlant->"Italic"]}], ",", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], "..."}]}], "]"}], TraditionalForm]]],
 " builds the module ",
 Cell[BoxData[
  FormBox[
   StyleBox["dm",
    FontSlant->"Italic"], TraditionalForm]],
  TextAlignment->Left,
  TextJustification->1],
 " on the space of left odd (i.e., exterior or differential) linear forms on ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 ". The function is implemented only for finite dimensional modules with \
one-index bases. If ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 " is an algebra, then ",
 StyleBox["DLeft", "Program"],
 " defines the coaction ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["CoAct", "Program"], " ", ":", " ", 
    RowBox[{
     RowBox[{
      StyleBox["dm",
       FontSlant->"Italic"], " ", "\[LongRightArrow]", " ", 
      StyleBox["dm",
       FontSlant->"Italic"]}], "\[Wedge]", 
     StyleBox["dm",
      FontSlant->"Italic"]}]}], TraditionalForm]]],
 ". This allows one to use the derivative ",
 StyleBox["Der", "Program"],
 " on the exterior forms on ",
 StyleBox["m",
  FontSlant->"Italic"],
 ", both with trivial coefficients and with coefficients in any ",
 StyleBox["m",
  FontSlant->"Italic"],
 "-module.\nThe option ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Algebra", "Program"], "\[Rule]", "g"}], TraditionalForm]]],
 " tells that the ",
 Cell[BoxData[
  FormBox[
   StyleBox["dm",
    FontSlant->"Italic"], TraditionalForm]]],
 " must be defined as ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 "-module.\nThe option ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Clear", "Program"], "\[Rule]", 
    StyleBox["False", "Program"]}], TraditionalForm]]],
 " allows one to define the action of several algebras on ",
 Cell[BoxData[
  FormBox[
   StyleBox["dm",
    FontSlant->"Italic"], TraditionalForm]]],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["VectorLieAlgebra", "Subsubsection",
 CellTags->{"sli_constr", "c:85", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VectorLieAlgebra", "Program"], "[", 
    RowBox[{"g", ",", " ", "x"}], "]"}], TraditionalForm]]],
 " defines the Lie (super)algebra ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " as the Lie (super)algebra of vector fields on the space ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " together with its action on the (super)space of polynomials in ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 ". The basis of ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["p", "i"], "[", "x", "]"}], "**", 
     RowBox[{"v", "[", "j", "]"}]}], "}"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["p", "i"], "[", "x", "]"}], "}"}], TraditionalForm]]],
 " is the basis of polynomials in ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"v", "[", "j", "]"}], "}"}], TraditionalForm]]],
 " is the basis of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["CoLeft", "Program"], "[", "x", "]"}], TraditionalForm]]],
 " (the space of left even linear forms on ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 "). The name of the Lie bracket and the action is ",
 StyleBox["Lb", "Program"],
 ", the unevaluated form is ",
 StyleBox["lb", "Program"],
 ".\nUnless the space ",
 StyleBox["x",
  FontSlant->"Italic"],
 " is already graded, the standard grading is defined on ",
 StyleBox["x",
  FontSlant->"Italic"],
 " by assuming ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Deg", "[", 
     SubscriptBox["x", "i"], "]"}], "=", "1"}], TraditionalForm]]],
 ". The grading is extended to ",
 StyleBox["g",
  FontSlant->"Italic"],
 ". \nThe algebra ",
 StyleBox["g",
  FontSlant->"Italic"],
 " may be regraded by calling ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["ReGrade", "Program"], "[", 
    RowBox[{"g", ",", " ", 
     StyleBox["grading",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 ". The predefined gradings are numbered from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "k"}], TraditionalForm]]],
 " to  ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]]],
 " there ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]]],
 " is odd dimension of ",
 StyleBox["x",
  FontSlant->"Italic"],
 ". In the ",
 StyleBox["i",
  FontSlant->"Italic"],
 "-th grade, the first ",
 StyleBox["i",
  FontSlant->"Italic"],
 " odd elements of the basis of ",
 StyleBox["x",
  FontSlant->"Italic"],
 " have degree 0, all the other ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "j"], TraditionalForm]]],
 " have degree 1. In the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"-", "i"}], ")"}], TraditionalForm]]],
 "-th grade, the last ",
 StyleBox["i",
  FontSlant->"Italic"],
 " odd elements of the basis of ",
 StyleBox["x",
  FontSlant->"Italic"],
 " have degree 0, all the other ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "j"], TraditionalForm]]],
 " have degree 1."
}], "Text",
 CellChangeTimes->{{3.4213281824625616`*^9, 3.421328187349589*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["PoissonAlgebra", "Subsubsection",
 CellTags->{"sli_constr", "c:86", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PoissonAlgebra", "Program"], "[", 
    RowBox[{"g", ",", " ", "x"}], "]"}], TraditionalForm]]],
 " defines the Lie (super)algebra ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " as the Poisson algebra of the polynomials in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]]],
 ", ..., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{"2", "n"}]], TraditionalForm]]],
 " (the vector space ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " should be already defined) with the Poisson bracket \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"{", 
      RowBox[{"f", ",", "g"}], "}"}], 
     RowBox[{"P", ".", "b", "."}]], "=", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"P", "[", "f", "]"}]]}], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"\[PartialD]", " ", "f"}], 
           RowBox[{"\[PartialD]", " ", 
            SubscriptBox["x", "i"]}]], 
          FractionBox[
           RowBox[{"\[PartialD]", " ", "g"}], 
           RowBox[{"\[PartialD]", " ", 
            SubscriptBox["x", 
             RowBox[{
              RowBox[{"2", "n"}], "+", "1", "-", "i"}]]}]]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"P", "[", 
            SubscriptBox["x", "i"], "]"}]], 
          FractionBox[
           RowBox[{"\[PartialD]", " ", "f"}], 
           RowBox[{"\[PartialD]", " ", 
            SubscriptBox["x", 
             RowBox[{
              RowBox[{"2", "n"}], "+", "1", "-", "i"}]]}]], 
          FractionBox[
           RowBox[{"\[PartialD]", " ", "g"}], 
           RowBox[{"\[PartialD]", " ", 
            SubscriptBox["x", "i"]}]]}]}], ")"}], "."}]}]}]}], 
   TraditionalForm]]],
 "\n\t\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PoissonAlgebra", "Program"], "[", 
    RowBox[{"g", ",", " ", 
     RowBox[{"{", 
      RowBox[{"p", ",", "q"}], "}"}]}], "]"}], TraditionalForm]]],
 " defines the Lie (super)algebra ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " as the Poisson algebra of the polynomials in ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "1"], ",", "...", ",", 
    SubscriptBox["p", "n"]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["q", "1"], ",", "...", ",", 
    SubscriptBox["q", "n"]}], TraditionalForm]]],
 " (the vector spaces ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]]],
 " should be already defined and have the same superdimension) with the \
Poisson bracket \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"{", 
      RowBox[{"f", ",", "g"}], "}"}], 
     RowBox[{"P", ".", "b", "."}]], "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{
        RowBox[{"P", "[", "f", "]"}], 
        RowBox[{"P", "[", 
         SubscriptBox["p", "i"], "]"}]}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"\[PartialD]", " ", "f"}], 
           RowBox[{"\[PartialD]", " ", 
            SubscriptBox["p", "i"]}]], 
          FractionBox[
           RowBox[{"\[PartialD]", " ", "g"}], 
           RowBox[{"\[PartialD]", " ", 
            SubscriptBox["q", "i"]}]]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"P", "[", 
            SubscriptBox["p", "i"], "]"}]], 
          FractionBox[
           RowBox[{"\[PartialD]", " ", "f"}], 
           RowBox[{"\[PartialD]", " ", 
            SubscriptBox["q", "i"]}]], 
          FractionBox[
           RowBox[{"\[PartialD]", " ", "g"}], 
           RowBox[{"\[PartialD]", 
            SubscriptBox["p", "i"]}]]}]}], ")"}], ".", 
       "\[IndentingNewLine]"}]}]}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PoissonAlgebra", "Program"], "[", 
    RowBox[{"g", ",", " ", 
     RowBox[{"{", "\[Theta]", "}"}]}], "]"}], TraditionalForm]]],
 " defines the Lie (super)algebra ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " as the Poisson algebra of the polynomials in odd indeterminates ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "1"], ",", "...", ",", 
    SubscriptBox["\[Theta]", "n"]}], TraditionalForm]]],
 " (the vector space ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]]],
 " should be already defined) with the Poisson bracket \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"{", 
      RowBox[{"f", ",", "g"}], "}"}], 
     RowBox[{"P", ".", "b", "."}]], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"P", "[", "f", "]"}]], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       FractionBox[
        RowBox[{"\[PartialD]", " ", "f"}], 
        RowBox[{"\[PartialD]", " ", 
         SubscriptBox["\[Theta]", "i"]}]], 
       FractionBox[
        RowBox[{"\[PartialD]", " ", "g"}], 
        RowBox[{"\[PartialD]", " ", 
         SubscriptBox["\[Theta]", "i"]}]]}]}]}]}], TraditionalForm]]],
 ".\n\t\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PoissonAlgebra", "Program"], "[", 
    RowBox[{"g", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["p", "1"], ",", 
       RowBox[{"...", 
        SubscriptBox["p", "n"]}], ",", 
       SubscriptBox["q", "n"], ",", 
       RowBox[{"...", 
        SubscriptBox["q", "1"]}]}], "}"}]}], "]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PoissonAlgebra", "Program"], "[", 
    RowBox[{"g", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["p", "1"], ",", 
       RowBox[{"...", 
        SubscriptBox["p", "n"]}], ",", "\[Theta]", ",", 
       SubscriptBox["q", "n"], ",", 
       RowBox[{"...", 
        SubscriptBox["q", "1"]}]}], "}"}]}], "]"}], TraditionalForm]]],
 ", where all ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "i"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "i"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]]],
 " are (super)spaces, define the Lie (super)algebra ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " as the Poisson algebra of the polynomials on the direct sum of vector \
spaces with Poisson bracket equal to the sum of the Poisson brackets on the \
pairs  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "i"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["q", "i"], TraditionalForm]]],
 " and on ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]]],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PoissonAlgebra", "Program"], "[", 
    RowBox[{"g", ",", "x", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["c", "1"], ",", 
         SubscriptBox["i", "1"], ",", 
         SubscriptBox["j", "1"]}], "}"}], ",", "...", ",", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["c", "m"], ",", 
         SubscriptBox["i", "m"], ",", 
         SubscriptBox["j", "m"]}], "}"}]}], "}"}]}], "]"}], TraditionalForm]]],
 " defines the Poisson algebra ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " of the polynomials in ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], ",", "...", ",", 
    SubscriptBox["x", "m"]}], TraditionalForm]]],
 " (the vector space ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " should be already defined) with the Poisson bracket \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"{", 
      RowBox[{"f", ",", "g"}], "}"}], 
     RowBox[{"P", ".", "b", "."}]], "=", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"P", "[", "f", "]"}]]}], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], "m"], 
      RowBox[{
       SubscriptBox["c", "k"], 
       FractionBox[
        RowBox[{"\[PartialD]", " ", "f"}], 
        RowBox[{"\[PartialD]", " ", 
         SubscriptBox["x", 
          SubscriptBox["i", "k"]]}]], 
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", " ", "g"}], 
         RowBox[{"\[PartialD]", " ", 
          SubscriptBox["x", 
           SubscriptBox["j", "k"]]}]], "."}]}]}]}]}], TraditionalForm]]]
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ContactAlgebra", "Subsubsection",
 CellTags->{"sli_constr", "c:87", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["ContactAlgebra", "Program"], "[", 
    RowBox[{"g", ",", "x", ",", "t"}], "]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["ContactAlgebra", "Program"], "[", 
    RowBox[{"g", ",", "x", ",", "t", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["c", "1"], ",", 
         SubscriptBox["i", "1"], ",", 
         SubscriptBox["j", "1"]}], "}"}], ",", "...", ",", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["c", "m"], ",", 
         SubscriptBox["i", "m"], ",", 
         SubscriptBox["j", "m"]}], "}"}]}], "}"}]}], "]"}], TraditionalForm]]],
 " define the Lie (super)algebra ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " as the contact algebra of the polynomials in ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]]],
 " and the space ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " (or the direct sum of spaces if ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " is a list). The Poisson bracket on ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " is also defined. Here ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " should be either a space name or a list of space names (as for ",
 StyleBox["PoissonAlgebra", "Program"],
 ")."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["FreeLieAlgebra", "Subsubsection",
 CellTags->{"sli_constr", "c:88", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["FreeLieAlgebra", "Program"], "[", 
    RowBox[{"g", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["gen",
        FontSlant->"Italic"], "..."}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["rel",
        FontSlant->"Italic"], "..."}], "}"}], ",", " ", 
     StyleBox["range",
      FontSlant->"Italic"], ",", " ", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], "..."}]}], "]"}], TraditionalForm]]],
 " defines the (super)algebra ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 "  generated (as a free algebra) by elements ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["gen",
     FontSlant->"Italic"], ",", "..."}], TraditionalForm]]],
 " with relations ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["rel",
     FontSlant->"Italic"], ",", "..."}], TraditionalForm]]],
 " . Options ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Grade", "Program"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["d", "1"], ",", "..."}], "}"}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PList", "Program"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["p", "1"], ",", "..."}], "}"}]}], TraditionalForm]]],
 " define the degrees and parities of generators. All computations are made \
for elements with degree",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LessEqual]", 
    StyleBox["range",
     FontSlant->"Italic"]}], TraditionalForm]]],
 ". The basis of the new algebra will be ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "[", "i", "]"}], ",", " ", 
    RowBox[{
     RowBox[{"where", " ", "1"}], "\[LessEqual]", "i", "\[LessEqual]", 
     RowBox[{
      StyleBox["Dim", "Program"], "[", "g", "]"}]}]}], TraditionalForm]]],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["CartanMatrixAlgebra", "Subsubsection",
 CellTags->{"sli_constr", "c:89", "b:1.2.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["CartanMatrixAlgebra", "Program"], "[", 
    RowBox[{"g", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "h", ",", "y"}], "}"}], ",", 
     StyleBox["matr",
      FontSlant->"Italic"], ",", 
     StyleBox["range",
      FontSlant->"Italic"], ",", 
     RowBox[{
      StyleBox["options",
       FontSlant->"Italic"], "..."}]}], "]"}], TraditionalForm]]],
 " defines the Lie (super)algebra with a given Cartan matrix ",
 Cell[BoxData[
  FormBox[
   StyleBox["matr",
    FontSlant->"Italic"], TraditionalForm]]],
 ". Its elements are named ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", "[", "i", "]"}], TraditionalForm]]],
 " (Cartan subalgebra), ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "[", "i", "]"}], TraditionalForm]]],
 " (positive weight vectors), ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "[", "i", "]"}], TraditionalForm]]],
 " (negative weight vectors). Computations go up to terms of degree ",
 Cell[BoxData[
  FormBox[
   StyleBox["range",
    FontSlant->"Italic"], TraditionalForm]]],
 ". Options ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Grade", "Program"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["d", "1"], ",", "..."}], "}"}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PList", "Program"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["p", "1"], ",", "..."}], "}"}]}], TraditionalForm]]],
 " define the degrees and parities of generators."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classical Lie superalgebras", "Subsubsection",
 CellTags->{"sli_constr", "c:90", "b:1.2.3"}],

Cell[TextData[{
 StyleBox["glAlgebra", "Program"],
 ", see ",
 StyleBox["MatrixLieAlgebra", "Program"],
 ".\n",
 StyleBox["slAlgebra", "Program"],
 " builds the subalgebra of traceless matrices. For arguments, see ",
 StyleBox["MatrixLieAlgebra", "Program"],
 ".\n",
 StyleBox["pslAlgebra", "Program"],
 " bulds the quotient of ",
 StyleBox["slAlgebra", "Program"],
 " modulo the algebra of scalar matrices. The ",
 StyleBox["pslAlgebra", "Program"],
 " is defined if the dimension of the even and odd components of the original \
space are the same. For arguments, see ",
 StyleBox["MatrixLieAlgebra", "Program"],
 ".\nFor more examples, see the chapter Classical Lie Superalgebras."
}], "Text",
 CellChangeTimes->{{3.4213282244429264`*^9, 3.4213282515318785`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions on vector spaces", "Subsection",
 CellTags->{"sli_func", "c:91", "b:1.2.4"}],

Cell[TextData[{
 "The following functions are defined separately on each vector space (by the \
space constructor or manually). There are, however, some predefined, common \
for all spaces, properties of these functions. Notice that the result of \
application of these functions to non-vector arguments is unpredictable.\nThe \
functions ",
 StyleBox["P", "Program"],
 ", ",
 StyleBox["Grade", "Program"],
 ", ",
 StyleBox["PolyGrade", "Program"],
 ", ",
 StyleBox["Weight", "Program"],
 " are defined only for homogeneous vectors. This means that they are defined \
on a basis and the linear combination of the basis elements of the same \
parity (resp. degree, weight). The application of these functions to \
non-homogeneous vectors may produce an error in the calculations."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_func", "b:1.2.4"}],

Cell[CellGroupData[{

Cell["P", "Subsubsection",
 CellTags->{"sli_func", "c:92", "b:1.2.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["P", "Program",
     FontSlant->"Plain"], "[", "x", "]"}], TraditionalForm]]],
 " is the parity of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 ". The function ",
 StyleBox["P", "Program"],
 " is defined on the homogeneous (odd or even) vectors only. The properties \
of ",
 StyleBox["P", "Program"],
 " are ",
 StyleBox["Scalar", "Program"],
 " (i.e., the value of ",
 StyleBox["P", "Program"],
 " is scalar), ",
 StyleBox["Homogen->0", "Program"],
 ", ",
 StyleBox["TestFirst", "Program"],
 ", ",
 StyleBox["ThreadGraded->(PolynomialMod[Plus[##],2]&", "Program"],
 ") and ",
 StyleBox["LogPower->(SVTimes[PolynomialMod[#1,2],#2]&)", "Program"],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_func", "b:1.2.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Act", "Subsubsection",
 CellTags->{"sli_func", "c:93", "b:1.2.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Act", "Program"], "[", 
    RowBox[{
     SubscriptBox["g", "1"], ",", 
     SubscriptBox["g", "2"]}], "]"}], TraditionalForm]]],
 " for elements ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["g", "1"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["g", "2"], TraditionalForm]]],
 " of a Lie (super)algebra is the bracket operation in this algebra. \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Act", "Program"], "[", 
    RowBox[{"g", ",", " ", "m"}], "]"}], TraditionalForm]]],
 " for an element ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " of the algebra and an element ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 " of a module over the algebra is the action of ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " on ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 ". The name of the operation can be different, ",
 StyleBox["Act", "Program"],
 " is only the default name.\nThe properties of ",
 StyleBox["Act", "Program"],
 " are ",
 StyleBox["Vector", "Program"],
 ", ",
 StyleBox["Linear", "Program"],
 ", ",
 StyleBox["Graded", "Program"],
 ", ",
 StyleBox["Jacobi-> {tp,VTimes}", "Program"],
 ", ",
 StyleBox["Output->ArgForm[\"[`1`,`2`]\"]", "Program"],
 ", ",
 StyleBox["TeX->ArgForm[\"[`1`,\\\\,`2`]\"]", "Program"],
 ". The properties ",
 StyleBox["Jacobi", "Program"],
 ", ",
 StyleBox["Output", "Program"],
 ", ",
 StyleBox["TeX", "Program"],
 " of other brackets can be different."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_func", "b:1.2.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["act", "Subsubsection",
 CellTags->{"sli_func", "c:94", "b:1.2.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["act", "Program"], "[", 
    RowBox[{
     SubscriptBox["g", "1"], ",", 
     SubscriptBox["g", "2"]}], "]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["act", "Program"], "[", 
    RowBox[{"g", ",", " ", "m"}], "]"}], TraditionalForm]]],
 " represent the unevaluated operation ",
 StyleBox["Act", "Program"],
 ". The properties of ",
 StyleBox["Act", "Program"],
 " are ",
 StyleBox["Vector", "Program"],
 ", ",
 StyleBox["Linear", "Program"],
 ", ",
 StyleBox["Graded", "Program"],
 ",",
 StyleBox[" Output->ArgForm[\"[`1`,`2`]\"]", "Program"],
 ", ",
 StyleBox["TeX->ArgForm[\"[`1`,\\\\,`2`]\"]", "Program"],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_func", "b:1.2.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Grade", "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_func", "c:95", "b:1.2.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Grade", "Program"], "[", "v", "]"}], TraditionalForm]]],
 " is the degree (grading) of the vector ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 ". The function is only defined for graded spaces and homogeneous vectors. \
The properties of ",
 StyleBox["Grade", "Program"],
 " are ",
 StyleBox["Scalar", "Program"],
 ", ",
 StyleBox["Homogen->0", "Program"],
 ", ",
 StyleBox["ThreadGraded", "Program"],
 ", ",
 StyleBox["LogPower->Times", "Program"],
 ", ",
 StyleBox["TestFirst", "Program"],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_func", "b:1.2.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["PolyGrade", "Subsubsection",
 CellTags->{"sli_func", "c:96", "b:1.2.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PolyGrade", "Program"], "[", "v", "]"}], TraditionalForm]]],
 " returns ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalZ]", "n"], TraditionalForm]]],
 "- or ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "n"], TraditionalForm]]],
 "-grading of the vector ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 " (as a list of numbers). Some space constructor defines ",
 StyleBox["PolyGrade", "Program"],
 " to express grading in terms of generators. The properties of ",
 StyleBox["PolyGrade", "Program"],
 " are ",
 StyleBox["Scalar", "Program"],
 ", ",
 StyleBox["Homogen\[Rule]0", "Program"],
 ", ",
 StyleBox["ThreadGraded", "Program"],
 ", ",
 StyleBox["LogPower\[Rule]Times", "Program"],
 ", ",
 StyleBox["TestFirst", "Program"],
 "."
}], "Text",
 CellTags->{"sli_func", "b:1.2.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Weight", "Subsubsection",
 CellTags->{"sli_func", "c:97", "b:1.2.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Weight", "Program"], "[", "v", "]"}], TraditionalForm]]],
 " it the weight of the vector ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 ". There is no generic definition of weight in ",
 StyleBox["SuperLie",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " package, the weights are defined in some space constructors or by the user \
(using ",
 StyleBox["WList", "Program"],
 " or manually). The properties of ",
 StyleBox["Weight", "Program"],
 " are ",
 StyleBox["Scalar", "Program"],
 ", ",
 StyleBox["Homogen\[Rule]0", "Program"],
 ", ",
 StyleBox["ThreadGraded", "Program"],
 ", ",
 StyleBox["LogPower\[Rule]Times", "Program"],
 ", ",
 StyleBox["TestFirst", "Program"],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_func", "b:1.2.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Der, Der0", "Subsubsection",
 CellTags->{"sli_func", "c:98", "b:1.2.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Der", "Program"], "[", "\[Omega]", "]"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Der", "Program"], "[", 
    RowBox[{"f", "**", "\[Omega]"}], "]"}], TraditionalForm]]],
 " is the exterior derivative on the space of forms (with trivial (scalar) \
coefficients as well as   with coefficients in a module). The argument ",
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]]],
 " may be an odd left form on an algebra (i.e., an element of ",
 StyleBox["DLeft", "Program"],
 " space-relative of the algebra) or an exterior product of such forms; ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 "  must be an element of a module over the same algebra. The derivative of \
0-forms is written as  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Der", "Program"], "[", 
    RowBox[{"f", "**", 
     RowBox[{
      StyleBox["Wedge", "Program"], "[", "]"}]}], "]"}], TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Der0", "Program"], "[", "f", "]"}], TraditionalForm]]],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Der0", "Program"], "[", "f", "]"}], TraditionalForm]]],
 " is the exterior derivative of the 0-form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "**", 
    RowBox[{
     StyleBox["Wedge", "Program"], "[", "]"}]}], TraditionalForm]]],
 ". It is introduced in order to distinguish between ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Der", "Program"], "[", 
    StyleBox["dx",
     FontSlant->"Italic"], "]"}], TraditionalForm]]],
 " considered as the derivative of a 1-form with trivial coefficients and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Der", "Program"], "[", 
    StyleBox["dx",
     FontSlant->"Italic"], "]"}], TraditionalForm]]],
 " considered as the derivative of a 0-form with coefficient ",
 Cell[BoxData[
  FormBox[
   StyleBox["dx",
    FontSlant->"Italic"], TraditionalForm]]],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Der0", "Program"], "[", 
    RowBox[{"f", ",", "g"}], "]"}], TraditionalForm]]],
 " is the exterior derivative of the 0-form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", ","}], TraditionalForm]]],
 " where ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " is regarded as an element of a ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 "-module. This form of ",
 StyleBox["Der0", "Program"],
 " should be used when the algebra cannot be determined from ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 ".\nThe properties of ",
 StyleBox["Der", "Program"],
 " and ",
 StyleBox["Der0", "Program"],
 " are ",
 StyleBox["Vector", "Program"],
 ", ",
 StyleBox["Vector->First", "Program"],
 ", ",
 StyleBox["Linear->First", "Program"],
 "."
}], "Text",
 CellChangeTimes->{{3.4213282893362384`*^9, 3.4213283483911552`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_func", "b:1.2.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["der", "Subsubsection",
 CellTags->{"sli_func", "c:99", "b:1.2.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["der", "Program"], "[", "\[Omega]", "]"}], TraditionalForm]]],
 " represents the unevaluated exterior derivative ",
 StyleBox["Der", "Program"],
 "."
}], "Text",
 CellTags->{"sli_func", "b:1.2.4"}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tools", "Section",
 CellTags->"c:100"],

Cell[CellGroupData[{

Cell["Manipulation with vector expressions", "Subsection",
 CellTags->{"sli_eval", "c:101", "b:1.3.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VExpand", "Program"], "[", "e", "]"}], TraditionalForm]]],
 " expands all ",
 StyleBox["VTimes",
  FontFamily->"Courier"],
 " and ",
 StyleBox["SVTimes",
  FontFamily->"Courier"],
 " products in expression ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]]],
 "."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellChangeTimes->{{3.421328365545822*^9, 3.421328366166715*^9}},
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_eval", "b:1.3.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VCollect", "Program"], "[", "e", "]"}], TraditionalForm]]],
 " collects together the terms with the same elements of the basis, e.g., ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["VCollect",
      FontFamily->"Courier New"], "[", 
     RowBox[{
      RowBox[{"a", 
       SubscriptBox["v", "1"]}], "-", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["v", "1"], "-", 
         SubscriptBox["v", "2"]}], ")"}]}]}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "-", "2"}], ")"}], 
      SubscriptBox["v", "1"]}], "+", 
     RowBox[{"2", 
      SubscriptBox["v", "2"]}]}]}], TraditionalForm]]],
 "."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_eval", "b:1.3.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VNormal", "Program"], "[", "e", "]"}], TraditionalForm]]],
 " returns the normal form of the vector expression ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]]],
 ". The normal form of a vector is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], 
      SubscriptBox["g", "1"]}], "+", 
     RowBox[{
      SubscriptBox["c", "2"], 
      SubscriptBox["g", "2"]}], "+"}], "..."}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["g", "1"], ",", 
    SubscriptBox["g", "2"], ",", "..."}], TraditionalForm]]],
 " are distinct elements of the basis and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", "1"], ",", 
    SubscriptBox["c", "2"], ",", "..."}], TraditionalForm]]],
 " are scalar coefficients reduced or simplified to ensure that two equal \
scalars are always reduced to the identical form. This evaluation of scalars \
is processed by the user-defined function ",
 StyleBox["$SNormal", "Program"],
 ". The default setting of ",
 StyleBox["$SNormal", "Program"],
 " is ",
 StyleBox["Expand", "Program"],
 ", but in some cases it must be redefined to ensure that equal expressions \
will always give the same normal form. For example, if the coefficients are \
rational functions you must set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["$SNormal", "Program"], "=", 
    StyleBox["Cancel", "Program"]}], TraditionalForm]]],
 ". By default, the function ",
 StyleBox["VNormal", "Program"],
 " does not sort the factors of the vector multiplication ",
 StyleBox["VTimes", "Program"],
 ". "
}], "Text",
 CellChangeTimes->{{3.4213284105605507`*^9, 3.4213284161886435`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_eval", "b:1.3.0"}],

Cell[TextData[{
 "The following three functions (",
 Cell[BoxData[
  FormBox[
   StyleBox["SymmetricNormal", "Program"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"EnvNormal", ",", " ", "dNormal"}], "Program"], TraditionalForm]]],
 ") reduce to differentl normal forms.\nThe function ",
 StyleBox["VNormal", "Program"],
 " is used by some constructors. It is possible to redefine the function ",
 StyleBox["VNormal", "Program"],
 " (for example, set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VNormal", "Program"], "=", 
    StyleBox["SymmetricNormal", "Program"]}], TraditionalForm]]],
 ") in order to ensure the correct normal form of vector expressions."
}], "Text",
 CellChangeTimes->{{3.4232292652676926`*^9, 3.423229277685549*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_eval", "b:1.3.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["SymmetricNormal", "Program"], "[", "e", "]"}], 
   TraditionalForm]]],
 " returns the normal form of the vector expression with the factors of the \
vector multiplication ",
 StyleBox["VTimes", "Program"],
 " sorted, under the assumption that ",
 StyleBox["VTimes", "Program"],
 " is (super)symmetric."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_eval", "b:1.3.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["EnvNormal", "Program"], "[", "e", "]"}], TraditionalForm]]],
 " returns the normal form of the vector expression with the factors of the \
vector multiplication ",
 StyleBox["VTimes", "Program"],
 " sorted, under the assumption that ",
 StyleBox["VTimes", "Program"],
 " is the multiplication in the en",
 "velopin",
 "g algebra."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_eval", "b:1.3.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["dNormal", "Program"], "[", "e", "]"}], TraditionalForm]]],
 " returns the normal form of the vector expression with the factors of the \
vector multiplication ",
 StyleBox["VTimes", "Program"],
 " sorted, under the assumption that ",
 StyleBox["VTimes", "Program"],
 " is the multiplication in the algebra of differential operators."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_eval", "b:1.3.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["LeibnizExpand", "Program"], "[", 
    RowBox[{
     RowBox[{"d", "[", 
      RowBox[{
       RowBox[{
        StyleBox["parms",
         FontSlant->"Italic"], "..."}], ",", 
       RowBox[{"f", "[", 
        StyleBox["arg",
         FontSlant->"Italic"], "]"}]}], "]"}], ",", "p"}], "]"}], 
   TraditionalForm]]],
 " expands ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "[", 
    RowBox[{"f", "[", 
     StyleBox["arg",
      FontSlant->"Italic"], "]"}], "]"}], TraditionalForm]]],
 " as a derivation of parity ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 "  (in the case where ",
 Cell[BoxData[
  FormBox[
   StyleBox["parms",
    FontSlant->"Italic"], TraditionalForm]]],
 " is a vector and ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 " is its parity, this is the expansion as the bracket in a Lie \
superalgebra). This function realizes the Leibniz and Jacobi rules."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_eval", "b:1.3.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VBasis", "Program"], "[", "e", "]"}], TraditionalForm]]],
 " returns the list of the basis vectors encountered in the expression ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]]],
 "."
}], "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VSort", "Program"], "[", "e", "]"}], TraditionalForm]]],
 "  sorts the terms of the vector sum ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]]],
 " in a canonical order of the vector components (without expanding it). \
Observe that, unlike this sorting, the usual ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Sort", "Program"], "[", "e", "]"}], TraditionalForm]]],
 " orders with respect to scalar coefficients, since they come first from the \
left."
}], "Text",
 CellChangeTimes->{3.4213284524207425`*^9},
 CellTags->{"sli_eval", "b:1.3.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VOrder", "Program"], "[", 
    RowBox[{"u", ",", "v"}], "]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VSameQ", "Program"], "[", 
    RowBox[{"u", ",", " ", "v"}], "]"}], TraditionalForm]]],
 " compares the vector components of the monomials ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 ". The results are 0, \[PlusMinus]1 for ",
 StyleBox["VOrder", "Program"],
 " and ",
 StyleBox["True", "Program"],
 " or ",
 StyleBox["False", "Program"],
 " for ",
 StyleBox["VSameQ", "Program"],
 " (cf. functions ",
 ButtonBox["Order",
  BaseStyle->"Link",
  ButtonData:>"paclet:ref/Order"],
 " and ",
 ButtonBox["SameQ",
  BaseStyle->"Link",
  ButtonData:>"paclet:ref/SameQ"],
 ")."
}], "Text",
 CellChangeTimes->{{3.623313886094401*^9, 3.623313913317449*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_eval", "b:1.3.0"}],

Cell[CellGroupData[{

Cell["Replacement rules", "Subsubsection",
 CellTags->{"sli_eval", "c:102", "b:1.3.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"e", "/.", 
    StyleBox["VExpandRule", "Program"]}], TraditionalForm]]],
 " expands all ",
 StyleBox["VTimes", "Program"],
 " and ",
 StyleBox["SVTimes", "Program"],
 " products in expression ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.4213284649387426`*^9, 3.4213284651190014`*^9}},
 CellTags->{"sli_eval", "b:1.3.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"e", "/.", 
    StyleBox["SVExpandRule", "Program"]}], TraditionalForm]]],
 " expands all scalar coefficients in ",
 StyleBox["SVTimes", "Program"],
 "."
}], "Text",
 CellChangeTimes->{{3.42132846757253*^9, 3.4213284677527885`*^9}},
 CellTags->{"sli_eval", "b:1.3.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"e", "/.", 
    StyleBox["SVFactorRule", "Program"]}], TraditionalForm]]],
 " factorizes all scalar coefficients in ",
 StyleBox["SVTimes", "Program"],
 "."
}], "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"e", "/.", 
    StyleBox["SVSymplifyRule", "Program"]}], TraditionalForm]]],
 " simplifies all scalar coefficients in ",
 StyleBox["SVTimes", "Program"],
 "."
}], "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"e", "/.", 
    StyleBox["SVNormalRule", "Program"]}], TraditionalForm]]],
 " converts all scalar coefficients in ",
 StyleBox["SVTimes", "Program"],
 " to the normal form using the function ",
 StyleBox["$SNormal", "Program"],
 "."
}], "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"e", "//.", 
    RowBox[{
     StyleBox["LinearCollectRule", "Program"], "[", 
     StyleBox["op",
      FontSlant->"Italic"], "]"}]}], TraditionalForm]]],
 " tries to break out the factors in the sum ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["op",
      FontSlant->"Italic"], "[", "...", "]"}], " ", "+", "..."}], 
   TraditionalForm]]]
}], "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],

Cell[TextData[{
 StyleBox["SimplifySignRule ",
  FontFamily->"Courier"],
 "is the rule for simplifying the expressions ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    StyleBox["polynomial",
     FontSlant->"Italic"]], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.4213284814424734`*^9, 3.4213284819632225`*^9}},
 CellTags->{"sli_eval", "b:1.3.0"}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving vector equations", "Subsection",
 CellTags->{"sli_equ", "c:103", "b:1.3.1"}],

Cell[TextData[{
 StyleBox["VSolve", "Name"],
 "[",
 StyleBox["eqns", "Var"],
 ", ",
 StyleBox["vars", "Var"],
 "] attempts to solve a linear equation or a set of linear equations for the \
vector variables ",
 StyleBox["vars", "Var"],
 ". ",
 StyleBox["VSolve", "Name"],
 "[",
 StyleBox["eqns", "Var"],
 "] treats all vector variables encountered as ",
 StyleBox["vars", "Var"],
 " above. For other parameters and options, see ",
 ButtonBox["Solve",
  BaseStyle->"Link",
  ButtonData:>"paclet:ref/Solve"],
 ". In the simplest case of equation with one variable, the function ",
 StyleBox["Solve", "Name"],
 " can also be used (with ",
 StyleBox["InverseFunctions\[Rule]True", "Name"],
 " option to avoid the warning message)."
}], "Text",
 CellChangeTimes->{{3.4213285142196045`*^9, 3.4213285264271584`*^9}, {
  3.623313921742464*^9, 3.623313933476489*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_equ", "b:1.3.1"}],

Cell[TextData[{
 StyleBox["SVSolve", "Name"],
 "[",
 StyleBox["eqns", "Var"],
 ", ",
 StyleBox["vars", "Var"],
 "] attempts to solve a vector equation or a set of equations for the scalar \
variables ",
 StyleBox["vars", "Var"],
 ". ",
 StyleBox["SVSolve", "Name"],
 "[",
 StyleBox["eqns", "Var"],
 "] treats all variables encountered in the scalar coefficients of SVTimes as \
",
 StyleBox["vars",
  FontSlant->"Italic"],
 " above. For other parameters and options, see ",
 ButtonBox["Solve",
  BaseStyle->"Link",
  ButtonData:>"paclet:ref/Solve"],
 "."
}], "Text",
 CellChangeTimes->{3.4213285359208097`*^9, 3.6233139418185077`*^9},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_equ", "b:1.3.1"}],

Cell[TextData[{
 StyleBox["ScalarEquation", "Name"],
 "[",
 StyleBox["eqns", "Var"],
 "] converts the vector equation or the system (list) of equations with \
scalar unknowns to the system of scalar equations."
}], "Text",
 CellTags->{"sli_equ", "b:1.3.1"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lists of vectors", "Subsection",
 CellTags->{"sli_list", "c:104", "b:1.3.2"}],

Cell[TextData[{
 StyleBox["MatchList", "Name"],
 "[",
 StyleBox["expr", "Var"],
 ", ",
 StyleBox["pattern", "Var"],
 "] returns the sorted list of maximal subexpressions of ",
 StyleBox["expr", "Var"],
 ", matching the ",
 StyleBox["pattern", "Var"],
 " (that is, subexpressions which are not parts of larger subexpressions of \
expr matching the same pattern).\n",
 StyleBox["MatchList", "Name"],
 "[",
 StyleBox["expr", "Var"],
 ", ",
 StyleBox["pattern", "Var"],
 ", ",
 StyleBox["func", "Var"],
 "] returns the list of values of ",
 StyleBox["func", "Var"],
 "[",
 StyleBox["term", "Var"],
 "] rather then the list of terms."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_list", "b:1.3.2"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Splitted expressions", "Subsection",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_split", "c:105", "b:1.3.3"}],

Cell[TextData[{
 "A splitted sum is the list ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["key", "1"], "\[Rule]", 
      SubscriptBox[
       StyleBox["expr",
        FontSlant->"Italic"], "1"]}], ",", 
     RowBox[{
      SubscriptBox["key", "2"], "\[Rule]", 
      SubscriptBox[
       StyleBox["expr",
        FontSlant->"Italic"], "2"]}], ",", "..."}], "}"}], TraditionalForm]]],
 ", where the keys are sorted and ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["expr",
    FontSlant->"Italic"], "i"]]],
 StyleBox[" ",
  FontSize->6],
 "are vector sums. Splitted list is the expression of the same form, where ",
 StyleBox["expr",
  FontFamily->"Geneva",
  FontSize->10,
  FontSlant->"Italic"],
 StyleBox["i",
  FontFamily->"Geneva",
  FontSize->6,
  FontSlant->"Italic",
  FontVariations->{"CompatibilityType"->"Subscript"}],
 StyleBox[" ",
  FontSize->6],
 " are lists of vectors. Keys can be any expressions.\nA splitted sums and \
lists are used to divide large vector expressions into homogeneous parts \
(e.g., of the same weight or degree)."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_split", "b:1.3.3"}],

Cell[CellGroupData[{

Cell["SplitSum, SplitList", "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_split", "c:106", "b:1.3.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["SplitSum",
     FontFamily->"Courier New"], "[", 
    RowBox[{
     StyleBox["expr",
      FontSlant->"Italic"], ",", " ", 
     StyleBox["pattern",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "transforms the vector sum ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["expr",
     FontSlant->"Italic"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["c", "1"], "*", 
       SubscriptBox["v", "1"]}], "+", 
      RowBox[{
       SubscriptBox["c", "2"], "*", 
       SubscriptBox["v", "2"]}], "+"}], "..."}]}], TraditionalForm]]],
 " with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "i"], TraditionalForm]]],
 " matching the pattern gathering terms with equal ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 ". The result is the splitted sum ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["v", 
       SubscriptBox["i", "1"]], "\[Rule]", 
      SubscriptBox[
       StyleBox["sc",
        FontSlant->"Italic"], "1"]}], ",", 
     RowBox[{
      SubscriptBox["v", 
       SubscriptBox["i", "2"]], "\[Rule]", 
      SubscriptBox[
       StyleBox["sc",
        FontSlant->"Italic"], "2"]}], ",", "..."}], "}"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["v", 
      SubscriptBox["i", "1"]], ",", 
     SubscriptBox["v", 
      SubscriptBox["i", "2"]], ",", "..."}], "}"}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "is the sorted list of subexpressions  of ",
 Cell[BoxData[
  FormBox[
   StyleBox["expr",
    FontSlant->"Italic"], TraditionalForm]]],
 "  matching the pattern (see function ",
 StyleBox["MatchList",
  FontFamily->"Courier"],
 ")  and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["sc",
      FontSlant->"Italic"], "1"], ",", 
    SubscriptBox[
     StyleBox["sc",
      FontSlant->"Italic"], "2"], ",", "..."}], TraditionalForm]]],
 " are the sums of coefficients of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", 
     SubscriptBox["i", "1"]], ",", 
    SubscriptBox["v", 
     SubscriptBox["i", "2"]], ",", "..."}], TraditionalForm]]],
 " . The argument ",
 Cell[BoxData[
  FormBox[
   StyleBox["expr",
    FontSlant->"Italic"], TraditionalForm]]],
 " can be not only sum but also a list or a single term matching the ",
 StyleBox["pattern",
  FontFamily->"Geneva",
  FontSize->10,
  FontSlant->"Italic"],
 "  (or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "*", 
    StyleBox["pattern",
     FontSlant->"Italic"]}], TraditionalForm]]],
 "). \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["SplitSum",
     FontFamily->"Courier New"], "[", 
    RowBox[{
     StyleBox["expr",
      FontSlant->"Italic"], ",", " ", 
     StyleBox["pattern",
      FontSlant->"Italic"], ",", " ", 
     StyleBox["func",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "transforms the same expression into a splitted list ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", "1"], "\[Rule]", 
      SubscriptBox[
       StyleBox["se",
        FontSlant->"Italic"], "1"]}], ",", 
     RowBox[{
      SubscriptBox["f", "2"], "\[Rule]", 
      SubscriptBox[
       StyleBox["se",
        FontSlant->"Italic"], "2"]}], ",", "..."}], "}"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["f", "1"], ",", 
     SubscriptBox["f", "2"], ",", "..."}], "}"}], TraditionalForm]]],
 " is a sorted list of different  values of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["func",
     FontSlant->"Italic"], "[", 
    SubscriptBox["v", "i"], "]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["se",
      FontSlant->"Italic"], "1"], ",", 
    SubscriptBox[
     StyleBox["se",
      FontSlant->"Italic"], "2"], ",", "..."}], TraditionalForm]]],
 " are the sums of the members of ",
 StyleBox["expr",
  FontSlant->"Italic"],
 " giving values ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "1"], ",", 
    SubscriptBox["f", "2"], ",", "..."}], TraditionalForm]]],
 " of the ",
 Cell[BoxData[
  FormBox[
   StyleBox["func",
    FontSlant->"Italic"], TraditionalForm]]],
 "  (excluding members with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["func",
      FontSlant->"Italic"], "[", 
     SubscriptBox["v", "i"], "]"}], "\[Equal]", 
    StyleBox["SkipVal",
     FontFamily->"Courier New"]}], TraditionalForm]]],
 ")."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_split", "b:1.3.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["SplitList",
     FontFamily->"Courier New"], "[", 
    RowBox[{
     StyleBox["expr",
      FontSlant->"Italic"], ",", " ", 
     StyleBox["pattern",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "and",
 StyleBox[" ",
  FontFamily->"Courier"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["SplitList",
     FontFamily->"Courier New"], "[", 
    RowBox[{
     StyleBox["expr",
      FontSlant->"Italic"], ",", " ", 
     StyleBox["pattern",
      FontSlant->"Italic"], ",", " ", 
     StyleBox["func",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "work in  the same way as ",
 StyleBox["SplitSum",
  FontFamily->"Courier"],
 ", only the result is the splitted list",
 StyleBox[" ",
  FontFamily->"Courier"],
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["v", 
       SubscriptBox["i", "1"]], "\[Rule]", 
      SubscriptBox[
       StyleBox["lc",
        FontSlant->"Italic"], "1"]}], ",", 
     RowBox[{
      SubscriptBox["v", 
       SubscriptBox["i", "2"]], "\[Rule]", 
      SubscriptBox[
       StyleBox["lc",
        FontSlant->"Italic"], "2"]}], ",", "..."}], "}"}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "or, respectively, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", "1"], "\[Rule]", 
      SubscriptBox[
       StyleBox["le",
        FontSlant->"Italic"], "1"]}], ",", 
     RowBox[{
      SubscriptBox["f", "2"], "\[Rule]", 
      SubscriptBox[
       StyleBox["le",
        FontSlant->"Italic"], "2"]}], ",", "..."}], "}"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["lc",
      FontSlant->"Italic"], "1"], ",", 
    SubscriptBox[
     StyleBox["lc",
      FontSlant->"Italic"], "2"], ",", "..."}], TraditionalForm]]],
 " are the lists of coefficients and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["le",
      FontSlant->"Italic"], "1"], ",", 
    SubscriptBox[
     StyleBox["le",
      FontSlant->"Italic"], "2"], ",", "..."}], TraditionalForm]]],
 " are the lists of members of ",
 Cell[BoxData[
  FormBox[
   StyleBox["expr",
    FontSlant->"Italic"], TraditionalForm]]],
 "."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_split", "b:1.3.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ForSplit", "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_split", "c:107", "b:1.3.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["ForSplit",
     FontFamily->"Courier New"], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       StyleBox["expr",
        FontSlant->"Italic"], ",", " ", 
       RowBox[{
        StyleBox["sel",
         FontSlant->"Italic"], "\[Rule]", 
        StyleBox["memb",
         FontSlant->"Italic"]}], ",", " ", 
       StyleBox["cnt",
        FontSlant->"Italic"]}], "}"}], ",", " ", 
     StyleBox["body",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "and",
 StyleBox[" ",
  FontFamily->"Courier"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["ForSplit",
     FontFamily->"Courier New"], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       StyleBox["expr",
        FontSlant->"Italic"], ",", " ", 
       StyleBox["memb",
        FontSlant->"Italic"], ",", " ", 
       StyleBox["cnt",
        FontSlant->"Italic"]}], "}"}], ",", " ", 
     StyleBox["body",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "evaluates the ",
 Cell[BoxData[
  FormBox[
   StyleBox["body",
    FontSlant->"Italic"], TraditionalForm]]],
 " in the loop for each member of the splitted sum or list ",
 Cell[BoxData[
  FormBox[
   StyleBox["expr",
    FontSlant->"Italic"], TraditionalForm]]],
 ". The symbols ",
 Cell[BoxData[
  FormBox[
   StyleBox["sel",
    FontSlant->"Italic"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox["memb",
    FontSlant->"Italic"], TraditionalForm]]],
 " are assigned to the current values of the selector and member of the \
splitted expression. The optional ",
 Cell[BoxData[
  FormBox[
   StyleBox["cnt",
    FontSlant->"Italic"], TraditionalForm]]],
 " is the loop counter. The functions ",
 StyleBox["Continue[]",
  FontFamily->"Courier"],
 ", ",
 StyleBox["Break[]",
  FontFamily->"Courier"],
 " and ",
 StyleBox["Return[",
  FontFamily->"Courier"],
 Cell[BoxData[
  FormBox[
   StyleBox["value",
    FontSlant->"Italic"], TraditionalForm]]],
 StyleBox["]",
  FontFamily->"Courier"],
 " can be used in the ",
 Cell[BoxData[
  FormBox[
   StyleBox["body",
    FontSlant->"Italic"], TraditionalForm]]],
 ". "
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_split", "b:1.3.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["AddSplit", "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_split", "c:108", "b:1.3.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["AddSplit",
     FontFamily->"Courier New"], "[", 
    RowBox[{
     SubscriptBox[
      StyleBox["expr",
       FontSlant->"Italic"], "1"], ",", 
     SubscriptBox[
      StyleBox["expr",
       FontSlant->"Italic"], "2"], ",", "..."}], "]"}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "adds terms with the same keys of splitted sums ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["expr", "Var"], "1"], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["expr", "Var"], "2"], TraditionalForm]]],
 ", ... . Example: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["AddSplit",
      FontFamily->"Courier New"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "x"}], ",", " ", 
        RowBox[{"b", "\[Rule]", "y"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "u"}], ",", " ", 
        RowBox[{"c", "\[Rule]", "v"}]}], "}"}]}], "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", 
       RowBox[{"x", "+", "u"}]}], ",", " ", 
      RowBox[{"b", "\[Rule]", "y"}], ",", " ", 
      RowBox[{"c", "\[Rule]", "v"}]}], "}"}]}], TraditionalForm]]],
 "."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_split", "b:1.3.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["JoinSplit", "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_split", "c:109", "b:1.3.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["JoinSplit",
     FontFamily->"Courier New"], "[", 
    RowBox[{
     SubscriptBox[
      StyleBox["expr",
       FontSlant->"Italic"], "1"], ",", 
     SubscriptBox[
      StyleBox["expr",
       FontSlant->"Italic"], "2"], ",", "..."}], "]"}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "joins terms with the same keys of splitted lists ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["expr",
      FontSlant->"Italic"], "1"], ",", 
    SubscriptBox[
     StyleBox["expr",
      FontSlant->"Italic"], "2"], ",", "..."}], TraditionalForm]]],
 ". Example: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["JoinSplit",
      FontFamily->"Courier New"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", 
         RowBox[{"{", "x", "}"}]}], ",", " ", 
        RowBox[{"b", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"y", ",", "z"}], "}"}]}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", 
         RowBox[{"{", "u", "}"}]}], ",", " ", 
        RowBox[{"c", "\[Rule]", 
         RowBox[{"{", "v", "}"}]}]}], "}"}]}], "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"x", ",", "u"}], "}"}]}], ",", " ", 
      RowBox[{"b", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"y", ",", "z"}], "}"}]}], ",", " ", 
      RowBox[{"c", "\[Rule]", 
       RowBox[{"{", "v", "}"}]}]}], "}"}]}], TraditionalForm]]],
 "."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_split", "b:1.3.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ApplySplit", "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_split", "c:110", "b:1.3.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["ApplySplit",
     FontFamily->"Courier New"], "[", 
    RowBox[{
     StyleBox["func",
      FontSlant->"Italic"], ",", " ", 
     StyleBox["expr",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "applies the function ",
 Cell[BoxData[
  FormBox[
   StyleBox["func",
    FontSlant->"Italic"], TraditionalForm]]],
 " to terms of the splitted sum or list ",
 Cell[BoxData[
  FormBox[
   StyleBox["expr",
    FontSlant->"Italic"], TraditionalForm]]],
 ". Example: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["ApplySplit",
      FontFamily->"Courier New"], "[", 
     RowBox[{"f", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "x"}], ",", " ", 
        RowBox[{"b", "\[Rule]", "y"}]}], "}"}]}], "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", 
       RowBox[{"f", "[", "x", "]"}]}], ",", " ", 
      RowBox[{"b", "\[Rule]", 
       RowBox[{"f", "[", "y", "]"}]}]}], "}"}]}], TraditionalForm]]],
 "."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_split", "b:1.3.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["MapSplit", "Subsubsection",
 CellTags->{"sli_split", "c:111", "b:1.3.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["MapSplit",
     FontFamily->"Courier New"], "[", 
    RowBox[{
     StyleBox["func",
      FontSlant->"Italic"], ",", " ", 
     StyleBox["expr",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "applies the function ",
 Cell[BoxData[
  FormBox[
   StyleBox["func",
    FontSlant->"Italic"], TraditionalForm]]],
 " to the members of the lists, terms of the splitted list ",
 Cell[BoxData[
  FormBox[
   StyleBox["expr",
    FontSlant->"Italic"], TraditionalForm]]],
 ". Example: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["MapSplit",
      FontFamily->"Courier New"], "[", 
     RowBox[{"f", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", 
         RowBox[{"{", "x", "}"}]}], ",", " ", 
        RowBox[{"b", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"y", ",", "z"}], "}"}]}]}], "}"}]}], "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"f", "[", "x", "]"}], "}"}]}], ",", " ", 
      RowBox[{"b", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", "y", "]"}], ",", " ", 
         RowBox[{"f", "[", "z", "]"}]}], "}"}]}]}], "}"}]}], 
   TraditionalForm]]],
 "."
}], "Text",
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_split", "b:1.3.3"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["PartSplit", "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_split", "c:112", "b:1.3.3"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PartSplit",
     FontFamily->"Courier New"], "[", 
    RowBox[{
     StyleBox["expr",
      FontSlant->"Italic"], ",", " ", 
     StyleBox["key",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "returns the part of the splitted expression  ",
 Cell[BoxData[
  FormBox[
   StyleBox["expr",
    FontSlant->"Italic"], TraditionalForm]]],
 " with the given key or zero if ",
 Cell[BoxData[
  FormBox[
   StyleBox["expr",
    FontSlant->"Italic"], TraditionalForm]]],
 " has no part with the given ",
 Cell[BoxData[
  FormBox[
   StyleBox["key",
    FontSlant->"Italic"], TraditionalForm]]],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["PartSplit",
     FontFamily->"Courier New"], "[", 
    RowBox[{
     StyleBox["expr",
      FontSlant->"Italic"], ",", " ", 
     StyleBox["key",
      FontSlant->"Italic"], ",", " ", 
     StyleBox["val",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "returns ",
 Cell[BoxData[
  FormBox[
   StyleBox["val",
    FontSlant->"Italic"], TraditionalForm]]],
 "  if ",
 Cell[BoxData[
  FormBox[
   StyleBox["expr",
    FontSlant->"Italic"], TraditionalForm]]],
 " has no part with the given ",
 Cell[BoxData[
  FormBox[
   StyleBox["key",
    FontSlant->"Italic"], TraditionalForm]]],
 ".\nExamples: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["PartSplit",
      FontFamily->"Courier New"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "x"}], ",", " ", 
        RowBox[{"b", "\[Rule]", "y"}]}], "}"}], ",", " ", "b"}], "]"}], " ", 
    "=", " ", "y"}], TraditionalForm]]],
 "; ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["PartSplit",
      FontFamily->"Courier New"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", 
         RowBox[{"{", "x", "}"}]}], ",", " ", 
        RowBox[{"b", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"y", ",", "z"}], "}"}]}]}], "}"}], ",", " ", "c", ",", " ", 
      RowBox[{"{", "}"}]}], "]"}], " ", "=", " ", 
    RowBox[{"{", "}"}]}], TraditionalForm]]],
 "."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_split", "b:1.3.3"}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vector Sum", "Subsection",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_vsum", "c:113", "b:1.3.4"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["VSum",
     FontFamily->"Courier New"], "[", 
    RowBox[{
     StyleBox["elt",
      FontSlant->"Italic"], ",", " ", 
     RowBox[{
      RowBox[{"{", 
       StyleBox["iter",
        FontSlant->"Italic"], "}"}], "..."}]}], "]"}], TraditionalForm]]],
 " evaluates the sum of vectors. The arguments are the same as in ",
 StyleBox["Sum",
  FontFamily->"Courier"],
 " function."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellChangeTimes->{{3.421328580795336*^9, 3.421328585001384*^9}},
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_vsum", "b:1.3.4"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Expressions with Indefinite Coefficients", "Subsection",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_span", "c:114", "b:1.3.5"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox["GeneralSum",
    FontFamily->"Courier New"], TraditionalForm]]],
 " is a vector sum ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], "*", 
      SubscriptBox["v", "1"]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["c", "2"], "*", 
      SubscriptBox["v", "2"]}], " ", "+"}], " ", "..."}], TraditionalForm]]],
 " with undetermined scalar coefficients ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", "1"], ",", " ", 
    SubscriptBox["c", "2"], ",", " ", "...", " "}], TraditionalForm]]],
 ". It is a general form of a given vector in the space with basis ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", "1"], ",", " ", 
    SubscriptBox["v", "2"], ",", " ", "..."}], TraditionalForm]]],
 " . "
}], "Text",
 Evaluatable->False,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_span", "b:1.3.5"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["GeneralSum",
     FontFamily->"Courier New"], "[", 
    RowBox[{"c", ",", " ", 
     StyleBox["list",
      FontSlant->"Italic"]}], "]"}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "declares ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]]],
 " as scalars and returns the vector sum ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"c", "[", "1", "]"}], "*", 
      RowBox[{
       StyleBox["list",
        FontSlant->"Italic"], "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}]}], "+", 
     RowBox[{
      RowBox[{"c", "[", "2", "]"}], "*", 
      RowBox[{
       StyleBox["list",
        FontSlant->"Italic"], "\[LeftDoubleBracket]", "2", 
       "\[RightDoubleBracket]"}]}], "+"}], "..."}], TraditionalForm]]],
 " ."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_span", "b:1.3.5"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["GeneralSolve",
     FontFamily->"Courier New"], "[", 
    RowBox[{
     StyleBox["equ",
      FontSlant->"Italic"], ",", " ", "v", ",", " ", "c"}], "]"}], 
   TraditionalForm]]],
 " solves the vector equation ",
 Cell[BoxData[
  FormBox[
   StyleBox["equ",
    FontSlant->"Italic"], TraditionalForm]]],
 " for the scalar unknowns ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"c", "[", "1", "]"}], ",", " ", "..."}], TraditionalForm]]],
 " , substitutes the coefficients found in the vector ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 " (it is a general sum with coefficients ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"c", "[", "1", "]"}], ",", " ", "..."}], TraditionalForm]]],
 "), renumbers the remaining coefficients and returns the resulting vector."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_span", "b:1.3.5"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["GeneralZero",
     FontFamily->"Courier New"], "[", 
    RowBox[{"g", ",", " ", "v", ",", " ", "c"}], "]"}], TraditionalForm]]],
 " solves the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["Act",
      FontFamily->"Courier New"], "[", 
     RowBox[{"g", ",", "v"}], "]"}], "\[Equal]", "0"}], TraditionalForm]]],
 " or the system of equations ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      StyleBox["Act",
       FontFamily->"Courier New"], "[", 
      RowBox[{
       RowBox[{"g", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
       ",", "v"}], "]"}], "\[Equal]", "0"}], "}"}], TraditionalForm]]],
 " when ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " is a list. The result is the same as for ",
 StyleBox["GeneralSolve",
  FontFamily->"Courier"],
 ". The parameter ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 " can be also list of vectors (basis); in this case, the general sum with \
coefficients ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"c", "[", "1", "]"}], ",", " ", "..."}], TraditionalForm]]],
 " is used."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellChangeTimes->{{3.4213286187499123`*^9, 3.4213286342421885`*^9}, 
   3.4232301038334913`*^9},
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_span", "b:1.3.5"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["GeneralReduce",
     FontFamily->"Courier New"], "[", 
    RowBox[{"v", ",", " ", "c"}], "]"}], TraditionalForm]]],
 " returns a general sum representing the same vector space as the general \
sum ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 ", but using the minimal number of coefficients. This function must be used \
if the dimension of the space of vectors of the form ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]]],
 " is less than the number of coefficients ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]]],
 "."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellChangeTimes->{{3.4213286878793154`*^9, 3.421328688670453*^9}, {
  3.423229819704934*^9, 3.4232299185971346`*^9}, {3.4232299504629555`*^9, 
  3.4232299705518417`*^9}, {3.423230003739563*^9, 3.4232300673910894`*^9}, {
  3.4232372968765793`*^9, 3.4232372978479757`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 AspectRatioFixed->True,
 CellTags->{"sli_span", "b:1.3.5"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polynomials", "Subsection",
 CellTags->{"sli_sym", "c:115", "b:1.3.6"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Deg", "Name"], "[", 
    RowBox[{
     StyleBox["prod", "Var"], ",", " ", "x"}], "]"}], TraditionalForm]]],
 " returns the degree of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 "  in the symmetric product (or power)."
}], "Text",
 CellTags->{"sli_sym", "b:1.3.6"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["LDer", "Name"], "[", 
    RowBox[{
     StyleBox["expr", "Var"], ",", " ", "x"}], "]"}], TraditionalForm]]],
 " returns the left derivative of the expression from a supercommutative \
superalgebra."
}], "Text",
 CellTags->{"sli_sym", "b:1.3.6"}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["Delta", "Name"], "[", 
     RowBox[{"x", ",", "y"}], "]"}], "=", 
    RowBox[{"{", GridBox[{
       {"1", 
        RowBox[{"if", " ", 
         FormBox[
          RowBox[{"x", "=", "y"}],
          TraditionalForm], " "}]},
       {"0", 
        RowBox[{"if", 
         RowBox[{
          FormBox[
           RowBox[{"x", "\[NotEqual]", "y"}],
           TraditionalForm], "."}]}]}
      }]}]}], TraditionalForm]]],
 StyleBox[" ",
  FontFamily->"Courier"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["Delta", "Name"], "[", "x", "]"}], " ", "=", " ", 
    RowBox[{
     StyleBox["Delta", "Name"], "[", 
     RowBox[{"x", ",", "0"}], "]"}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.4213287118337603`*^9, 3.421328854308629*^9}},
 CellTags->{"sli_sym", "b:1.3.6"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notations", "Subsection",
 CellTags->{"sli_not", "c:116", "b:1.3.7"}],

Cell[TextData[{
 StyleBox["NewBracket", "Name"],
 "[",
 StyleBox["brk", "Var"],
 ", ",
 StyleBox["options", "Var"],
 "...] defines ",
 StyleBox["brk", "Var"],
 " as the symbol for the bracket in a Lie (super)algebra. This definition \
sets the properties ",
 StyleBox["Vector", "Name"],
 ", ",
 StyleBox["Linear", "Name"],
 ", ",
 StyleBox["Graded", "Name"],
 ". The options are:\n",
 StyleBox["Unevaluated\[Rule]", "Name"],
 StyleBox["name", "Var"],
 " tells the name of operation which represent the unevaluated bracket; the \
default value is ",
 StyleBox["Auto", "Name"],
 ", in this case the first letter of ",
 StyleBox["brk", "Var"],
 " is changed to the upper-case for the bracket operation and to the \
lower-case for the unevaluated form.\n",
 StyleBox["Output", "Name"],
 "\[Rule]",
 StyleBox["func", "Var"],
 " sets the format for the output of the expression ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["brk", "Var"], "[", 
    RowBox[{"g", ",", "h"}], "]"}], TraditionalForm]]],
 ". The default function is ",
 StyleBox["ArgForm[\"[`1`,`2`]\"]", "Name"],
 ";\n",
 StyleBox["TeX\[Rule]", "Name"],
 StyleBox["func", "Var"],
 " sets the format for TeX output of the expression ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["brk", "Var"], "[", 
    RowBox[{"g", ",", "h"}], "]"}], TraditionalForm]]],
 ". The default function is ",
 StyleBox["ArgForm[\"\\\\left[`1`\\\\,`2`\\\\right]\"]", "Name"],
 ";\n",
 StyleBox["Jacobi\[Rule]", "Name"],
 StyleBox["op", "Var"],
 " sets the operation or the list of operations to be expanded automatically \
in expressions ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["brk", "Var"], "[", 
    RowBox[{"g", ",", 
     RowBox[{
      StyleBox["op", "Var"], "[", 
      RowBox[{"u", ",", "v", ",", "..."}], "]"}]}], "]"}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.4232304566107597`*^9, 3.4232304798041105`*^9}},
 TextAlignment->Left,
 TextJustification->1,
 CellTags->{"sli_not", "b:1.3.7"}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowToolbars->{"RulerBar", "EditBar"},
WindowSize->{838, 668},
WindowMargins->{{273, Automatic}, {114, Automatic}},
PrintingCopies->1,
PrintingStartingPageNumber->8,
PrintingPageRange->{Automatic, Automatic},
PageHeaders->{{
   Cell[
    TextData[
     CounterBox["Page"]], "Header"], None, 
   Cell["Reference Manual ", "Header"]}, {
   Cell[
    TextData[
     CounterBox[
     "Section", 
      CounterFunction :> (
       Part[{"Introduction", "Vectors and scalars", 
         "Vector spaces, Algebras and Modules", "Tools"}, #]& )]], "Header"], 
   None, 
   Cell[
    TextData[
     CounterBox["Page"]], "Header"]}},
PageFooters->{{None, None, None}, {None, None, None}},
PageHeaderLines->{True, True},
PageFooterLines->{False, False},
PrintingOptions->{"CellBackgroundHalftoneAngle"->Automatic,
"CellBackgroundHalftoneDensity"->Automatic,
"FacingPages"->True,
"FirstPageFace"->Right,
"FirstPageFooter"->True,
"FirstPageHeader"->True,
"GraphicsPrintingFormat"->"Automatic",
"IncludePostScriptResourceDirectives"->True,
"IncludeSpecialFonts"->True,
"Magnification"->1,
"PageFooterMargins"->{Automatic, Automatic},
"PageHeaderMargins"->{Automatic, Automatic},
"PageSize"->{Automatic, Automatic},
"PaperOrientation"->"Portrait",
"PaperSize"->{597.563, 842.375},
"PostScriptOutputFile":>FrontEnd`FileName[{
  "home", "guests", "grozman", ".Mathematica", "Applications", "SuperLie", 
   "Documentation"}, "WholeManual.nb.ps", CharacterEncoding -> 
  "WindowsCyrillic"],
"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->False,
"PrintSelectionHighlighting"->False,
"PrintingMargins"->{{54, 54}, {72, 72}},
"RestPagesFooter"->True,
"RestPagesHeader"->True,
"UnixShellPrintingCommand"->Automatic,
"UsePostScriptOutputFile"->False,
"UseUnixShellPrintingCommand"->False},
TaggingRules->{
 "PaginationCache" -> {{2013, 7, 18, 21, 33, 59.453125`9.526749515358421}, {8,
     8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 
    10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 
    11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 
    13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 
    16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
    18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 
    20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 
    22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 
    23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 
    25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 
    26, 26, 26, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 
    28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 
    30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 
    31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 
    33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 34, 34, 34, 
    34}, Automatic}},
CellLabelAutoDelete->True,
Magnification->1.5,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "\nModify the definitions below to change the default appearance of all \
cells in \na given style.  Make modifications to any definition using \
commands in the \nFormat menu.\n", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], PageWidth -> WindowWidth, ScriptMinSize -> 
          9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, ScriptMinSize -> 
          7, FontSize -> 10, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "\nThe options defined for the style below will be used at the \
Notebook level.\n", "Text"], 
         Cell[
          StyleData["Notebook"], WindowToolbars -> {}, PageHeaders -> {{
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"], None, 
             Cell[
              TextData[{
                ValueBox[FileName], " \[Bullet]  ", 
                ValueBox[Date]}], "Header"]}, {
             Cell[
              TextData[{
                ValueBox[FileName], " \[Bullet]  ", 
                ValueBox[Date]}], "Header"], None, 
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"]}}, DefaultNewCellStyle -> 
          "Text", DefaultDuplicateCellStyle -> "Text", 
          DefaultInlineFormatType -> StandardForm, StyleMenuListing -> None]},
         Open]], 
      Cell[
       CellGroupData[{
         Cell["Favorite styles", "Section"], 
         Cell[
          StyleData["Name"], ConversionRules :> {"TeX" -> {"\\texttt{", "}"}},
           FontFamily -> "Courier New"], 
         Cell[
          StyleData["Var"], ConversionRules :> {"TeX" -> {"\\texttt{", "}"}}, 
          FontSlant -> "Italic"], 
         Cell[
          StyleData["Def"], FontWeight -> "Bold", FontSlant -> "Italic", 
          FontColor -> RGBColor[0.6, 0.2, 0]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Chapter"], CellDingbat -> "\[FilledSquare]", 
             CellMargins -> {{24, Inherited}, {8, 24}}, 
             CellGroupingRules -> {"SectionGrouping", 20}, PageBreakAbove -> 
             True, CellFrameLabelMargins -> 6, CounterIncrements -> "Chapter",
              FontFamily -> "Helvetica", FontSize -> 18, FontWeight -> 
             "Bold"], 
            Cell[
             StyleData["Chapter", "Printout"], 
             CellMargins -> {{15, 0}, {7, 22}}]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[FilledSquare]", 
             CellMargins -> {{24, Inherited}, {8, 24}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameLabelMargins -> 6, CounterIncrements -> 
             "Section", FontFamily -> "Helvetica", FontSize -> 14, FontWeight -> 
             "Bold"], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{15, 0}, {7, 22}}, FontSize -> 14]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "\[FilledSquare]", 
             CellMargins -> {{24, 4}, {2, 18}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CellFrameLabelMargins -> 6, CounterIncrements -> 
             "Subsection", CounterAssignments -> {{"Subsubsection", 0}}, 
             FontFamily -> "Helvetica", FontSize -> 12.5, FontWeight -> 
             "Bold"], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{2, 4}, {2, 18}}, FontSize -> 12.5]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[FilledSquare]", 
             CellMargins -> {{24, 4}, {2, 18}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, CellFrameLabelMargins -> 6, CounterIncrements -> 
             "Subsubsection", FontFamily -> "Helvetica", FontSize -> 12, 
             FontWeight -> "Bold"], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{2, 4}, {2, 18}}, FontSize -> 12]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsectionIcon"], ShowGroupOpener -> True, 
             CellMargins -> {{24, 4}, {0, 18}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 8}, 
             CellGroupingRules -> {"SectionGrouping", 50}, 
             ConversionRules :> {
              "HTML" -> {
                "<LI TYPE=\"SQUARE\"><FONT FACE=\"Helvetica, Arial\"><P><B>", 
                 "</B></P></FONT>\n"}}, 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, 
             CounterIncrements -> "Section", FontFamily -> "Helvetica", 
             FontSize -> 12.5, FontWeight -> "Bold"], 
            Cell[
             StyleData["SubsectionIcon", "Printout"], CellDingbat -> 
             "\[FilledSquare]", ShowGroupOpener -> False, 
             CellMargins -> {{16, 0}, {0, 18}}, PageBreakBelow -> False, 
             FontSize -> 12.5]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsubsectionIcon"], ShowGroupOpener -> True, 
             CellMargins -> {{24, 4}, {0, 8}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 4}, 
             CellGroupingRules -> {"SectionGrouping", 60}, 
             ConversionRules :> {
              "HTML" -> {
                "<LI TYPE=\"SQUARE\"><FONT FACE=\"Helvetica, Arial\"><P><B>", 
                 "</B></P></FONT>\n"}}, 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, 
             CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubection", 0}}, FontFamily -> 
             "Helvetica", FontSize -> 12, FontWeight -> "Bold"], 
            Cell[
             StyleData["SubsubsectionIcon", "Printout"], CellDingbat -> 
             "\[FilledSquare]", ShowGroupOpener -> False, 
             CellMargins -> {{2, 0}, {0, 18}}, PageBreakBelow -> False, 
             FontSize -> 12]}, Open]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], CellMargins -> {{12, 10}, {7, 7}}, 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, TextAlignment -> 
             Left, TextJustification -> 1, Hyphenation -> True, 
             LineSpacing -> {1, 2}, ParagraphIndent -> 24, FontSize -> 12], 
            Cell[
             StyleData["Text", "Printout"], CellMargins -> {{2, 2}, {6, 6}}]},
            Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MonoText"], CellMargins -> {{12, 10}, {7, 7}}, 
             Hyphenation -> True, LineSpacing -> {1, 2}, FontFamily -> 
             "Courier", FontSize -> 12], 
            Cell[
             StyleData["MonoText", "Printout"], 
             CellMargins -> {{2, 2}, {6, 6}}, FontSize -> 9]}, Closed]]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "\nThe cells in this section define styles used for input and output \
to the \nkernel.  Be careful when modifying, renaming, or removing these \
styles, \nbecause the front end associates special meanings with these style \
names.\n", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellMargins -> {{45, 10}, {5, 7}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, 
             CellLabelMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, LanguageCategory -> "Formula", FormatType -> 
             InputForm, ShowStringCharacters -> True, NumberMarks -> True, 
             LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, CounterIncrements -> 
             "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellMargins -> {{39, 0}, {4, 6}},
              LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 9]}, 
           Closed]], 
         Cell[
          StyleData["InlineInput"], Evaluatable -> True, CellGroupingRules -> 
          "InputGrouping", CellHorizontalScrolling -> True, PageBreakWithin -> 
          False, GroupPageBreakWithin -> False, DefaultFormatType -> 
          DefaultInputFormatType, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           AutoItalicWords -> {}, FormatType -> InputForm, 
          ShowStringCharacters -> True, NumberMarks -> True, 
          CounterIncrements -> "Input", FontWeight -> "Bold"], 
         Cell[
          StyleData["Output"], PageWidth -> PaperWidth, 
          CellMargins -> {{47, 10}, {7, 5}}, CellEditDuplicate -> True, 
          CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
          True, GeneratedCell -> True, CellAutoOverwrite -> True, 
          CellLabelMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultOutputFormatType, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           AutoItalicWords -> {}, LanguageCategory -> "Formula", FormatType -> 
          InputForm, CounterIncrements -> "Output", StyleMenuListing -> None, 
          FontSlant -> "Plain"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             CounterIncrements -> "Message", StyleMenuListing -> None, 
             FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{39, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 8, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{14, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             CounterIncrements -> "Print", StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{39, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 8]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{4, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, CounterIncrements -> "Graphics", 
             ImageMargins -> {{43, Inherited}, {Inherited, 0}}, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Graphics", "Printout"], ImageSize -> {250, 250}, 
             ImageMargins -> {{30, Inherited}, {Inherited, 0}}, FontSize -> 
             9]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Helvetica", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontFamily -> "Courier", 
             FontSize -> 8, FontSlant -> "Italic", FontColor -> 
             GrayLevel[0]]}, Closed]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Unique Styles", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Author"], ShowCellBracket -> False, 
             CellMargins -> {{10, 4}, {2, 10}}, FontSize -> 16, FontSlant -> 
             "Italic"], 
            Cell[
             StyleData["Author", "Presentation"], 
             CellMargins -> {{12, 10}, {2, 12}}, LineSpacing -> {1, 5}, 
             ParagraphSpacing -> {0, 12}, FontSize -> 20], 
            Cell[
             StyleData["Author", "Condensed"], 
             CellMargins -> {{8, 10}, {1, 4}}, LineSpacing -> {1, 1}, 
             ParagraphSpacing -> {0, 4}, FontSize -> 12], 
            Cell[
             StyleData["Author", "Printout"], 
             CellMargins -> {{9, 0}, {4, 12}}, ParagraphSpacing -> {0, 6}, 
             FontSize -> 14]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Copyright"], ShowCellBracket -> False, 
             CellMargins -> {{10, 10}, {40, 2}}, FontFamily -> "Helvetica", 
             FontSize -> 9], 
            Cell[
             StyleData["Copyright", "Presentation"], 
             CellMargins -> {{12, 10}, {50, 2}}, LineSpacing -> {1, 5}, 
             FontSize -> 12], 
            Cell[
             StyleData["Copyright", "Condensed"], 
             CellMargins -> {{8, 10}, {12, 1}}, LineSpacing -> {1, 2}, 
             FontSize -> 9], 
            Cell[
             StyleData["Copyright", "Printout"], 
             CellMargins -> {{9, 0}, {72, 4}}, FontSize -> 7]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Example"], CellMargins -> {{12, 10}, {5, 12}}, 
             LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 12}, 
             CounterIncrements -> "Example", FontFamily -> "Times", 
             FontWeight -> "Bold"], 
            Cell[
             StyleData["Example", "Presentation"], 
             CellMargins -> {{18, 10}, {8, 20}}, LineSpacing -> {1, 5}, 
             ParagraphSpacing -> {0, 12}], 
            Cell[
             StyleData["Example", "Condensed"], 
             CellMargins -> {{8, 10}, {4, 8}}, LineSpacing -> {1, 1}, 
             ParagraphSpacing -> {0, 4}], 
            Cell[
             StyleData["Example", "Printout"], 
             CellMargins -> {{9, 0}, {4, 10}}, ParagraphSpacing -> {0, 6}]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Definition"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{52, 10}, {8, 8}}, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             Hyphenation -> True, ShowStringCharacters -> True, 
             CounterIncrements -> "Definition", FontFamily -> "Helvetica", 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.2, 0.700008, 0.700008]], 
            Cell[
             StyleData["Definition", "Presentation"], 
             CellMargins -> {{62, Inherited}, {5, 12}}, 
             LineSpacing -> {1, 0}], 
            Cell[
             StyleData["Definition", "Condensed"], 
             CellMargins -> {{40, 10}, {1, 4}}], 
            Cell[
             StyleData["Definition", "Printout"], 
             CellMargins -> {{44, 0}, {2, 6}}, Background -> GrayLevel[0.6]]},
            Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Theorem"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{52, 10}, {8, 8}}, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             Hyphenation -> True, ShowStringCharacters -> True, 
             CounterIncrements -> "Theorem", FontFamily -> "Helvetica", 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.571389, 0.19675, 0.570504]], 
            Cell[
             StyleData["Theorem", "Presentation"], 
             CellMargins -> {{62, Inherited}, {5, 12}}, 
             LineSpacing -> {1, 0}], 
            Cell[
             StyleData["Theorem", "Condensed"], 
             CellMargins -> {{40, 10}, {1, 4}}], 
            Cell[
             StyleData["Theorem", "Printout"], 
             CellMargins -> {{44, 0}, {2, 6}}, Background -> GrayLevel[0.4]]},
            Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ExerciseMain"], CellFrame -> {{6, 0}, {0, 1}}, 
             CellMargins -> {{12, Inherited}, {4, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameColor -> RGBColor[0.571389, 0.19675, 0.570504], 
             CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Helvetica", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.571389, 0.19675, 0.570504]], 
            Cell[
             StyleData["ExerciseMain", "Presentation"], 
             CellMargins -> {{18, 10}, {8, 32}}, LineSpacing -> {1, 2}, 
             FontSize -> 24, FontTracking -> "Condensed"], 
            Cell[
             StyleData["ExerciseMain", "Condensed"], 
             CellMargins -> {{8, Inherited}, {2, 12}}, FontSize -> 12], 
            Cell[
             StyleData["ExerciseMain", "Printout"], 
             CellMargins -> {{9, 0}, {2, 50}}, CellFrameColor -> 
             GrayLevel[0.500008], FontSize -> 14, FontTracking -> "Plain", 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Exercise"], CellDingbat -> "\[FilledDownTriangle]", 
             CellMargins -> {{23, Inherited}, {4, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, Hyphenation -> True, CounterIncrements -> "Subsubsection",
              FontFamily -> "Times", FontSize -> 13, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.571389, 0.19675, 0.570504]], 
            Cell[
             StyleData["Exercise", "Presentation"], 
             CellMargins -> {{33, 10}, {8, 26}}, LineSpacing -> {1, 0}, 
             FontSize -> 18], 
            Cell[
             StyleData["Exercise", "Condensed"], 
             CellMargins -> {{17, Inherited}, {2, 12}}, FontSize -> 10], 
            Cell[
             StyleData["Exercise", "Printout"], 
             CellFrame -> {{0, 0}, {0.5, 0}}, CellDingbat -> None, 
             CellMargins -> {{9, 0}, {6, 20}}, FontSize -> 11, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ExerciseText"], CellMargins -> {{62, 10}, {5, 5}}, 
             Hyphenation -> True, LineSpacing -> {1, 3}, 
             ParagraphSpacing -> {0, 8}, CounterIncrements -> "ExcersiceText",
              FontFamily -> "Times"], 
            Cell[
             StyleData["ExerciseText", "Presentation"], 
             CellMargins -> {{74, 10}, {8, 8}}, LineSpacing -> {1, 5}, 
             ParagraphSpacing -> {0, 12}], 
            Cell[
             StyleData["ExerciseText", "Condensed"], 
             CellMargins -> {{52, 10}, {2, 2}}, LineSpacing -> {1, 1}, 
             ParagraphSpacing -> {0, 4}], 
            Cell[
             StyleData["ExerciseText", "Printout"], 
             CellMargins -> {{54, 0}, {4, 4}}, ParagraphSpacing -> {0, 6}]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ObjectName"], CellMargins -> {{10, 4}, {1, 10}}, 
             FontFamily -> "Courier", FontSize -> 16, FontWeight -> "Bold"], 
            Cell[
             StyleData["ObjectName", "Brackets"], 
             CellMargins -> {{72, 4}, {1, 14}}, 
             CellGroupingRules -> {"SectionGrouping", 90}, StyleMenuListing -> 
             None, FontFamily -> "Courier", FontSize -> 12, FontWeight -> 
             "Bold"], 
            Cell[
             StyleData["ObjectName", "Printout"], 
             CellMargins -> {{2, 0}, {1, 10}}, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Usage"], CellFrame -> {{0, 0}, {0.5, 0.5}}, 
             CellMargins -> {{10, 4}, {0, 4}}, CellFrameMargins -> 5, 
             TextAlignment -> Left, TextJustification -> 1, Hyphenation -> 
             True, ParagraphSpacing -> {0, 6}, ParagraphIndent -> -10, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Usage", "Brackets"], 
             CellFrame -> {{0, 0}, {0.5, 0.5}}, 
             CellMargins -> {{72, 4}, {0, 4}}, CellFrameMargins -> 5, 
             ParagraphSpacing -> {0, 6}, ParagraphIndent -> -10, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Usage", "Printout"], CellMargins -> {{2, 0}, {0, 4}}, 
             FontSize -> 10, FontWeight -> "Plain"]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notes"], CellMargins -> {{10, 4}, {0, 8}}, 
             CellHorizontalScrolling -> True, TextAlignment -> Left, 
             TextJustification -> 1, Hyphenation -> True, 
             ParagraphSpacing -> {0, 6}, ParagraphIndent -> -10, 
             StyleMenuListing -> None, FontFamily -> "Times"], 
            Cell[
             StyleData["Notes", "Brackets"], CellMargins -> {{72, 4}, {0, 8}},
              CellHorizontalScrolling -> True, ParagraphSpacing -> {0, 6}, 
             ParagraphIndent -> -10, StyleMenuListing -> None, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["Notes", "Printout"], CellMargins -> {{2, 0}, {0, 8}}, 
             FontSize -> 9]}, Closed]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Title", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellMargins -> {{12, Inherited}, {2, 20}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, 
             CounterIncrements -> "Title", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Subtitle", 0}, {"Subsubtitle", 0}}, FontFamily -> 
             "Helvetica", FontSize -> 30, FontWeight -> "Bold"], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{2, 10}, {2, 30}}, FontSize -> 24]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], CellMargins -> {{12, Inherited}, {2, 2}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, 
             CounterIncrements -> "Subtitle", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Subsubtitle", 0}}, FontFamily -> "Helvetica", 
             FontSize -> 14, FontColor -> RGBColor[0, 0, 0.6]], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{2, 10}, {2, 4}}, FontSize -> 18, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], 
             CellMargins -> {{12, Inherited}, {2, 12}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica"}, 
             CounterIncrements -> "Subsubtitle", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Helvetica", FontSize -> 14, 
             FontSlant -> "Italic", FontColor -> RGBColor[0, 0, 0.6]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{2, 10}, {2, 8}}, FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               ButtonData}], 
            Cell[
             StyleData["Hyperlink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
         "The following styles are for linking automatically to the on-line \
help system.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MainBookLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["MainBook", #]}]& )}], 
            Cell[
             StyleData["MainBookLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["AddOnsLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["AddOns", #]}]& )}], 
            Cell[
             StyleData["AddOnsLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuide", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Formulas and Programming", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineFormula"], CellMargins -> {{10, 4}, {0, 8}}, 
             CellHorizontalScrolling -> True, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, ScriptLevel -> 1, 
             SingleLetterItalics -> True, SpanMaxSize -> Infinity, 
             StyleMenuListing -> None, 
             GridBoxOptions -> {
              GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{1.}}, "RowsIndexed" -> {}}}], 
            Cell[
             StyleData["InlineFormula", "Printout"], 
             CellMargins -> {{2, 0}, {0, 8}}, FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineOutput"], CellMargins -> {{10, 4}, {0, 8}}, 
             CellHorizontalScrolling -> True, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, StyleMenuListing -> 
             None, FontFamily -> "Courier"], 
            Cell[
             StyleData["InlineOutput", "Printout"], 
             CellMargins -> {{2, 0}, {0, 8}}, FontSize -> 9.5]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["DisplayFormula"], 
             CellMargins -> {{42, Inherited}, {Inherited, Inherited}}, 
             CellHorizontalScrolling -> True, DefaultFormatType -> 
             DefaultInputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, LanguageCategory -> 
             "Formula", ScriptLevel -> 0, SingleLetterItalics -> True, 
             SpanMaxSize -> Infinity, 
             UnderoverscriptBoxOptions -> {LimitsPositioning -> True}, 
             GridBoxOptions -> {
              GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{1.}}, "RowsIndexed" -> {}}}], 
            Cell[
             StyleData["DisplayFormula", "Printout"], 
             CellMargins -> {{34, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["DisplayMath"], CellMargins -> {{42, 10}, {7, 7}}, 
             Evaluatable -> False, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, DefaultFormatType -> 
             DefaultInputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, LanguageCategory -> "Formula", FormatType -> 
             InputForm, ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input"], 
            Cell[
             StyleData["DisplayMath", "Printout"], 
             CellMargins -> {{39, 0}, {6, 6}}, FontSize -> 9]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Program"], CellMargins -> {{10, 4}, {0, 8}}, 
             ConversionRules :> {"TeX" -> {"\\texttt{", "}"}}, 
             CellHorizontalScrolling -> True, LanguageCategory -> "Formula", 
             FontFamily -> "Courier"], 
            Cell[
             StyleData["Program", "Printout"], 
             CellMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 9.5]}, Open]], 
         Cell[
          StyleData["List"], CellMargins -> {{12, 0}, {2, 8}}, 
          CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, FontWeight -> "Bold"]}, Open]]}, Open]]}, Visible -> False, 
  FrontEndVersion -> "9.0 for Microsoft Windows (64-bit) (January 25, 2013)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Reference Manual"->{
  Cell[567, 22, 225, 7, 86, "Title",
   Evaluatable->False,
   PageBreakAbove->True,
   InitializationCell->True,
   CellTags->{"Reference Manual", "c:1"}]},
 "c:1"->{
  Cell[567, 22, 225, 7, 86, "Title",
   Evaluatable->False,
   PageBreakAbove->True,
   InitializationCell->True,
   CellTags->{"Reference Manual", "c:1"}]},
 "c:2"->{
  Cell[817, 33, 49, 1, 72, "Section",
   CellTags->"c:2"]},
 "c:3"->{
  Cell[1500, 57, 78, 1, 52, "Subsection",
   CellTags->{"c:3", "b:1.0.0"}]},
 "b:1.0.0"->{
  Cell[1500, 57, 78, 1, 52, "Subsection",
   CellTags->{"c:3", "b:1.0.0"}],
  Cell[1581, 60, 659, 22, 112, "Text",
   CellTags->"b:1.0.0"]},
 "c:4"->{
  Cell[2277, 87, 82, 1, 52, "Subsection",
   CellTags->{"c:4", "b:1.0.1"}]},
 "b:1.0.1"->{
  Cell[2277, 87, 82, 1, 52, "Subsection",
   CellTags->{"c:4", "b:1.0.1"}],
  Cell[2384, 92, 155, 6, 51, "Subsubsection",
   CellTags->{"c:5", "b:1.0.1"}],
  Cell[2542, 100, 2662, 91, 208, "Text",
   CellTags->"b:1.0.1"],
  Cell[5241, 196, 75, 1, 51, "Subsubsection",
   CellTags->{"c:6", "b:1.0.1"}],
  Cell[5319, 199, 1709, 57, 186, "Text",
   CellTags->"b:1.0.1"],
  Cell[7065, 261, 75, 1, 51, "Subsubsection",
   CellTags->{"c:7", "b:1.0.1"}],
  Cell[7143, 264, 962, 32, 137, "Text",
   CellTags->"b:1.0.1"],
  Cell[8142, 301, 99, 1, 51, "Subsubsection",
   CellTags->{"c:8", "b:1.0.1"}],
  Cell[8244, 304, 919, 24, 156, "Text",
   CellTags->"b:1.0.1"],
  Cell[9166, 330, 513, 17, 89, "Text",
   CellTags->"b:1.0.1"],
  Cell[9682, 349, 342, 10, 65, "Text",
   CellTags->"b:1.0.1"],
  Cell[10027, 361, 410, 13, 64, "Text",
   CellTags->"b:1.0.1"]},
 "c:5"->{
  Cell[2384, 92, 155, 6, 51, "Subsubsection",
   CellTags->{"c:5", "b:1.0.1"}]},
 "c:6"->{
  Cell[5241, 196, 75, 1, 51, "Subsubsection",
   CellTags->{"c:6", "b:1.0.1"}]},
 "c:7"->{
  Cell[7065, 261, 75, 1, 51, "Subsubsection",
   CellTags->{"c:7", "b:1.0.1"}]},
 "c:8"->{
  Cell[8142, 301, 99, 1, 51, "Subsubsection",
   CellTags->{"c:8", "b:1.0.1"}]},
 "c:9"->{
  Cell[10486, 380, 71, 1, 52, "Subsection",
   CellTags->{"c:9", "b:1.0.2"}]},
 "b:1.0.2"->{
  Cell[10486, 380, 71, 1, 52, "Subsection",
   CellTags->{"c:9", "b:1.0.2"}],
  Cell[10560, 383, 2238, 73, 249, "Text",
   CellTags->"b:1.0.2"]},
 "c:10"->{
  Cell[12835, 461, 85, 1, 52, "Subsection",
   CellTags->{"c:10", "b:1.0.3"}]},
 "b:1.0.3"->{
  Cell[12835, 461, 85, 1, 52, "Subsection",
   CellTags->{"c:10", "b:1.0.3"}],
  Cell[12923, 464, 602, 13, 156, "Text",
   CellTags->"b:1.0.3"]},
 "c:11"->{
  Cell[13562, 482, 72, 1, 52, "Subsection",
   CellTags->{"c:11", "b:1.0.4"}]},
 "b:1.0.4"->{
  Cell[13562, 482, 72, 1, 52, "Subsection",
   CellTags->{"c:11", "b:1.0.4"}],
  Cell[13637, 485, 482, 10, 110, "Text",
   CellTags->"b:1.0.4"]},
 "c:12"->{
  Cell[14156, 500, 59, 1, 52, "Subsection",
   CellTags->{"c:12", "b:1.0.5"}]},
 "b:1.0.5"->{
  Cell[14156, 500, 59, 1, 52, "Subsection",
   CellTags->{"c:12", "b:1.0.5"}],
  Cell[14218, 503, 305, 9, 64, "Text",
   CellTags->"b:1.0.5"]},
 "c:13"->{
  Cell[14572, 518, 57, 1, 72, "Section",
   CellTags->"c:13"]},
 "sli_domain"->{
  Cell[14654, 523, 102, 1, 52, "Subsection",
   CellTags->{"sli_domain", "c:14", "b:1.1.0"}],
  Cell[14759, 526, 1431, 42, 228, "Text",
   CellTags->{"sli_domain", "b:1.1.0"}],
  Cell[16193, 570, 529, 19, 64, "Text",
   CellTags->{"sli_domain", "b:1.1.0"}],
  Cell[16747, 593, 96, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:15", "b:1.1.0"}],
  Cell[16846, 596, 2000, 74, 159, "Text",
   CellTags->{"sli_domain", "b:1.1.0"}],
  Cell[18849, 672, 633, 24, 41, "Text",
   CellTags->{"sli_domain", "b:1.1.0"}],
  Cell[19485, 698, 558, 21, 66, "Text",
   CellTags->{"sli_domain", "b:1.1.0"}],
  Cell[20080, 724, 96, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:16", "b:1.1.0"}],
  Cell[20179, 727, 1994, 75, 159, "Text",
   CellTags->{"sli_domain", "b:1.1.0"}],
  Cell[22176, 804, 634, 24, 41, "Text",
   CellTags->{"sli_domain", "b:1.1.0"}],
  Cell[22813, 830, 396, 16, 42, "Text",
   CellTags->{"sli_domain", "b:1.1.0"}],
  Cell[23258, 852, 99, 1, 52, "Subsection",
   CellTags->{"sli_domain", "c:17", "b:1.1.1"}],
  Cell[23360, 855, 1518, 60, 161, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[24881, 917, 400, 11, 89, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[25284, 930, 219, 6, 64, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[25528, 940, 79, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:18", "b:1.1.1"}],
  Cell[25610, 943, 361, 11, 65, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[26008, 959, 77, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:19", "b:1.1.1"}],
  Cell[26088, 962, 308, 11, 42, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[26433, 978, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:20", "b:1.1.1"}],
  Cell[26514, 981, 738, 27, 88, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[27255, 1010, 2662, 101, 203, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[29920, 1113, 1151, 38, 179, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[31108, 1156, 76, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:21", "b:1.1.1"}],
  Cell[31187, 1159, 680, 24, 88, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[31870, 1185, 2240, 88, 158, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[34147, 1278, 77, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:22", "b:1.1.1"}],
  Cell[34227, 1281, 769, 28, 88, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[35045, 1315, 85, 1, 52, "Subsection",
   CellTags->{"sli_domain", "c:23", "b:1.1.2"}],
  Cell[35133, 1318, 671, 18, 110, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[35829, 1340, 92, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:24", "b:1.1.2"}],
  Cell[35924, 1343, 1340, 47, 138, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[37267, 1392, 1842, 52, 256, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[39112, 1446, 555, 20, 66, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[39670, 1468, 1274, 49, 88, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[40981, 1522, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:25", "b:1.1.2"}],
  Cell[41062, 1525, 2183, 84, 136, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[43282, 1614, 95, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:26", "b:1.1.2"}],
  Cell[43380, 1617, 938, 31, 88, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[44321, 1650, 648, 26, 41, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[45006, 1681, 157, 2, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:27", "b:1.1.2"}],
  Cell[45166, 1685, 1467, 51, 135, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[46636, 1738, 735, 28, 41, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[47408, 1771, 98, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:28", "b:1.1.2"}],
  Cell[47509, 1774, 2094, 65, 181, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}]},
 "c:14"->{
  Cell[14654, 523, 102, 1, 52, "Subsection",
   CellTags->{"sli_domain", "c:14", "b:1.1.0"}]},
 "b:1.1.0"->{
  Cell[14654, 523, 102, 1, 52, "Subsection",
   CellTags->{"sli_domain", "c:14", "b:1.1.0"}],
  Cell[14759, 526, 1431, 42, 228, "Text",
   CellTags->{"sli_domain", "b:1.1.0"}],
  Cell[16193, 570, 529, 19, 64, "Text",
   CellTags->{"sli_domain", "b:1.1.0"}],
  Cell[16747, 593, 96, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:15", "b:1.1.0"}],
  Cell[16846, 596, 2000, 74, 159, "Text",
   CellTags->{"sli_domain", "b:1.1.0"}],
  Cell[18849, 672, 633, 24, 41, "Text",
   CellTags->{"sli_domain", "b:1.1.0"}],
  Cell[19485, 698, 558, 21, 66, "Text",
   CellTags->{"sli_domain", "b:1.1.0"}],
  Cell[20080, 724, 96, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:16", "b:1.1.0"}],
  Cell[20179, 727, 1994, 75, 159, "Text",
   CellTags->{"sli_domain", "b:1.1.0"}],
  Cell[22176, 804, 634, 24, 41, "Text",
   CellTags->{"sli_domain", "b:1.1.0"}],
  Cell[22813, 830, 396, 16, 42, "Text",
   CellTags->{"sli_domain", "b:1.1.0"}]},
 "c:15"->{
  Cell[16747, 593, 96, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:15", "b:1.1.0"}]},
 "c:16"->{
  Cell[20080, 724, 96, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:16", "b:1.1.0"}]},
 "c:17"->{
  Cell[23258, 852, 99, 1, 52, "Subsection",
   CellTags->{"sli_domain", "c:17", "b:1.1.1"}]},
 "b:1.1.1"->{
  Cell[23258, 852, 99, 1, 52, "Subsection",
   CellTags->{"sli_domain", "c:17", "b:1.1.1"}],
  Cell[23360, 855, 1518, 60, 161, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[24881, 917, 400, 11, 89, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[25284, 930, 219, 6, 64, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[25528, 940, 79, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:18", "b:1.1.1"}],
  Cell[25610, 943, 361, 11, 65, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[26008, 959, 77, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:19", "b:1.1.1"}],
  Cell[26088, 962, 308, 11, 42, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[26433, 978, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:20", "b:1.1.1"}],
  Cell[26514, 981, 738, 27, 88, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[27255, 1010, 2662, 101, 203, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[29920, 1113, 1151, 38, 179, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[31108, 1156, 76, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:21", "b:1.1.1"}],
  Cell[31187, 1159, 680, 24, 88, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[31870, 1185, 2240, 88, 158, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}],
  Cell[34147, 1278, 77, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:22", "b:1.1.1"}],
  Cell[34227, 1281, 769, 28, 88, "Text",
   CellTags->{"sli_domain", "b:1.1.1"}]},
 "c:18"->{
  Cell[25528, 940, 79, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:18", "b:1.1.1"}]},
 "c:19"->{
  Cell[26008, 959, 77, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:19", "b:1.1.1"}]},
 "c:20"->{
  Cell[26433, 978, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:20", "b:1.1.1"}]},
 "c:21"->{
  Cell[31108, 1156, 76, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:21", "b:1.1.1"}]},
 "c:22"->{
  Cell[34147, 1278, 77, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:22", "b:1.1.1"}]},
 "c:23"->{
  Cell[35045, 1315, 85, 1, 52, "Subsection",
   CellTags->{"sli_domain", "c:23", "b:1.1.2"}]},
 "b:1.1.2"->{
  Cell[35045, 1315, 85, 1, 52, "Subsection",
   CellTags->{"sli_domain", "c:23", "b:1.1.2"}],
  Cell[35133, 1318, 671, 18, 110, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[35829, 1340, 92, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:24", "b:1.1.2"}],
  Cell[35924, 1343, 1340, 47, 138, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[37267, 1392, 1842, 52, 256, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[39112, 1446, 555, 20, 66, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[39670, 1468, 1274, 49, 88, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[40981, 1522, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:25", "b:1.1.2"}],
  Cell[41062, 1525, 2183, 84, 136, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[43282, 1614, 95, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:26", "b:1.1.2"}],
  Cell[43380, 1617, 938, 31, 88, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[44321, 1650, 648, 26, 41, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[45006, 1681, 157, 2, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:27", "b:1.1.2"}],
  Cell[45166, 1685, 1467, 51, 135, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[46636, 1738, 735, 28, 41, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}],
  Cell[47408, 1771, 98, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:28", "b:1.1.2"}],
  Cell[47509, 1774, 2094, 65, 181, "Text",
   CellTags->{"sli_domain", "b:1.1.2"}]},
 "c:24"->{
  Cell[35829, 1340, 92, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:24", "b:1.1.2"}]},
 "c:25"->{
  Cell[40981, 1522, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:25", "b:1.1.2"}]},
 "c:26"->{
  Cell[43282, 1614, 95, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:26", "b:1.1.2"}]},
 "c:27"->{
  Cell[45006, 1681, 157, 2, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:27", "b:1.1.2"}]},
 "c:28"->{
  Cell[47408, 1771, 98, 1, 51, "Subsubsection",
   CellTags->{"sli_domain", "c:28", "b:1.1.2"}]},
 "c:29"->{
  Cell[49652, 1845, 91, 1, 52, "Subsection",
   CellTags->{"c:29", "b:1.1.3"}]},
 "b:1.1.3"->{
  Cell[49652, 1845, 91, 1, 52, "Subsection",
   CellTags->{"c:29", "b:1.1.3"}],
  Cell[49746, 1848, 1206, 31, 202, "Text",
   CellTags->"b:1.1.3"],
  Cell[50977, 1883, 65, 1, 51, "Subsubsection",
   CellTags->{"c:30", "b:1.1.3"}],
  Cell[51045, 1886, 256, 9, 64, "Text",
   CellTags->"b:1.1.3"],
  Cell[51338, 1900, 65, 1, 51, "Subsubsection",
   CellTags->{"c:31", "b:1.1.3"}],
  Cell[51406, 1903, 256, 9, 64, "Text",
   CellTags->"b:1.1.3"]},
 "c:30"->{
  Cell[50977, 1883, 65, 1, 51, "Subsubsection",
   CellTags->{"c:30", "b:1.1.3"}]},
 "c:31"->{
  Cell[51338, 1900, 65, 1, 51, "Subsubsection",
   CellTags->{"c:31", "b:1.1.3"}]},
 "sli_op_prop"->{
  Cell[51711, 1918, 99, 1, 52, "Subsection",
   CellTags->{"sli_op_prop", "c:32", "b:1.1.4"}],
  Cell[51813, 1921, 1716, 58, 254, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[53532, 1981, 386, 13, 65, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[53921, 1996, 1308, 44, 159, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[55232, 2042, 266, 10, 41, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[55501, 2054, 932, 37, 88, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[56436, 2093, 485, 18, 64, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[56924, 2113, 978, 35, 134, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[57905, 2150, 634, 23, 88, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[58542, 2175, 1775, 63, 182, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[60320, 2240, 235, 6, 64, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[60580, 2250, 139, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:33", "b:1.1.4"}],
  Cell[60722, 2257, 424, 15, 41, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[61183, 2277, 137, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:34", "b:1.1.4"}],
  Cell[61323, 2284, 817, 27, 65, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[62177, 2316, 139, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:35", "b:1.1.4"}],
  Cell[62319, 2323, 1835, 66, 182, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[64191, 2394, 199, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:36", "b:1.1.4"}],
  Cell[64393, 2401, 292, 7, 64, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[64688, 2410, 3917, 144, 187, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[68608, 2556, 1603, 47, 225, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[70248, 2608, 147, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:37", "b:1.1.4"}],
  Cell[70398, 2615, 1633, 61, 133, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[72034, 2678, 1646, 60, 133, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[73683, 2740, 363, 12, 64, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[74083, 2757, 138, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:38", "b:1.1.4"}],
  Cell[74224, 2764, 645, 22, 41, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[74906, 2791, 144, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:39", "b:1.1.4"}],
  Cell[75053, 2798, 210, 7, 42, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[75266, 2807, 1221, 45, 64, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[76524, 2857, 141, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:40", "b:1.1.4"}],
  Cell[76668, 2864, 676, 27, 65, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[77381, 2896, 140, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:41", "b:1.1.4"}],
  Cell[77524, 2903, 978, 38, 65, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[78539, 2946, 140, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:42", "b:1.1.4"}],
  Cell[78682, 2953, 1337, 46, 134, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[80056, 3004, 147, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:43", "b:1.1.4"}],
  Cell[80206, 3011, 1501, 54, 157, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[81744, 3070, 168, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:44", "b:1.1.4"}],
  Cell[81915, 3077, 4536, 164, 321, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}]},
 "c:32"->{
  Cell[51711, 1918, 99, 1, 52, "Subsection",
   CellTags->{"sli_op_prop", "c:32", "b:1.1.4"}]},
 "b:1.1.4"->{
  Cell[51711, 1918, 99, 1, 52, "Subsection",
   CellTags->{"sli_op_prop", "c:32", "b:1.1.4"}],
  Cell[51813, 1921, 1716, 58, 254, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[53532, 1981, 386, 13, 65, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[53921, 1996, 1308, 44, 159, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[55232, 2042, 266, 10, 41, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[55501, 2054, 932, 37, 88, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[56436, 2093, 485, 18, 64, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[56924, 2113, 978, 35, 134, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[57905, 2150, 634, 23, 88, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[58542, 2175, 1775, 63, 182, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[60320, 2240, 235, 6, 64, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[60580, 2250, 139, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:33", "b:1.1.4"}],
  Cell[60722, 2257, 424, 15, 41, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[61183, 2277, 137, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:34", "b:1.1.4"}],
  Cell[61323, 2284, 817, 27, 65, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[62177, 2316, 139, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:35", "b:1.1.4"}],
  Cell[62319, 2323, 1835, 66, 182, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[64191, 2394, 199, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:36", "b:1.1.4"}],
  Cell[64393, 2401, 292, 7, 64, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[64688, 2410, 3917, 144, 187, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[68608, 2556, 1603, 47, 225, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[70248, 2608, 147, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:37", "b:1.1.4"}],
  Cell[70398, 2615, 1633, 61, 133, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[72034, 2678, 1646, 60, 133, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[73683, 2740, 363, 12, 64, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[74083, 2757, 138, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:38", "b:1.1.4"}],
  Cell[74224, 2764, 645, 22, 41, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[74906, 2791, 144, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:39", "b:1.1.4"}],
  Cell[75053, 2798, 210, 7, 42, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[75266, 2807, 1221, 45, 64, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[76524, 2857, 141, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:40", "b:1.1.4"}],
  Cell[76668, 2864, 676, 27, 65, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[77381, 2896, 140, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:41", "b:1.1.4"}],
  Cell[77524, 2903, 978, 38, 65, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[78539, 2946, 140, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:42", "b:1.1.4"}],
  Cell[78682, 2953, 1337, 46, 134, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[80056, 3004, 147, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:43", "b:1.1.4"}],
  Cell[80206, 3011, 1501, 54, 157, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}],
  Cell[81744, 3070, 168, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:44", "b:1.1.4"}],
  Cell[81915, 3077, 4536, 164, 321, "Text",
   CellTags->{"sli_op_prop", "b:1.1.4"}]},
 "c:33"->{
  Cell[60580, 2250, 139, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:33", "b:1.1.4"}]},
 "c:34"->{
  Cell[61183, 2277, 137, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:34", "b:1.1.4"}]},
 "c:35"->{
  Cell[62177, 2316, 139, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:35", "b:1.1.4"}]},
 "c:36"->{
  Cell[64191, 2394, 199, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:36", "b:1.1.4"}]},
 "c:37"->{
  Cell[70248, 2608, 147, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:37", "b:1.1.4"}]},
 "c:38"->{
  Cell[74083, 2757, 138, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:38", "b:1.1.4"}]},
 "c:39"->{
  Cell[74906, 2791, 144, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:39", "b:1.1.4"}]},
 "c:40"->{
  Cell[76524, 2857, 141, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:40", "b:1.1.4"}]},
 "c:41"->{
  Cell[77381, 2896, 140, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:41", "b:1.1.4"}]},
 "c:42"->{
  Cell[78539, 2946, 140, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:42", "b:1.1.4"}]},
 "c:43"->{
  Cell[80056, 3004, 147, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:43", "b:1.1.4"}]},
 "c:44"->{
  Cell[81744, 3070, 168, 5, 51, "Subsubsection",
   CellTags->{"sli_op_prop", "c:44", "b:1.1.4"}]},
 "c:45"->{
  Cell[86512, 3248, 73, 1, 72, "Section",
   CellTags->"c:45"]},
 "c:46"->{
  Cell[86610, 3253, 66, 1, 52, "Subsection",
   CellTags->{"c:46", "b:1.2.0"}]},
 "b:1.2.0"->{
  Cell[86610, 3253, 66, 1, 52, "Subsection",
   CellTags->{"c:46", "b:1.2.0"}],
  Cell[86679, 3256, 2301, 61, 363, "Text",
   CellTags->"b:1.2.0"]},
 "sli_prop"->{
  Cell[89017, 3322, 97, 1, 52, "Subsection",
   CellTags->{"sli_prop", "c:47", "b:1.2.1"}],
  Cell[89117, 3325, 280, 7, 64, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[89422, 3336, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:48", "b:1.2.1"}],
  Cell[89503, 3339, 1219, 45, 133, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[90759, 3389, 74, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:49", "b:1.2.1"}],
  Cell[90836, 3392, 864, 17, 225, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[91703, 3411, 898, 27, 88, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[92604, 3440, 892, 31, 88, "Text",
   Evaluatable->False,
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[93499, 3473, 3508, 109, 342, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[97010, 3584, 1722, 60, 159, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[98769, 3649, 95, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:50", "b:1.2.1"}],
  Cell[98867, 3652, 1165, 37, 134, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[100069, 3694, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:51", "b:1.2.1"}],
  Cell[100157, 3697, 1127, 39, 133, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[101321, 3741, 86, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:52", "b:1.2.1"}],
  Cell[101410, 3744, 476, 18, 64, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[101923, 3767, 93, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:53", "b:1.2.1"}],
  Cell[102019, 3770, 201, 6, 41, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[102223, 3778, 1827, 60, 203, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[104087, 3843, 75, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:54", "b:1.2.1"}],
  Cell[104165, 3846, 1593, 50, 204, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[105795, 3901, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:55", "b:1.2.1"}],
  Cell[105883, 3904, 790, 26, 87, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[106676, 3932, 2550, 99, 210, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[109229, 4033, 519, 11, 111, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[109751, 4046, 570, 18, 88, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[110358, 4069, 105, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:56", "b:1.2.1"}],
  Cell[110466, 4072, 640, 18, 133, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[111109, 4092, 132, 3, 41, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[111278, 4100, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:57", "b:1.2.1"}],
  Cell[111359, 4103, 969, 33, 111, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}]},
 "c:47"->{
  Cell[89017, 3322, 97, 1, 52, "Subsection",
   CellTags->{"sli_prop", "c:47", "b:1.2.1"}]},
 "b:1.2.1"->{
  Cell[89017, 3322, 97, 1, 52, "Subsection",
   CellTags->{"sli_prop", "c:47", "b:1.2.1"}],
  Cell[89117, 3325, 280, 7, 64, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[89422, 3336, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:48", "b:1.2.1"}],
  Cell[89503, 3339, 1219, 45, 133, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[90759, 3389, 74, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:49", "b:1.2.1"}],
  Cell[90836, 3392, 864, 17, 225, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[91703, 3411, 898, 27, 88, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[92604, 3440, 892, 31, 88, "Text",
   Evaluatable->False,
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[93499, 3473, 3508, 109, 342, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[97010, 3584, 1722, 60, 159, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[98769, 3649, 95, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:50", "b:1.2.1"}],
  Cell[98867, 3652, 1165, 37, 134, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[100069, 3694, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:51", "b:1.2.1"}],
  Cell[100157, 3697, 1127, 39, 133, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[101321, 3741, 86, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:52", "b:1.2.1"}],
  Cell[101410, 3744, 476, 18, 64, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[101923, 3767, 93, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:53", "b:1.2.1"}],
  Cell[102019, 3770, 201, 6, 41, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[102223, 3778, 1827, 60, 203, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[104087, 3843, 75, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:54", "b:1.2.1"}],
  Cell[104165, 3846, 1593, 50, 204, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[105795, 3901, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:55", "b:1.2.1"}],
  Cell[105883, 3904, 790, 26, 87, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[106676, 3932, 2550, 99, 210, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[109229, 4033, 519, 11, 111, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[109751, 4046, 570, 18, 88, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[110358, 4069, 105, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:56", "b:1.2.1"}],
  Cell[110466, 4072, 640, 18, 133, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[111109, 4092, 132, 3, 41, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}],
  Cell[111278, 4100, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:57", "b:1.2.1"}],
  Cell[111359, 4103, 969, 33, 111, "Text",
   CellTags->{"sli_prop", "b:1.2.1"}]},
 "c:48"->{
  Cell[89422, 3336, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:48", "b:1.2.1"}]},
 "c:49"->{
  Cell[90759, 3389, 74, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:49", "b:1.2.1"}]},
 "c:50"->{
  Cell[98769, 3649, 95, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:50", "b:1.2.1"}]},
 "c:51"->{
  Cell[100069, 3694, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:51", "b:1.2.1"}]},
 "c:52"->{
  Cell[101321, 3741, 86, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:52", "b:1.2.1"}]},
 "c:53"->{
  Cell[101923, 3767, 93, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:53", "b:1.2.1"}]},
 "c:54"->{
  Cell[104087, 3843, 75, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:54", "b:1.2.1"}]},
 "c:55"->{
  Cell[105795, 3901, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:55", "b:1.2.1"}]},
 "c:56"->{
  Cell[110358, 4069, 105, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:56", "b:1.2.1"}]},
 "c:57"->{
  Cell[111278, 4100, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_prop", "c:57", "b:1.2.1"}]},
 "sli_opt"->{
  Cell[112377, 4142, 136, 3, 52, "Subsection",
   CellTags->{"sli_opt", "c:58", "b:1.2.2"}],
  Cell[112516, 4147, 674, 19, 156, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[113215, 4170, 88, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:59", "b:1.2.2"}],
  Cell[113306, 4173, 3354, 118, 321, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[116697, 4296, 75, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:60", "b:1.2.2"}],
  Cell[116775, 4299, 625, 16, 87, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[117437, 4320, 74, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:61", "b:1.2.2"}],
  Cell[117514, 4323, 608, 16, 87, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[118159, 4344, 84, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:62", "b:1.2.2"}],
  Cell[118246, 4347, 435, 13, 64, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[118718, 4365, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:63", "b:1.2.2"}],
  Cell[118799, 4368, 530, 19, 64, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[119366, 4392, 74, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:64", "b:1.2.2"}],
  Cell[119443, 4395, 1424, 44, 184, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[120904, 4444, 172, 5, 51, "Subsubsection",
   Evaluatable->False,
   CellTags->{"sli_opt", "c:65", "b:1.2.2"}],
  Cell[121079, 4451, 1809, 54, 253, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[122925, 4510, 83, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:66", "b:1.2.2"}],
  Cell[123011, 4513, 548, 19, 65, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[123596, 4537, 81, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:67", "b:1.2.2"}],
  Cell[123680, 4540, 291, 10, 41, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[123974, 4552, 569, 14, 87, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[124546, 4568, 766, 24, 87, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}]},
 "c:58"->{
  Cell[112377, 4142, 136, 3, 52, "Subsection",
   CellTags->{"sli_opt", "c:58", "b:1.2.2"}]},
 "b:1.2.2"->{
  Cell[112377, 4142, 136, 3, 52, "Subsection",
   CellTags->{"sli_opt", "c:58", "b:1.2.2"}],
  Cell[112516, 4147, 674, 19, 156, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[113215, 4170, 88, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:59", "b:1.2.2"}],
  Cell[113306, 4173, 3354, 118, 321, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[116697, 4296, 75, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:60", "b:1.2.2"}],
  Cell[116775, 4299, 625, 16, 87, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[117437, 4320, 74, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:61", "b:1.2.2"}],
  Cell[117514, 4323, 608, 16, 87, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[118159, 4344, 84, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:62", "b:1.2.2"}],
  Cell[118246, 4347, 435, 13, 64, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[118718, 4365, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:63", "b:1.2.2"}],
  Cell[118799, 4368, 530, 19, 64, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[119366, 4392, 74, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:64", "b:1.2.2"}],
  Cell[119443, 4395, 1424, 44, 184, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[120904, 4444, 172, 5, 51, "Subsubsection",
   Evaluatable->False,
   CellTags->{"sli_opt", "c:65", "b:1.2.2"}],
  Cell[121079, 4451, 1809, 54, 253, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[122925, 4510, 83, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:66", "b:1.2.2"}],
  Cell[123011, 4513, 548, 19, 65, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[123596, 4537, 81, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:67", "b:1.2.2"}],
  Cell[123680, 4540, 291, 10, 41, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[123974, 4552, 569, 14, 87, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}],
  Cell[124546, 4568, 766, 24, 87, "Text",
   CellTags->{"sli_opt", "b:1.2.2"}]},
 "c:59"->{
  Cell[113215, 4170, 88, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:59", "b:1.2.2"}]},
 "c:60"->{
  Cell[116697, 4296, 75, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:60", "b:1.2.2"}]},
 "c:61"->{
  Cell[117437, 4320, 74, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:61", "b:1.2.2"}]},
 "c:62"->{
  Cell[118159, 4344, 84, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:62", "b:1.2.2"}]},
 "c:63"->{
  Cell[118718, 4365, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:63", "b:1.2.2"}]},
 "c:64"->{
  Cell[119366, 4392, 74, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:64", "b:1.2.2"}]},
 "c:65"->{
  Cell[120904, 4444, 172, 5, 51, "Subsubsection",
   Evaluatable->False,
   CellTags->{"sli_opt", "c:65", "b:1.2.2"}]},
 "c:66"->{
  Cell[122925, 4510, 83, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:66", "b:1.2.2"}]},
 "c:67"->{
  Cell[123596, 4537, 81, 1, 51, "Subsubsection",
   CellTags->{"sli_opt", "c:67", "b:1.2.2"}]},
 "sli_constr"->{
  Cell[125361, 4598, 94, 1, 52, "Subsection",
   CellTags->{"sli_constr", "c:68", "b:1.2.3"}],
  Cell[125458, 4601, 470, 11, 110, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[125953, 4616, 82, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:69", "b:1.2.3"}],
  Cell[126038, 4619, 2744, 95, 322, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[128819, 4719, 79, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:70", "b:1.2.3"}],
  Cell[128901, 4722, 893, 32, 88, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[129831, 4759, 82, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:71", "b:1.2.3"}],
  Cell[129916, 4762, 2114, 75, 155, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[132067, 4842, 92, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:72", "b:1.2.3"}],
  Cell[132162, 4845, 668, 25, 65, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[132867, 4875, 87, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:73", "b:1.2.3"}],
  Cell[132957, 4878, 1401, 49, 134, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[134395, 4932, 81, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:74", "b:1.2.3"}],
  Cell[134479, 4935, 1108, 38, 64, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[135624, 4978, 86, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:75", "b:1.2.3"}],
  Cell[135713, 4981, 955, 34, 64, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[136705, 5020, 209, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_constr", "c:76", "b:1.2.3"}],
  Cell[136917, 5028, 1701, 63, 94, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[138655, 5096, 79, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:77", "b:1.2.3"}],
  Cell[138737, 5099, 2341, 81, 227, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[141115, 5185, 80, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:78", "b:1.2.3"}],
  Cell[141198, 5188, 1732, 63, 111, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[142967, 5256, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:79", "b:1.2.3"}],
  Cell[143055, 5259, 956, 34, 87, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[144048, 5298, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:80", "b:1.2.3"}],
  Cell[144136, 5301, 975, 38, 64, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[145148, 5344, 76, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:81", "b:1.2.3"}],
  Cell[145227, 5347, 1174, 43, 88, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[146438, 5395, 94, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:82", "b:1.2.3"}],
  Cell[146535, 5398, 1788, 70, 110, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[148360, 5473, 77, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:83", "b:1.2.3"}],
  Cell[148440, 5476, 1244, 45, 110, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[149721, 5526, 194, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_constr", "c:84", "b:1.2.3"}],
  Cell[149918, 5534, 2149, 77, 181, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[152104, 5616, 87, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:85", "b:1.2.3"}],
  Cell[152194, 5619, 3285, 124, 281, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[155516, 5748, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:86", "b:1.2.3"}],
  Cell[155604, 5751, 9022, 307, 593, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[164663, 6063, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:87", "b:1.2.3"}],
  Cell[164751, 6066, 1438, 48, 111, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[166226, 6119, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:88", "b:1.2.3"}],
  Cell[166314, 6122, 1953, 70, 110, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[168304, 6197, 90, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:89", "b:1.2.3"}],
  Cell[168397, 6200, 1619, 57, 110, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[170053, 6262, 98, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:90", "b:1.2.3"}],
  Cell[170154, 6265, 849, 22, 185, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}]},
 "c:68"->{
  Cell[125361, 4598, 94, 1, 52, "Subsection",
   CellTags->{"sli_constr", "c:68", "b:1.2.3"}]},
 "b:1.2.3"->{
  Cell[125361, 4598, 94, 1, 52, "Subsection",
   CellTags->{"sli_constr", "c:68", "b:1.2.3"}],
  Cell[125458, 4601, 470, 11, 110, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[125953, 4616, 82, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:69", "b:1.2.3"}],
  Cell[126038, 4619, 2744, 95, 322, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[128819, 4719, 79, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:70", "b:1.2.3"}],
  Cell[128901, 4722, 893, 32, 88, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[129831, 4759, 82, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:71", "b:1.2.3"}],
  Cell[129916, 4762, 2114, 75, 155, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[132067, 4842, 92, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:72", "b:1.2.3"}],
  Cell[132162, 4845, 668, 25, 65, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[132867, 4875, 87, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:73", "b:1.2.3"}],
  Cell[132957, 4878, 1401, 49, 134, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[134395, 4932, 81, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:74", "b:1.2.3"}],
  Cell[134479, 4935, 1108, 38, 64, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[135624, 4978, 86, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:75", "b:1.2.3"}],
  Cell[135713, 4981, 955, 34, 64, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[136705, 5020, 209, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_constr", "c:76", "b:1.2.3"}],
  Cell[136917, 5028, 1701, 63, 94, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[138655, 5096, 79, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:77", "b:1.2.3"}],
  Cell[138737, 5099, 2341, 81, 227, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[141115, 5185, 80, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:78", "b:1.2.3"}],
  Cell[141198, 5188, 1732, 63, 111, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[142967, 5256, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:79", "b:1.2.3"}],
  Cell[143055, 5259, 956, 34, 87, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[144048, 5298, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:80", "b:1.2.3"}],
  Cell[144136, 5301, 975, 38, 64, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[145148, 5344, 76, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:81", "b:1.2.3"}],
  Cell[145227, 5347, 1174, 43, 88, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[146438, 5395, 94, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:82", "b:1.2.3"}],
  Cell[146535, 5398, 1788, 70, 110, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[148360, 5473, 77, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:83", "b:1.2.3"}],
  Cell[148440, 5476, 1244, 45, 110, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[149721, 5526, 194, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_constr", "c:84", "b:1.2.3"}],
  Cell[149918, 5534, 2149, 77, 181, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[152104, 5616, 87, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:85", "b:1.2.3"}],
  Cell[152194, 5619, 3285, 124, 281, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[155516, 5748, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:86", "b:1.2.3"}],
  Cell[155604, 5751, 9022, 307, 593, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[164663, 6063, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:87", "b:1.2.3"}],
  Cell[164751, 6066, 1438, 48, 111, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[166226, 6119, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:88", "b:1.2.3"}],
  Cell[166314, 6122, 1953, 70, 110, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[168304, 6197, 90, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:89", "b:1.2.3"}],
  Cell[168397, 6200, 1619, 57, 110, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}],
  Cell[170053, 6262, 98, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:90", "b:1.2.3"}],
  Cell[170154, 6265, 849, 22, 185, "Text",
   CellTags->{"sli_constr", "b:1.2.3"}]},
 "c:69"->{
  Cell[125953, 4616, 82, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:69", "b:1.2.3"}]},
 "c:70"->{
  Cell[128819, 4719, 79, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:70", "b:1.2.3"}]},
 "c:71"->{
  Cell[129831, 4759, 82, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:71", "b:1.2.3"}]},
 "c:72"->{
  Cell[132067, 4842, 92, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:72", "b:1.2.3"}]},
 "c:73"->{
  Cell[132867, 4875, 87, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:73", "b:1.2.3"}]},
 "c:74"->{
  Cell[134395, 4932, 81, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:74", "b:1.2.3"}]},
 "c:75"->{
  Cell[135624, 4978, 86, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:75", "b:1.2.3"}]},
 "c:76"->{
  Cell[136705, 5020, 209, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_constr", "c:76", "b:1.2.3"}]},
 "c:77"->{
  Cell[138655, 5096, 79, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:77", "b:1.2.3"}]},
 "c:78"->{
  Cell[141115, 5185, 80, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:78", "b:1.2.3"}]},
 "c:79"->{
  Cell[142967, 5256, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:79", "b:1.2.3"}]},
 "c:80"->{
  Cell[144048, 5298, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:80", "b:1.2.3"}]},
 "c:81"->{
  Cell[145148, 5344, 76, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:81", "b:1.2.3"}]},
 "c:82"->{
  Cell[146438, 5395, 94, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:82", "b:1.2.3"}]},
 "c:83"->{
  Cell[148360, 5473, 77, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:83", "b:1.2.3"}]},
 "c:84"->{
  Cell[149721, 5526, 194, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_constr", "c:84", "b:1.2.3"}]},
 "c:85"->{
  Cell[152104, 5616, 87, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:85", "b:1.2.3"}]},
 "c:86"->{
  Cell[155516, 5748, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:86", "b:1.2.3"}]},
 "c:87"->{
  Cell[164663, 6063, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:87", "b:1.2.3"}]},
 "c:88"->{
  Cell[166226, 6119, 85, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:88", "b:1.2.3"}]},
 "c:89"->{
  Cell[168304, 6197, 90, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:89", "b:1.2.3"}]},
 "c:90"->{
  Cell[170053, 6262, 98, 1, 51, "Subsubsection",
   CellTags->{"sli_constr", "c:90", "b:1.2.3"}]},
 "sli_func"->{
  Cell[171052, 6293, 92, 1, 52, "Subsection",
   CellTags->{"sli_func", "c:91", "b:1.2.4"}],
  Cell[171147, 6296, 872, 20, 180, "Text",
   CellTags->{"sli_func", "b:1.2.4"}],
  Cell[172044, 6320, 70, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:92", "b:1.2.4"}],
  Cell[172117, 6323, 820, 30, 114, "Text",
   CellTags->{"sli_func", "b:1.2.4"}],
  Cell[172974, 6358, 72, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:93", "b:1.2.4"}],
  Cell[173049, 6361, 1621, 60, 160, "Text",
   CellTags->{"sli_func", "b:1.2.4"}],
  Cell[174707, 6426, 72, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:94", "b:1.2.4"}],
  Cell[174782, 6429, 815, 32, 90, "Text",
   CellTags->{"sli_func", "b:1.2.4"}],
  Cell[175634, 6466, 192, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_func", "c:95", "b:1.2.4"}],
  Cell[175829, 6474, 666, 25, 89, "Text",
   CellTags->{"sli_func", "b:1.2.4"}],
  Cell[176532, 6504, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:96", "b:1.2.4"}],
  Cell[176613, 6507, 905, 32, 89, "Text",
   CellTags->{"sli_func", "b:1.2.4"}],
  Cell[177555, 6544, 75, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:97", "b:1.2.4"}],
  Cell[177633, 6547, 849, 31, 114, "Text",
   CellTags->{"sli_func", "b:1.2.4"}],
  Cell[178519, 6583, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:98", "b:1.2.4"}],
  Cell[178600, 6586, 2970, 100, 274, "Text",
   CellTags->{"sli_func", "b:1.2.4"}],
  Cell[181607, 6691, 72, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:99", "b:1.2.4"}],
  Cell[181682, 6694, 264, 9, 42, "Text",
   CellTags->{"sli_func", "b:1.2.4"}]},
 "c:91"->{
  Cell[171052, 6293, 92, 1, 52, "Subsection",
   CellTags->{"sli_func", "c:91", "b:1.2.4"}]},
 "b:1.2.4"->{
  Cell[171052, 6293, 92, 1, 52, "Subsection",
   CellTags->{"sli_func", "c:91", "b:1.2.4"}],
  Cell[171147, 6296, 872, 20, 180, "Text",
   CellTags->{"sli_func", "b:1.2.4"}],
  Cell[172044, 6320, 70, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:92", "b:1.2.4"}],
  Cell[172117, 6323, 820, 30, 114, "Text",
   CellTags->{"sli_func", "b:1.2.4"}],
  Cell[172974, 6358, 72, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:93", "b:1.2.4"}],
  Cell[173049, 6361, 1621, 60, 160, "Text",
   CellTags->{"sli_func", "b:1.2.4"}],
  Cell[174707, 6426, 72, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:94", "b:1.2.4"}],
  Cell[174782, 6429, 815, 32, 90, "Text",
   CellTags->{"sli_func", "b:1.2.4"}],
  Cell[175634, 6466, 192, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_func", "c:95", "b:1.2.4"}],
  Cell[175829, 6474, 666, 25, 89, "Text",
   CellTags->{"sli_func", "b:1.2.4"}],
  Cell[176532, 6504, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:96", "b:1.2.4"}],
  Cell[176613, 6507, 905, 32, 89, "Text",
   CellTags->{"sli_func", "b:1.2.4"}],
  Cell[177555, 6544, 75, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:97", "b:1.2.4"}],
  Cell[177633, 6547, 849, 31, 114, "Text",
   CellTags->{"sli_func", "b:1.2.4"}],
  Cell[178519, 6583, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:98", "b:1.2.4"}],
  Cell[178600, 6586, 2970, 100, 274, "Text",
   CellTags->{"sli_func", "b:1.2.4"}],
  Cell[181607, 6691, 72, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:99", "b:1.2.4"}],
  Cell[181682, 6694, 264, 9, 42, "Text",
   CellTags->{"sli_func", "b:1.2.4"}]},
 "c:92"->{
  Cell[172044, 6320, 70, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:92", "b:1.2.4"}]},
 "c:93"->{
  Cell[172974, 6358, 72, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:93", "b:1.2.4"}]},
 "c:94"->{
  Cell[174707, 6426, 72, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:94", "b:1.2.4"}]},
 "c:95"->{
  Cell[175634, 6466, 192, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_func", "c:95", "b:1.2.4"}]},
 "c:96"->{
  Cell[176532, 6504, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:96", "b:1.2.4"}]},
 "c:97"->{
  Cell[177555, 6544, 75, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:97", "b:1.2.4"}]},
 "c:98"->{
  Cell[178519, 6583, 78, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:98", "b:1.2.4"}]},
 "c:99"->{
  Cell[181607, 6691, 72, 1, 51, "Subsubsection",
   CellTags->{"sli_func", "c:99", "b:1.2.4"}]},
 "c:100"->{
  Cell[182007, 6710, 44, 1, 72, "Section",
   CellTags->"c:100"]},
 "sli_eval"->{
  Cell[182076, 6715, 103, 1, 52, "Subsection",
   CellTags->{"sli_eval", "c:101", "b:1.3.0"}],
  Cell[182182, 6718, 563, 22, 42, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[182748, 6742, 921, 34, 64, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[183672, 6778, 1837, 56, 206, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[185512, 6836, 866, 25, 136, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[186381, 6863, 463, 15, 65, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[186847, 6880, 491, 16, 88, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[187341, 6898, 494, 14, 88, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[187838, 6914, 1050, 38, 87, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[188891, 6954, 302, 10, 41, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[189196, 6966, 625, 18, 87, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[189824, 6986, 1010, 39, 65, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[190859, 7029, 87, 1, 51, "Subsubsection",
   CellTags->{"sli_eval", "c:102", "b:1.3.0"}],
  Cell[190949, 7032, 421, 15, 42, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[191373, 7049, 321, 10, 42, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[191697, 7061, 257, 9, 42, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[191957, 7072, 259, 9, 42, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[192219, 7083, 333, 11, 66, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[192555, 7096, 464, 17, 41, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[193022, 7115, 415, 14, 44, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}]},
 "c:101"->{
  Cell[182076, 6715, 103, 1, 52, "Subsection",
   CellTags->{"sli_eval", "c:101", "b:1.3.0"}]},
 "b:1.3.0"->{
  Cell[182076, 6715, 103, 1, 52, "Subsection",
   CellTags->{"sli_eval", "c:101", "b:1.3.0"}],
  Cell[182182, 6718, 563, 22, 42, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[182748, 6742, 921, 34, 64, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[183672, 6778, 1837, 56, 206, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[185512, 6836, 866, 25, 136, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[186381, 6863, 463, 15, 65, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[186847, 6880, 491, 16, 88, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[187341, 6898, 494, 14, 88, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[187838, 6914, 1050, 38, 87, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[188891, 6954, 302, 10, 41, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[189196, 6966, 625, 18, 87, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[189824, 6986, 1010, 39, 65, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[190859, 7029, 87, 1, 51, "Subsubsection",
   CellTags->{"sli_eval", "c:102", "b:1.3.0"}],
  Cell[190949, 7032, 421, 15, 42, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[191373, 7049, 321, 10, 42, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[191697, 7061, 257, 9, 42, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[191957, 7072, 259, 9, 42, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[192219, 7083, 333, 11, 66, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[192555, 7096, 464, 17, 41, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}],
  Cell[193022, 7115, 415, 14, 44, "Text",
   CellTags->{"sli_eval", "b:1.3.0"}]},
 "c:102"->{
  Cell[190859, 7029, 87, 1, 51, "Subsubsection",
   CellTags->{"sli_eval", "c:102", "b:1.3.0"}]},
 "sli_equ"->{
  Cell[193486, 7135, 90, 1, 52, "Subsection",
   CellTags->{"sli_equ", "c:103", "b:1.3.1"}],
  Cell[193579, 7138, 937, 29, 114, "Text",
   CellTags->{"sli_equ", "b:1.3.1"}],
  Cell[194519, 7169, 714, 26, 89, "Text",
   CellTags->{"sli_equ", "b:1.3.1"}],
  Cell[195236, 7197, 257, 7, 65, "Text",
   CellTags->{"sli_equ", "b:1.3.1"}]},
 "c:103"->{
  Cell[193486, 7135, 90, 1, 52, "Subsection",
   CellTags->{"sli_equ", "c:103", "b:1.3.1"}]},
 "b:1.3.1"->{
  Cell[193486, 7135, 90, 1, 52, "Subsection",
   CellTags->{"sli_equ", "c:103", "b:1.3.1"}],
  Cell[193579, 7138, 937, 29, 114, "Text",
   CellTags->{"sli_equ", "b:1.3.1"}],
  Cell[194519, 7169, 714, 26, 89, "Text",
   CellTags->{"sli_equ", "b:1.3.1"}],
  Cell[195236, 7197, 257, 7, 65, "Text",
   CellTags->{"sli_equ", "b:1.3.1"}]},
 "sli_list"->{
  Cell[195530, 7209, 83, 1, 52, "Subsection",
   CellTags->{"sli_list", "c:104", "b:1.3.2"}],
  Cell[195616, 7212, 722, 27, 112, "Text",
   CellTags->{"sli_list", "b:1.3.2"}]},
 "c:104"->{
  Cell[195530, 7209, 83, 1, 52, "Subsection",
   CellTags->{"sli_list", "c:104", "b:1.3.2"}]},
 "b:1.3.2"->{
  Cell[195530, 7209, 83, 1, 52, "Subsection",
   CellTags->{"sli_list", "c:104", "b:1.3.2"}],
  Cell[195616, 7212, 722, 27, 112, "Text",
   CellTags->{"sli_list", "b:1.3.2"}]},
 "sli_split"->{
  Cell[196375, 7244, 206, 6, 52, "Subsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:105", "b:1.3.3"}],
  Cell[196584, 7252, 1264, 44, 136, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "b:1.3.3"}],
  Cell[197873, 7300, 208, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:106", "b:1.3.3"}],
  Cell[198084, 7308, 4870, 189, 245, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "b:1.3.3"}],
  Cell[202957, 7499, 2550, 101, 117, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "b:1.3.3"}],
  Cell[205544, 7605, 197, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:107", "b:1.3.3"}],
  Cell[205744, 7613, 2400, 96, 135, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "b:1.3.3"}],
  Cell[208181, 7714, 197, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:108", "b:1.3.3"}],
  Cell[208381, 7722, 1480, 54, 66, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "b:1.3.3"}],
  Cell[209898, 7781, 198, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:109", "b:1.3.3"}],
  Cell[210099, 7789, 1766, 63, 66, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "b:1.3.3"}],
  Cell[211902, 7857, 199, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:110", "b:1.3.3"}],
  Cell[212104, 7865, 1275, 48, 65, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "b:1.3.3"}],
  Cell[213416, 7918, 79, 1, 51, "Subsubsection",
   CellTags->{"sli_split", "c:111", "b:1.3.3"}],
  Cell[213498, 7921, 1440, 53, 65, "Text",
   CellTags->{"sli_split", "b:1.3.3"}],
  Cell[214975, 7979, 198, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:112", "b:1.3.3"}],
  Cell[215176, 7987, 2413, 95, 112, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "b:1.3.3"}]},
 "c:105"->{
  Cell[196375, 7244, 206, 6, 52, "Subsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:105", "b:1.3.3"}]},
 "b:1.3.3"->{
  Cell[196375, 7244, 206, 6, 52, "Subsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:105", "b:1.3.3"}],
  Cell[196584, 7252, 1264, 44, 136, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "b:1.3.3"}],
  Cell[197873, 7300, 208, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:106", "b:1.3.3"}],
  Cell[198084, 7308, 4870, 189, 245, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "b:1.3.3"}],
  Cell[202957, 7499, 2550, 101, 117, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "b:1.3.3"}],
  Cell[205544, 7605, 197, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:107", "b:1.3.3"}],
  Cell[205744, 7613, 2400, 96, 135, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "b:1.3.3"}],
  Cell[208181, 7714, 197, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:108", "b:1.3.3"}],
  Cell[208381, 7722, 1480, 54, 66, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "b:1.3.3"}],
  Cell[209898, 7781, 198, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:109", "b:1.3.3"}],
  Cell[210099, 7789, 1766, 63, 66, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "b:1.3.3"}],
  Cell[211902, 7857, 199, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:110", "b:1.3.3"}],
  Cell[212104, 7865, 1275, 48, 65, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "b:1.3.3"}],
  Cell[213416, 7918, 79, 1, 51, "Subsubsection",
   CellTags->{"sli_split", "c:111", "b:1.3.3"}],
  Cell[213498, 7921, 1440, 53, 65, "Text",
   CellTags->{"sli_split", "b:1.3.3"}],
  Cell[214975, 7979, 198, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:112", "b:1.3.3"}],
  Cell[215176, 7987, 2413, 95, 112, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "b:1.3.3"}]},
 "c:106"->{
  Cell[197873, 7300, 208, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:106", "b:1.3.3"}]},
 "c:107"->{
  Cell[205544, 7605, 197, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:107", "b:1.3.3"}]},
 "c:108"->{
  Cell[208181, 7714, 197, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:108", "b:1.3.3"}]},
 "c:109"->{
  Cell[209898, 7781, 198, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:109", "b:1.3.3"}]},
 "c:110"->{
  Cell[211902, 7857, 199, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:110", "b:1.3.3"}]},
 "c:111"->{
  Cell[213416, 7918, 79, 1, 51, "Subsubsection",
   CellTags->{"sli_split", "c:111", "b:1.3.3"}]},
 "c:112"->{
  Cell[214975, 7979, 198, 6, 51, "Subsubsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_split", "c:112", "b:1.3.3"}]},
 "sli_vsum"->{
  Cell[217638, 8088, 195, 6, 52, "Subsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_vsum", "c:113", "b:1.3.4"}],
  Cell[217836, 8096, 677, 24, 42, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_vsum", "b:1.3.4"}]},
 "c:113"->{
  Cell[217638, 8088, 195, 6, 52, "Subsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_vsum", "c:113", "b:1.3.4"}]},
 "b:1.3.4"->{
  Cell[217638, 8088, 195, 6, 52, "Subsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_vsum", "c:113", "b:1.3.4"}],
  Cell[217836, 8096, 677, 24, 42, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_vsum", "b:1.3.4"}]},
 "sli_span"->{
  Cell[218550, 8125, 225, 6, 52, "Subsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_span", "c:114", "b:1.3.5"}],
  Cell[218778, 8133, 971, 34, 65, "Text",
   Evaluatable->False,
   CellTags->{"sli_span", "b:1.3.5"}],
  Cell[219752, 8169, 1022, 38, 65, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_span", "b:1.3.5"}],
  Cell[220777, 8209, 1017, 35, 87, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_span", "b:1.3.5"}],
  Cell[221797, 8246, 1452, 50, 88, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_span", "b:1.3.5"}],
  Cell[223252, 8298, 1042, 29, 87, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_span", "b:1.3.5"}]},
 "c:114"->{
  Cell[218550, 8125, 225, 6, 52, "Subsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_span", "c:114", "b:1.3.5"}]},
 "b:1.3.5"->{
  Cell[218550, 8125, 225, 6, 52, "Subsection",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_span", "c:114", "b:1.3.5"}],
  Cell[218778, 8133, 971, 34, 65, "Text",
   Evaluatable->False,
   CellTags->{"sli_span", "b:1.3.5"}],
  Cell[219752, 8169, 1022, 38, 65, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_span", "b:1.3.5"}],
  Cell[220777, 8209, 1017, 35, 87, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_span", "b:1.3.5"}],
  Cell[221797, 8246, 1452, 50, 88, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_span", "b:1.3.5"}],
  Cell[223252, 8298, 1042, 29, 87, "Text",
   Evaluatable->False,
   InitializationCell->True,
   CellTags->{"sli_span", "b:1.3.5"}]},
 "sli_sym"->{
  Cell[224331, 8332, 77, 1, 52, "Subsection",
   CellTags->{"sli_sym", "c:115", "b:1.3.6"}],
  Cell[224411, 8335, 342, 12, 41, "Text",
   CellTags->{"sli_sym", "b:1.3.6"}],
  Cell[224756, 8349, 313, 10, 41, "Text",
   CellTags->{"sli_sym", "b:1.3.6"}],
  Cell[225072, 8361, 891, 34, 87, "Text",
   CellTags->{"sli_sym", "b:1.3.6"}]},
 "c:115"->{
  Cell[224331, 8332, 77, 1, 52, "Subsection",
   CellTags->{"sli_sym", "c:115", "b:1.3.6"}]},
 "b:1.3.6"->{
  Cell[224331, 8332, 77, 1, 52, "Subsection",
   CellTags->{"sli_sym", "c:115", "b:1.3.6"}],
  Cell[224411, 8335, 342, 12, 41, "Text",
   CellTags->{"sli_sym", "b:1.3.6"}],
  Cell[224756, 8349, 313, 10, 41, "Text",
   CellTags->{"sli_sym", "b:1.3.6"}],
  Cell[225072, 8361, 891, 34, 87, "Text",
   CellTags->{"sli_sym", "b:1.3.6"}]},
 "sli_not"->{
  Cell[226000, 8400, 75, 1, 52, "Subsection",
   CellTags->{"sli_not", "c:116", "b:1.3.7"}],
  Cell[226078, 8403, 1980, 65, 280, "Text",
   CellTags->{"sli_not", "b:1.3.7"}]},
 "c:116"->{
  Cell[226000, 8400, 75, 1, 52, "Subsection",
   CellTags->{"sli_not", "c:116", "b:1.3.7"}]},
 "b:1.3.7"->{
  Cell[226000, 8400, 75, 1, 52, "Subsection",
   CellTags->{"sli_not", "c:116", "b:1.3.7"}],
  Cell[226078, 8403, 1980, 65, 280, "Text",
   CellTags->{"sli_not", "b:1.3.7"}]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Reference Manual", 272336, 9405},
 {"c:1", 272504, 9411},
 {"c:2", 272672, 9417},
 {"c:3", 272742, 9420},
 {"b:1.0.0", 272833, 9423},
 {"c:4", 272984, 9428},
 {"b:1.0.1", 273075, 9431},
 {"c:5", 273937, 9456},
 {"c:6", 274028, 9459},
 {"c:7", 274119, 9462},
 {"c:8", 274210, 9465},
 {"c:9", 274301, 9468},
 {"b:1.0.2", 274394, 9471},
 {"c:10", 274551, 9476},
 {"b:1.0.3", 274645, 9479},
 {"c:11", 274802, 9484},
 {"b:1.0.4", 274896, 9487},
 {"c:12", 275053, 9492},
 {"b:1.0.5", 275147, 9495},
 {"c:13", 275302, 9500},
 {"sli_domain", 275383, 9503},
 {"c:14", 279308, 9594},
 {"b:1.1.0", 279417, 9597},
 {"c:15", 280369, 9620},
 {"c:16", 280477, 9623},
 {"c:17", 280585, 9626},
 {"b:1.1.1", 280693, 9629},
 {"c:18", 282184, 9664},
 {"c:19", 282292, 9667},
 {"c:20", 282400, 9670},
 {"c:21", 282508, 9673},
 {"c:22", 282617, 9676},
 {"c:23", 282726, 9679},
 {"b:1.1.2", 282835, 9682},
 {"c:24", 284341, 9717},
 {"c:25", 284450, 9720},
 {"c:26", 284559, 9723},
 {"c:27", 284668, 9726},
 {"c:28", 284778, 9729},
 {"c:29", 284887, 9732},
 {"b:1.1.3", 284982, 9735},
 {"c:30", 285438, 9748},
 {"c:31", 285533, 9751},
 {"sli_op_prop", 285635, 9754},
 {"c:32", 289194, 9835},
 {"b:1.1.4", 289304, 9838},
 {"c:33", 292863, 9919},
 {"c:34", 292974, 9922},
 {"c:35", 293085, 9925},
 {"c:36", 293196, 9928},
 {"c:37", 293307, 9931},
 {"c:38", 293418, 9934},
 {"c:39", 293529, 9937},
 {"c:40", 293640, 9940},
 {"c:41", 293751, 9943},
 {"c:42", 293862, 9946},
 {"c:43", 293973, 9949},
 {"c:44", 294084, 9952},
 {"c:45", 294195, 9955},
 {"c:46", 294271, 9958},
 {"b:1.2.0", 294366, 9961},
 {"sli_prop", 294530, 9966},
 {"c:47", 297349, 10034},
 {"b:1.2.1", 297456, 10037},
 {"c:48", 300275, 10105},
 {"c:49", 300382, 10108},
 {"c:50", 300489, 10111},
 {"c:51", 300596, 10114},
 {"c:52", 300704, 10117},
 {"c:53", 300812, 10120},
 {"c:54", 300920, 10123},
 {"c:55", 301028, 10126},
 {"c:56", 301136, 10129},
 {"c:57", 301245, 10132},
 {"sli_opt", 301356, 10135},
 {"c:58", 303308, 10181},
 {"b:1.2.2", 303416, 10184},
 {"c:59", 305368, 10230},
 {"c:60", 305475, 10233},
 {"c:61", 305582, 10236},
 {"c:62", 305689, 10239},
 {"c:63", 305796, 10242},
 {"c:64", 305903, 10245},
 {"c:65", 306010, 10248},
 {"c:66", 306141, 10252},
 {"c:67", 306248, 10255},
 {"sli_constr", 306361, 10258},
 {"c:68", 310724, 10357},
 {"b:1.2.3", 310834, 10360},
 {"c:69", 315197, 10459},
 {"c:70", 315307, 10462},
 {"c:71", 315417, 10465},
 {"c:72", 315527, 10468},
 {"c:73", 315637, 10471},
 {"c:74", 315747, 10474},
 {"c:75", 315857, 10477},
 {"c:76", 315967, 10480},
 {"c:77", 316130, 10485},
 {"c:78", 316240, 10488},
 {"c:79", 316350, 10491},
 {"c:80", 316460, 10494},
 {"c:81", 316570, 10497},
 {"c:82", 316680, 10500},
 {"c:83", 316790, 10503},
 {"c:84", 316900, 10506},
 {"c:85", 317063, 10511},
 {"c:86", 317173, 10514},
 {"c:87", 317283, 10517},
 {"c:88", 317393, 10520},
 {"c:89", 317503, 10523},
 {"c:90", 317613, 10526},
 {"sli_func", 317727, 10529},
 {"c:91", 319389, 10568},
 {"b:1.2.4", 319497, 10571},
 {"c:92", 321159, 10610},
 {"c:93", 321267, 10613},
 {"c:94", 321375, 10616},
 {"c:95", 321483, 10619},
 {"c:96", 321644, 10624},
 {"c:97", 321752, 10627},
 {"c:98", 321860, 10630},
 {"c:99", 321968, 10633},
 {"c:100", 322077, 10636},
 {"sli_eval", 322159, 10639},
 {"c:101", 323929, 10684},
 {"b:1.3.0", 324039, 10687},
 {"c:102", 325809, 10732},
 {"sli_equ", 325921, 10735},
 {"c:103", 326267, 10744},
 {"b:1.3.1", 326375, 10747},
 {"sli_list", 326724, 10756},
 {"c:104", 326913, 10761},
 {"b:1.3.2", 327022, 10764},
 {"sli_split", 327215, 10769},
 {"c:105", 329550, 10834},
 {"b:1.3.3", 329713, 10839},
 {"c:106", 332048, 10904},
 {"c:107", 332212, 10909},
 {"c:108", 332376, 10914},
 {"c:109", 332540, 10919},
 {"c:110", 332704, 10924},
 {"c:111", 332868, 10929},
 {"c:112", 332979, 10932},
 {"sli_vsum", 333146, 10937},
 {"c:113", 333439, 10946},
 {"b:1.3.4", 333601, 10951},
 {"sli_span", 333897, 10960},
 {"c:114", 334697, 10984},
 {"b:1.3.5", 334859, 10989},
 {"sli_sym", 335661, 11013},
 {"c:115", 336007, 11022},
 {"b:1.3.6", 336115, 11025},
 {"sli_not", 336463, 11034},
 {"c:116", 336651, 11039},
 {"b:1.3.7", 336759, 11042}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 225, 7, 86, "Title",
 Evaluatable->False,
 PageBreakAbove->True,
 InitializationCell->True,
 CellTags->{"Reference Manual", "c:1"}],
Cell[CellGroupData[{
Cell[817, 33, 49, 1, 72, "Section",
 CellTags->"c:2"],
Cell[869, 36, 606, 17, 111, "Text"],
Cell[CellGroupData[{
Cell[1500, 57, 78, 1, 52, "Subsection",
 CellTags->{"c:3", "b:1.0.0"}],
Cell[1581, 60, 659, 22, 112, "Text",
 CellTags->"b:1.0.0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2277, 87, 82, 1, 52, "Subsection",
 CellTags->{"c:4", "b:1.0.1"}],
Cell[CellGroupData[{
Cell[2384, 92, 155, 6, 51, "Subsubsection",
 CellTags->{"c:5", "b:1.0.1"}],
Cell[2542, 100, 2662, 91, 208, "Text",
 CellTags->"b:1.0.1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5241, 196, 75, 1, 51, "Subsubsection",
 CellTags->{"c:6", "b:1.0.1"}],
Cell[5319, 199, 1709, 57, 186, "Text",
 CellTags->"b:1.0.1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7065, 261, 75, 1, 51, "Subsubsection",
 CellTags->{"c:7", "b:1.0.1"}],
Cell[7143, 264, 962, 32, 137, "Text",
 CellTags->"b:1.0.1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8142, 301, 99, 1, 51, "Subsubsection",
 CellTags->{"c:8", "b:1.0.1"}],
Cell[8244, 304, 919, 24, 156, "Text",
 CellTags->"b:1.0.1"],
Cell[9166, 330, 513, 17, 89, "Text",
 CellTags->"b:1.0.1"],
Cell[9682, 349, 342, 10, 65, "Text",
 CellTags->"b:1.0.1"],
Cell[10027, 361, 410, 13, 64, "Text",
 CellTags->"b:1.0.1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10486, 380, 71, 1, 52, "Subsection",
 CellTags->{"c:9", "b:1.0.2"}],
Cell[10560, 383, 2238, 73, 249, "Text",
 CellTags->"b:1.0.2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12835, 461, 85, 1, 52, "Subsection",
 CellTags->{"c:10", "b:1.0.3"}],
Cell[12923, 464, 602, 13, 156, "Text",
 CellTags->"b:1.0.3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13562, 482, 72, 1, 52, "Subsection",
 CellTags->{"c:11", "b:1.0.4"}],
Cell[13637, 485, 482, 10, 110, "Text",
 CellTags->"b:1.0.4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14156, 500, 59, 1, 52, "Subsection",
 CellTags->{"c:12", "b:1.0.5"}],
Cell[14218, 503, 305, 9, 64, "Text",
 CellTags->"b:1.0.5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14572, 518, 57, 1, 72, "Section",
 CellTags->"c:13"],
Cell[CellGroupData[{
Cell[14654, 523, 102, 1, 52, "Subsection",
 CellTags->{"sli_domain", "c:14", "b:1.1.0"}],
Cell[14759, 526, 1431, 42, 228, "Text",
 CellTags->{"sli_domain", "b:1.1.0"}],
Cell[16193, 570, 529, 19, 64, "Text",
 CellTags->{"sli_domain", "b:1.1.0"}],
Cell[CellGroupData[{
Cell[16747, 593, 96, 1, 51, "Subsubsection",
 CellTags->{"sli_domain", "c:15", "b:1.1.0"}],
Cell[16846, 596, 2000, 74, 159, "Text",
 CellTags->{"sli_domain", "b:1.1.0"}],
Cell[18849, 672, 633, 24, 41, "Text",
 CellTags->{"sli_domain", "b:1.1.0"}],
Cell[19485, 698, 558, 21, 66, "Text",
 CellTags->{"sli_domain", "b:1.1.0"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[20080, 724, 96, 1, 51, "Subsubsection",
 CellTags->{"sli_domain", "c:16", "b:1.1.0"}],
Cell[20179, 727, 1994, 75, 159, "Text",
 CellTags->{"sli_domain", "b:1.1.0"}],
Cell[22176, 804, 634, 24, 41, "Text",
 CellTags->{"sli_domain", "b:1.1.0"}],
Cell[22813, 830, 396, 16, 42, "Text",
 CellTags->{"sli_domain", "b:1.1.0"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23258, 852, 99, 1, 52, "Subsection",
 CellTags->{"sli_domain", "c:17", "b:1.1.1"}],
Cell[23360, 855, 1518, 60, 161, "Text",
 CellTags->{"sli_domain", "b:1.1.1"}],
Cell[24881, 917, 400, 11, 89, "Text",
 CellTags->{"sli_domain", "b:1.1.1"}],
Cell[25284, 930, 219, 6, 64, "Text",
 CellTags->{"sli_domain", "b:1.1.1"}],
Cell[CellGroupData[{
Cell[25528, 940, 79, 1, 51, "Subsubsection",
 CellTags->{"sli_domain", "c:18", "b:1.1.1"}],
Cell[25610, 943, 361, 11, 65, "Text",
 CellTags->{"sli_domain", "b:1.1.1"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[26008, 959, 77, 1, 51, "Subsubsection",
 CellTags->{"sli_domain", "c:19", "b:1.1.1"}],
Cell[26088, 962, 308, 11, 42, "Text",
 CellTags->{"sli_domain", "b:1.1.1"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[26433, 978, 78, 1, 51, "Subsubsection",
 CellTags->{"sli_domain", "c:20", "b:1.1.1"}],
Cell[26514, 981, 738, 27, 88, "Text",
 CellTags->{"sli_domain", "b:1.1.1"}],
Cell[27255, 1010, 2662, 101, 203, "Text",
 CellTags->{"sli_domain", "b:1.1.1"}],
Cell[29920, 1113, 1151, 38, 179, "Text",
 CellTags->{"sli_domain", "b:1.1.1"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[31108, 1156, 76, 1, 51, "Subsubsection",
 CellTags->{"sli_domain", "c:21", "b:1.1.1"}],
Cell[31187, 1159, 680, 24, 88, "Text",
 CellTags->{"sli_domain", "b:1.1.1"}],
Cell[31870, 1185, 2240, 88, 158, "Text",
 CellTags->{"sli_domain", "b:1.1.1"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[34147, 1278, 77, 1, 51, "Subsubsection",
 CellTags->{"sli_domain", "c:22", "b:1.1.1"}],
Cell[34227, 1281, 769, 28, 88, "Text",
 CellTags->{"sli_domain", "b:1.1.1"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35045, 1315, 85, 1, 52, "Subsection",
 CellTags->{"sli_domain", "c:23", "b:1.1.2"}],
Cell[35133, 1318, 671, 18, 110, "Text",
 CellTags->{"sli_domain", "b:1.1.2"}],
Cell[CellGroupData[{
Cell[35829, 1340, 92, 1, 51, "Subsubsection",
 CellTags->{"sli_domain", "c:24", "b:1.1.2"}],
Cell[35924, 1343, 1340, 47, 138, "Text",
 CellTags->{"sli_domain", "b:1.1.2"}],
Cell[37267, 1392, 1842, 52, 256, "Text",
 CellTags->{"sli_domain", "b:1.1.2"}],
Cell[39112, 1446, 555, 20, 66, "Text",
 CellTags->{"sli_domain", "b:1.1.2"}],
Cell[39670, 1468, 1274, 49, 88, "Text",
 CellTags->{"sli_domain", "b:1.1.2"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[40981, 1522, 78, 1, 51, "Subsubsection",
 CellTags->{"sli_domain", "c:25", "b:1.1.2"}],
Cell[41062, 1525, 2183, 84, 136, "Text",
 CellTags->{"sli_domain", "b:1.1.2"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[43282, 1614, 95, 1, 51, "Subsubsection",
 CellTags->{"sli_domain", "c:26", "b:1.1.2"}],
Cell[43380, 1617, 938, 31, 88, "Text",
 CellTags->{"sli_domain", "b:1.1.2"}],
Cell[44321, 1650, 648, 26, 41, "Text",
 CellTags->{"sli_domain", "b:1.1.2"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[45006, 1681, 157, 2, 51, "Subsubsection",
 CellTags->{"sli_domain", "c:27", "b:1.1.2"}],
Cell[45166, 1685, 1467, 51, 135, "Text",
 CellTags->{"sli_domain", "b:1.1.2"}],
Cell[46636, 1738, 735, 28, 41, "Text",
 CellTags->{"sli_domain", "b:1.1.2"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[47408, 1771, 98, 1, 51, "Subsubsection",
 CellTags->{"sli_domain", "c:28", "b:1.1.2"}],
Cell[47509, 1774, 2094, 65, 181, "Text",
 CellTags->{"sli_domain", "b:1.1.2"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49652, 1845, 91, 1, 52, "Subsection",
 CellTags->{"c:29", "b:1.1.3"}],
Cell[49746, 1848, 1206, 31, 202, "Text",
 CellTags->"b:1.1.3"],
Cell[CellGroupData[{
Cell[50977, 1883, 65, 1, 51, "Subsubsection",
 CellTags->{"c:30", "b:1.1.3"}],
Cell[51045, 1886, 256, 9, 64, "Text",
 CellTags->"b:1.1.3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51338, 1900, 65, 1, 51, "Subsubsection",
 CellTags->{"c:31", "b:1.1.3"}],
Cell[51406, 1903, 256, 9, 64, "Text",
 CellTags->"b:1.1.3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51711, 1918, 99, 1, 52, "Subsection",
 CellTags->{"sli_op_prop", "c:32", "b:1.1.4"}],
Cell[51813, 1921, 1716, 58, 254, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],
Cell[53532, 1981, 386, 13, 65, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],
Cell[53921, 1996, 1308, 44, 159, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],
Cell[55232, 2042, 266, 10, 41, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],
Cell[55501, 2054, 932, 37, 88, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],
Cell[56436, 2093, 485, 18, 64, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],
Cell[56924, 2113, 978, 35, 134, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],
Cell[57905, 2150, 634, 23, 88, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],
Cell[58542, 2175, 1775, 63, 182, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],
Cell[60320, 2240, 235, 6, 64, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],
Cell[CellGroupData[{
Cell[60580, 2250, 139, 5, 51, "Subsubsection",
 CellTags->{"sli_op_prop", "c:33", "b:1.1.4"}],
Cell[60722, 2257, 424, 15, 41, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[61183, 2277, 137, 5, 51, "Subsubsection",
 CellTags->{"sli_op_prop", "c:34", "b:1.1.4"}],
Cell[61323, 2284, 817, 27, 65, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[62177, 2316, 139, 5, 51, "Subsubsection",
 CellTags->{"sli_op_prop", "c:35", "b:1.1.4"}],
Cell[62319, 2323, 1835, 66, 182, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[64191, 2394, 199, 5, 51, "Subsubsection",
 CellTags->{"sli_op_prop", "c:36", "b:1.1.4"}],
Cell[64393, 2401, 292, 7, 64, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],
Cell[64688, 2410, 3917, 144, 187, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],
Cell[68608, 2556, 1603, 47, 225, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[70248, 2608, 147, 5, 51, "Subsubsection",
 CellTags->{"sli_op_prop", "c:37", "b:1.1.4"}],
Cell[70398, 2615, 1633, 61, 133, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],
Cell[72034, 2678, 1646, 60, 133, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],
Cell[73683, 2740, 363, 12, 64, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[74083, 2757, 138, 5, 51, "Subsubsection",
 CellTags->{"sli_op_prop", "c:38", "b:1.1.4"}],
Cell[74224, 2764, 645, 22, 41, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[74906, 2791, 144, 5, 51, "Subsubsection",
 CellTags->{"sli_op_prop", "c:39", "b:1.1.4"}],
Cell[75053, 2798, 210, 7, 42, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}],
Cell[75266, 2807, 1221, 45, 64, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[76524, 2857, 141, 5, 51, "Subsubsection",
 CellTags->{"sli_op_prop", "c:40", "b:1.1.4"}],
Cell[76668, 2864, 676, 27, 65, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[77381, 2896, 140, 5, 51, "Subsubsection",
 CellTags->{"sli_op_prop", "c:41", "b:1.1.4"}],
Cell[77524, 2903, 978, 38, 65, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[78539, 2946, 140, 5, 51, "Subsubsection",
 CellTags->{"sli_op_prop", "c:42", "b:1.1.4"}],
Cell[78682, 2953, 1337, 46, 134, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[80056, 3004, 147, 5, 51, "Subsubsection",
 CellTags->{"sli_op_prop", "c:43", "b:1.1.4"}],
Cell[80206, 3011, 1501, 54, 157, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[81744, 3070, 168, 5, 51, "Subsubsection",
 CellTags->{"sli_op_prop", "c:44", "b:1.1.4"}],
Cell[81915, 3077, 4536, 164, 321, "Text",
 CellTags->{"sli_op_prop", "b:1.1.4"}]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86512, 3248, 73, 1, 72, "Section",
 CellTags->"c:45"],
Cell[CellGroupData[{
Cell[86610, 3253, 66, 1, 52, "Subsection",
 CellTags->{"c:46", "b:1.2.0"}],
Cell[86679, 3256, 2301, 61, 363, "Text",
 CellTags->"b:1.2.0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89017, 3322, 97, 1, 52, "Subsection",
 CellTags->{"sli_prop", "c:47", "b:1.2.1"}],
Cell[89117, 3325, 280, 7, 64, "Text",
 CellTags->{"sli_prop", "b:1.2.1"}],
Cell[CellGroupData[{
Cell[89422, 3336, 78, 1, 51, "Subsubsection",
 CellTags->{"sli_prop", "c:48", "b:1.2.1"}],
Cell[89503, 3339, 1219, 45, 133, "Text",
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[90759, 3389, 74, 1, 51, "Subsubsection",
 CellTags->{"sli_prop", "c:49", "b:1.2.1"}],
Cell[90836, 3392, 864, 17, 225, "Text",
 CellTags->{"sli_prop", "b:1.2.1"}],
Cell[91703, 3411, 898, 27, 88, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_prop", "b:1.2.1"}],
Cell[92604, 3440, 892, 31, 88, "Text",
 Evaluatable->False,
 CellTags->{"sli_prop", "b:1.2.1"}],
Cell[93499, 3473, 3508, 109, 342, "Text",
 CellTags->{"sli_prop", "b:1.2.1"}],
Cell[97010, 3584, 1722, 60, 159, "Text",
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[98769, 3649, 95, 1, 51, "Subsubsection",
 CellTags->{"sli_prop", "c:50", "b:1.2.1"}],
Cell[98867, 3652, 1165, 37, 134, "Text",
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[100069, 3694, 85, 1, 51, "Subsubsection",
 CellTags->{"sli_prop", "c:51", "b:1.2.1"}],
Cell[100157, 3697, 1127, 39, 133, "Text",
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[101321, 3741, 86, 1, 51, "Subsubsection",
 CellTags->{"sli_prop", "c:52", "b:1.2.1"}],
Cell[101410, 3744, 476, 18, 64, "Text",
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[101923, 3767, 93, 1, 51, "Subsubsection",
 CellTags->{"sli_prop", "c:53", "b:1.2.1"}],
Cell[102019, 3770, 201, 6, 41, "Text",
 CellTags->{"sli_prop", "b:1.2.1"}],
Cell[102223, 3778, 1827, 60, 203, "Text",
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[104087, 3843, 75, 1, 51, "Subsubsection",
 CellTags->{"sli_prop", "c:54", "b:1.2.1"}],
Cell[104165, 3846, 1593, 50, 204, "Text",
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[105795, 3901, 85, 1, 51, "Subsubsection",
 CellTags->{"sli_prop", "c:55", "b:1.2.1"}],
Cell[105883, 3904, 790, 26, 87, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_prop", "b:1.2.1"}],
Cell[106676, 3932, 2550, 99, 210, "Text",
 CellTags->{"sli_prop", "b:1.2.1"}],
Cell[109229, 4033, 519, 11, 111, "Text",
 CellTags->{"sli_prop", "b:1.2.1"}],
Cell[109751, 4046, 570, 18, 88, "Text",
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[110358, 4069, 105, 1, 51, "Subsubsection",
 CellTags->{"sli_prop", "c:56", "b:1.2.1"}],
Cell[110466, 4072, 640, 18, 133, "Text",
 CellTags->{"sli_prop", "b:1.2.1"}],
Cell[111109, 4092, 132, 3, 41, "Text",
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[111278, 4100, 78, 1, 51, "Subsubsection",
 CellTags->{"sli_prop", "c:57", "b:1.2.1"}],
Cell[111359, 4103, 969, 33, 111, "Text",
 CellTags->{"sli_prop", "b:1.2.1"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[112377, 4142, 136, 3, 52, "Subsection",
 CellTags->{"sli_opt", "c:58", "b:1.2.2"}],
Cell[112516, 4147, 674, 19, 156, "Text",
 CellTags->{"sli_opt", "b:1.2.2"}],
Cell[CellGroupData[{
Cell[113215, 4170, 88, 1, 51, "Subsubsection",
 CellTags->{"sli_opt", "c:59", "b:1.2.2"}],
Cell[113306, 4173, 3354, 118, 321, "Text",
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[116697, 4296, 75, 1, 51, "Subsubsection",
 CellTags->{"sli_opt", "c:60", "b:1.2.2"}],
Cell[116775, 4299, 625, 16, 87, "Text",
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[117437, 4320, 74, 1, 51, "Subsubsection",
 CellTags->{"sli_opt", "c:61", "b:1.2.2"}],
Cell[117514, 4323, 608, 16, 87, "Text",
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[118159, 4344, 84, 1, 51, "Subsubsection",
 CellTags->{"sli_opt", "c:62", "b:1.2.2"}],
Cell[118246, 4347, 435, 13, 64, "Text",
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[118718, 4365, 78, 1, 51, "Subsubsection",
 CellTags->{"sli_opt", "c:63", "b:1.2.2"}],
Cell[118799, 4368, 530, 19, 64, "Text",
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[119366, 4392, 74, 1, 51, "Subsubsection",
 CellTags->{"sli_opt", "c:64", "b:1.2.2"}],
Cell[119443, 4395, 1424, 44, 184, "Text",
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[120904, 4444, 172, 5, 51, "Subsubsection",
 Evaluatable->False,
 CellTags->{"sli_opt", "c:65", "b:1.2.2"}],
Cell[121079, 4451, 1809, 54, 253, "Text",
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[122925, 4510, 83, 1, 51, "Subsubsection",
 CellTags->{"sli_opt", "c:66", "b:1.2.2"}],
Cell[123011, 4513, 548, 19, 65, "Text",
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[123596, 4537, 81, 1, 51, "Subsubsection",
 CellTags->{"sli_opt", "c:67", "b:1.2.2"}],
Cell[123680, 4540, 291, 10, 41, "Text",
 CellTags->{"sli_opt", "b:1.2.2"}],
Cell[123974, 4552, 569, 14, 87, "Text",
 CellTags->{"sli_opt", "b:1.2.2"}],
Cell[124546, 4568, 766, 24, 87, "Text",
 CellTags->{"sli_opt", "b:1.2.2"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[125361, 4598, 94, 1, 52, "Subsection",
 CellTags->{"sli_constr", "c:68", "b:1.2.3"}],
Cell[125458, 4601, 470, 11, 110, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}],
Cell[CellGroupData[{
Cell[125953, 4616, 82, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:69", "b:1.2.3"}],
Cell[126038, 4619, 2744, 95, 322, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[128819, 4719, 79, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:70", "b:1.2.3"}],
Cell[128901, 4722, 893, 32, 88, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[129831, 4759, 82, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:71", "b:1.2.3"}],
Cell[129916, 4762, 2114, 75, 155, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[132067, 4842, 92, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:72", "b:1.2.3"}],
Cell[132162, 4845, 668, 25, 65, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[132867, 4875, 87, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:73", "b:1.2.3"}],
Cell[132957, 4878, 1401, 49, 134, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[134395, 4932, 81, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:74", "b:1.2.3"}],
Cell[134479, 4935, 1108, 38, 64, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[135624, 4978, 86, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:75", "b:1.2.3"}],
Cell[135713, 4981, 955, 34, 64, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[136705, 5020, 209, 6, 51, "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_constr", "c:76", "b:1.2.3"}],
Cell[136917, 5028, 1701, 63, 94, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[138655, 5096, 79, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:77", "b:1.2.3"}],
Cell[138737, 5099, 2341, 81, 227, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[141115, 5185, 80, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:78", "b:1.2.3"}],
Cell[141198, 5188, 1732, 63, 111, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[142967, 5256, 85, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:79", "b:1.2.3"}],
Cell[143055, 5259, 956, 34, 87, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[144048, 5298, 85, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:80", "b:1.2.3"}],
Cell[144136, 5301, 975, 38, 64, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[145148, 5344, 76, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:81", "b:1.2.3"}],
Cell[145227, 5347, 1174, 43, 88, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[146438, 5395, 94, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:82", "b:1.2.3"}],
Cell[146535, 5398, 1788, 70, 110, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[148360, 5473, 77, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:83", "b:1.2.3"}],
Cell[148440, 5476, 1244, 45, 110, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[149721, 5526, 194, 6, 51, "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_constr", "c:84", "b:1.2.3"}],
Cell[149918, 5534, 2149, 77, 181, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[152104, 5616, 87, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:85", "b:1.2.3"}],
Cell[152194, 5619, 3285, 124, 281, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[155516, 5748, 85, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:86", "b:1.2.3"}],
Cell[155604, 5751, 9022, 307, 593, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[164663, 6063, 85, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:87", "b:1.2.3"}],
Cell[164751, 6066, 1438, 48, 111, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[166226, 6119, 85, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:88", "b:1.2.3"}],
Cell[166314, 6122, 1953, 70, 110, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[168304, 6197, 90, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:89", "b:1.2.3"}],
Cell[168397, 6200, 1619, 57, 110, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[170053, 6262, 98, 1, 51, "Subsubsection",
 CellTags->{"sli_constr", "c:90", "b:1.2.3"}],
Cell[170154, 6265, 849, 22, 185, "Text",
 CellTags->{"sli_constr", "b:1.2.3"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[171052, 6293, 92, 1, 52, "Subsection",
 CellTags->{"sli_func", "c:91", "b:1.2.4"}],
Cell[171147, 6296, 872, 20, 180, "Text",
 CellTags->{"sli_func", "b:1.2.4"}],
Cell[CellGroupData[{
Cell[172044, 6320, 70, 1, 51, "Subsubsection",
 CellTags->{"sli_func", "c:92", "b:1.2.4"}],
Cell[172117, 6323, 820, 30, 114, "Text",
 CellTags->{"sli_func", "b:1.2.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[172974, 6358, 72, 1, 51, "Subsubsection",
 CellTags->{"sli_func", "c:93", "b:1.2.4"}],
Cell[173049, 6361, 1621, 60, 160, "Text",
 CellTags->{"sli_func", "b:1.2.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[174707, 6426, 72, 1, 51, "Subsubsection",
 CellTags->{"sli_func", "c:94", "b:1.2.4"}],
Cell[174782, 6429, 815, 32, 90, "Text",
 CellTags->{"sli_func", "b:1.2.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[175634, 6466, 192, 6, 51, "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_func", "c:95", "b:1.2.4"}],
Cell[175829, 6474, 666, 25, 89, "Text",
 CellTags->{"sli_func", "b:1.2.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[176532, 6504, 78, 1, 51, "Subsubsection",
 CellTags->{"sli_func", "c:96", "b:1.2.4"}],
Cell[176613, 6507, 905, 32, 89, "Text",
 CellTags->{"sli_func", "b:1.2.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[177555, 6544, 75, 1, 51, "Subsubsection",
 CellTags->{"sli_func", "c:97", "b:1.2.4"}],
Cell[177633, 6547, 849, 31, 114, "Text",
 CellTags->{"sli_func", "b:1.2.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[178519, 6583, 78, 1, 51, "Subsubsection",
 CellTags->{"sli_func", "c:98", "b:1.2.4"}],
Cell[178600, 6586, 2970, 100, 274, "Text",
 CellTags->{"sli_func", "b:1.2.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[181607, 6691, 72, 1, 51, "Subsubsection",
 CellTags->{"sli_func", "c:99", "b:1.2.4"}],
Cell[181682, 6694, 264, 9, 42, "Text",
 CellTags->{"sli_func", "b:1.2.4"}]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[182007, 6710, 44, 1, 72, "Section",
 CellTags->"c:100"],
Cell[CellGroupData[{
Cell[182076, 6715, 103, 1, 52, "Subsection",
 CellTags->{"sli_eval", "c:101", "b:1.3.0"}],
Cell[182182, 6718, 563, 22, 42, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_eval", "b:1.3.0"}],
Cell[182748, 6742, 921, 34, 64, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_eval", "b:1.3.0"}],
Cell[183672, 6778, 1837, 56, 206, "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],
Cell[185512, 6836, 866, 25, 136, "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],
Cell[186381, 6863, 463, 15, 65, "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],
Cell[186847, 6880, 491, 16, 88, "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],
Cell[187341, 6898, 494, 14, 88, "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],
Cell[187838, 6914, 1050, 38, 87, "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],
Cell[188891, 6954, 302, 10, 41, "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],
Cell[189196, 6966, 625, 18, 87, "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],
Cell[189824, 6986, 1010, 39, 65, "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],
Cell[CellGroupData[{
Cell[190859, 7029, 87, 1, 51, "Subsubsection",
 CellTags->{"sli_eval", "c:102", "b:1.3.0"}],
Cell[190949, 7032, 421, 15, 42, "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],
Cell[191373, 7049, 321, 10, 42, "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],
Cell[191697, 7061, 257, 9, 42, "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],
Cell[191957, 7072, 259, 9, 42, "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],
Cell[192219, 7083, 333, 11, 66, "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],
Cell[192555, 7096, 464, 17, 41, "Text",
 CellTags->{"sli_eval", "b:1.3.0"}],
Cell[193022, 7115, 415, 14, 44, "Text",
 CellTags->{"sli_eval", "b:1.3.0"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193486, 7135, 90, 1, 52, "Subsection",
 CellTags->{"sli_equ", "c:103", "b:1.3.1"}],
Cell[193579, 7138, 937, 29, 114, "Text",
 CellTags->{"sli_equ", "b:1.3.1"}],
Cell[194519, 7169, 714, 26, 89, "Text",
 CellTags->{"sli_equ", "b:1.3.1"}],
Cell[195236, 7197, 257, 7, 65, "Text",
 CellTags->{"sli_equ", "b:1.3.1"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[195530, 7209, 83, 1, 52, "Subsection",
 CellTags->{"sli_list", "c:104", "b:1.3.2"}],
Cell[195616, 7212, 722, 27, 112, "Text",
 CellTags->{"sli_list", "b:1.3.2"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[196375, 7244, 206, 6, 52, "Subsection",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_split", "c:105", "b:1.3.3"}],
Cell[196584, 7252, 1264, 44, 136, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_split", "b:1.3.3"}],
Cell[CellGroupData[{
Cell[197873, 7300, 208, 6, 51, "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_split", "c:106", "b:1.3.3"}],
Cell[198084, 7308, 4870, 189, 245, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_split", "b:1.3.3"}],
Cell[202957, 7499, 2550, 101, 117, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_split", "b:1.3.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[205544, 7605, 197, 6, 51, "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_split", "c:107", "b:1.3.3"}],
Cell[205744, 7613, 2400, 96, 135, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_split", "b:1.3.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[208181, 7714, 197, 6, 51, "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_split", "c:108", "b:1.3.3"}],
Cell[208381, 7722, 1480, 54, 66, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_split", "b:1.3.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[209898, 7781, 198, 6, 51, "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_split", "c:109", "b:1.3.3"}],
Cell[210099, 7789, 1766, 63, 66, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_split", "b:1.3.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[211902, 7857, 199, 6, 51, "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_split", "c:110", "b:1.3.3"}],
Cell[212104, 7865, 1275, 48, 65, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_split", "b:1.3.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[213416, 7918, 79, 1, 51, "Subsubsection",
 CellTags->{"sli_split", "c:111", "b:1.3.3"}],
Cell[213498, 7921, 1440, 53, 65, "Text",
 CellTags->{"sli_split", "b:1.3.3"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[214975, 7979, 198, 6, 51, "Subsubsection",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_split", "c:112", "b:1.3.3"}],
Cell[215176, 7987, 2413, 95, 112, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_split", "b:1.3.3"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[217638, 8088, 195, 6, 52, "Subsection",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_vsum", "c:113", "b:1.3.4"}],
Cell[217836, 8096, 677, 24, 42, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_vsum", "b:1.3.4"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[218550, 8125, 225, 6, 52, "Subsection",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_span", "c:114", "b:1.3.5"}],
Cell[218778, 8133, 971, 34, 65, "Text",
 Evaluatable->False,
 CellTags->{"sli_span", "b:1.3.5"}],
Cell[219752, 8169, 1022, 38, 65, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_span", "b:1.3.5"}],
Cell[220777, 8209, 1017, 35, 87, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_span", "b:1.3.5"}],
Cell[221797, 8246, 1452, 50, 88, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_span", "b:1.3.5"}],
Cell[223252, 8298, 1042, 29, 87, "Text",
 Evaluatable->False,
 InitializationCell->True,
 CellTags->{"sli_span", "b:1.3.5"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[224331, 8332, 77, 1, 52, "Subsection",
 CellTags->{"sli_sym", "c:115", "b:1.3.6"}],
Cell[224411, 8335, 342, 12, 41, "Text",
 CellTags->{"sli_sym", "b:1.3.6"}],
Cell[224756, 8349, 313, 10, 41, "Text",
 CellTags->{"sli_sym", "b:1.3.6"}],
Cell[225072, 8361, 891, 34, 87, "Text",
 CellTags->{"sli_sym", "b:1.3.6"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[226000, 8400, 75, 1, 52, "Subsection",
 CellTags->{"sli_not", "c:116", "b:1.3.7"}],
Cell[226078, 8403, 1980, 65, 280, "Text",
 CellTags->{"sli_not", "b:1.3.7"}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
